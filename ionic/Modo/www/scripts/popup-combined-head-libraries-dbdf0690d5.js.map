{"version":3,"sources":["js/qmLogger.js","js/qmChrome.js","lib/bugsnag/dist/node_modules/browser-pack-flat/_prelude","lib/bugsnag/dist/base/lib/es-utils.js","lib/bugsnag/dist/base/breadcrumb.js","lib/bugsnag/dist/base/lib/positive-int-check.js","lib/bugsnag/dist/base/config.js","lib/bugsnag/dist/base/lib/infer-release-stage.js","lib/bugsnag/dist/base/lib/has-stack.js","lib/bugsnag/dist/node_modules/stackframe/stackframe.js","lib/bugsnag/dist/node_modules/error-stack-parser/error-stack-parser.js","lib/bugsnag/dist/node_modules/stack-generator/stack-generator.js","lib/bugsnag/dist/base/report.js","lib/bugsnag/dist/node_modules/@bugsnag/cuid/lib/pad.js","lib/bugsnag/dist/node_modules/@bugsnag/cuid/lib/fingerprint.browser.js","lib/bugsnag/dist/node_modules/@bugsnag/cuid/index.js","lib/bugsnag/dist/base/session.js","lib/bugsnag/dist/node_modules/iserror/index.js","lib/bugsnag/dist/base/client.js","lib/bugsnag/dist/base/plugins/throttle.js","lib/bugsnag/dist/browser/config.js","lib/bugsnag/dist/browser/plugins/console-breadcrumbs.js","lib/bugsnag/dist/browser/plugins/context.js","lib/bugsnag/dist/browser/plugins/device.js","lib/bugsnag/dist/browser/plugins/inline-script-content.js","lib/bugsnag/dist/browser/plugins/interaction-breadcrumbs.js","lib/bugsnag/dist/browser/plugins/ip.js","lib/bugsnag/dist/browser/plugins/navigation-breadcrumbs.js","lib/bugsnag/dist/browser/plugins/network-breadcrumbs.js","lib/bugsnag/dist/browser/plugins/request.js","lib/bugsnag/dist/browser/plugins/sessions.js","lib/bugsnag/dist/browser/plugins/strip-query-string.js","lib/bugsnag/dist/browser/plugins/unhandled-rejection.js","lib/bugsnag/dist/browser/plugins/window-onerror.js","lib/bugsnag/dist/node_modules/@bugsnag/safe-json-stringify/index.js","lib/bugsnag/dist/browser/transports/lib/payload.js","lib/bugsnag/dist/browser/transports/x-domain-request.js","lib/bugsnag/dist/browser/transports/xml-http-request.js","lib/bugsnag/dist/browser/index.js","lib/bugsnag/dist/node_modules/browser-pack-flat/_postlude","lib/quantimodo/quantimodo-web.js","lib/localforage/dist/localforage.js","lib/underscore/underscore.js","js/qmHelpers.js","js/popup.js"],"names":["getCalleeFunction","callee","arguments","caller","getCalleeFunctionName","name","error","console","debug","getCallerFunctionName","getCallerFunction","addCallerFunctionToMessage","message","qm","platform","browser","isFirefox","f","exports","module","define","amd","window","global","self","this","bugsnag","reduce","arr","fn","accum","val","i","len","length","_hasDontEnumBug","toString","propertyIsEnumerable","_dontEnums","_pad","n","_$esUtils_4","item","concat","x","obj","result","prop","Object","prototype","hasOwnProperty","call","push","d","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","__isoDate_1","_$BugsnagBreadcrumb_1","BugsnagBreadcrumb","undefined","metaData","type","timestamp","_classCallCheck","toJSON","__includes_7","_$positiveIntCheck_7","value","parseInt","__filter_3","__reduce_3","__keys_3","__isArray_3","_$config_3","schema","apiKey","defaultValue","validate","appVersion","autoNotify","beforeSend","endpoint","sessionEndpoint","autoCaptureSessions","notifyReleaseStages","releaseStage","maxBreadcrumbs","autoBreadcrumbs","user","logger","method","mergeDefaults","opts","Error","key","errors","valid","_$inferReleaseStage_6","client","app","config","_$hasStack_5","err","stack","stacktrace","root","factory","_$stackframe_36","StackFrame","_isNumber","isNaN","parseFloat","isFinite","_capitalize","str","charAt","toUpperCase","substring","_getter","p","booleanProps","numericProps","stringProps","props","getArgs","args","setArgs","v","TypeError","getEvalOrigin","evalOrigin","setEvalOrigin","getFunctionName","join","getFileName","getLineNumber","getColumnNumber","Boolean","j","Number","k","String","_$errorStackParser_33","ErrorStackParser","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","parseOpera","match","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","indexOf","parts","exec","replace","split","filter","line","map","tokens","locationParts","pop","functionName","fileName","lineNumber","columnNumber","source","e","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","shift","_$stackGenerator_35","StackGenerator","backtrace","maxStackSize","curr","Array","test","RegExp","$1","__reduce_9","__filter_9","BugsnagReport","errorClass","errorMessage","handledState","defaultHandledState","___classCallCheck_9","__isBugsnagReport","_ignored","_handledState","breadcrumbs","context","device","stringOrFallback","groupingHash","request","severity","frame","formatStackframe","JSON","stringify","session","ignore","isIgnored","updateMetaData","section","_updates","updates","removeMetaData","_extends","property","payloadVersion","exceptions","unhandled","severityReason","file","normaliseFunctionName","code","inProject","fallback","getStacktrace","errorFramesToSkip","generatedFramesToSkip","ensureReport","reportOrError","_$BugsnagReport_9","_$pad_31","num","size","s","substr","env","globalCount","mimeTypesLength","navigator","mimeTypes","clientId","userAgent","_$fingerprint_30","c","blockSize","base","discreteValues","Math","pow","randomBlock","random","cuid","getTime","fingerprint","_$cuid_29","__isoDate_10","_$Session_10","Session","___classCallCheck_10","id","startedAt","_handled","_unhandled","events","handled","trackError","report","_$isError_34","__map_2","__reduce_2","__includes_2","__isArray_2","noop","BugsnagClient","notifier","configSchema","___classCallCheck_2","version","url","_configured","_transport","sendSession","sendReport","_logger","info","warn","plugins","beforeSession","BugsnagSession","configure","___extends_2","validity","use","plugin","init","transport","t","l","sid","sessionDelegate","_sessionDelegate","startSession","leaveBreadcrumb","crumb","notify","_normaliseError","normaliseError","_opts","originalSeverity","notifyArgs","hasNecessaryFields","_$BugsnagClient_2","_$throttle_8","maxEvents","refresh","__map_11","_$config_11","location","host","collectUserIp","___extends_11","getPrefixedConsole","consoleLog","consoleMethod","bind","__map_13","__reduce_13","__filter_13","_$consoleBreadcrumbs_13","CONSOLE_LOG_METHODS","original","_len","_key","arg","stringified","apply","_restore","consoleBreadcrumbsEnabled","_$context_14","unshift","pathname","__isoDate_15","_$device_15","___extends_15","time","locale","browserLanguage","systemLanguage","userLanguage","language","__reduce_16","scriptStartRe","scriptEndRe","extractScriptContent","_$inlineScriptContent_16","html","DOMContentLoaded","getHtml","document","documentElement","outerHTML","originalLocation","href","onreadystatechange","readyState","htmlLines","_extractScriptContent","script","start","abs","content","startLine","end","_$interactionBreadcrumbs_17","addEventListener","event","targetText","targetSelector","getNodeText","target","getNodeSelector","el","tagName","className","querySelectorAll","parentNode","childNodes","index","interactionBreadcrumbsEnabled","text","textContent","innerText","_$ip_18","___extends_18","clientIp","drop","oldURL","from","relativeLocation","to","newURL","state","history","replaceState","wrapHistoryFn","pushState","navigationBreadcrumbsEnabled","a","createElement","search","hash","orig","title","currentPath","prevState","stateChangeToMetaData","BREADCRUMB_TYPE","REQUEST_URL_KEY","REQUEST_METHOD_KEY","_$networkBreadcrumbs_20","_client","monkeyPatchXMLHttpRequest","monkeyPatchFetch","networkBreadcrumbsEnabled","XMLHttpRequest","nativeOpen","open","removeEventListener","handleXHRLoad","handleXHRError","status","oldFetch","fetch","options","Promise","resolve","reject","then","response","handleFetchSuccess","handleFetchError","_$request_21","___extends_21","__map_22","__isArray_22","__includes_22","_$sessions_22","sessionClient","___extends_22","sessions","__map_23","strip","_$stripQueryString_23","___extends_23","_strip","__reduce_24","_$unhandledRejection_24","listener","reason","isBluebird","detail","fixBluebirdStacktrace","serializableReason","onunhandledrejection","promise","_ref","_$windowOnerror_25","prevOnError","onerror","messageOrEvent","lineNo","charNo","decorateStack","culprit","setFileName","setLineNumber","setColumnNumber","errorCharacter","_$safeJsonStringify_32","data","replacer","space","seen","edges","visit","depth","edgesExceeded","MIN_PRESERVED_DEPTH","MAX_EDGES","MAX_DEPTH","REPLACEMENT_NODE","haystack","needle","find","fResult","throwsMessage","__isArray_32","aResult","safelyGetProp","_$payload_26","payload","__isoDate_27","matchPageProtocol","_$xDomainRequest_27","cb","protocol","encodeURIComponent","req","XDomainRequest","onload","responseText","setTimeout","send","_matchPageProtocol","pageProtocol","__isoDate_28","_$xmlHttpRequest_28","DONE","setRequestHeader","__map_12","__reduce_12","__schema_12","___extends_12","_$navigationBreadcrumbs_19","transports","_$browser_12","userPlugins","sessionTrackingEnabled","finalSchema","inferBreadcrumbSetting","defaultInDev","Bugsnag","Client","Report","Breadcrumb","Quantimodo","r","o","require","u","1","Emitter","mixin","on","_callbacks","once","off","removeListener","removeAllListeners","callbacks","splice","emit","listeners","hasListeners","2","RequestBase","isObject","isFunction","ResponseBase","shouldRetry","Request","getXHR","ActiveXObject","trim","serialize","pairs","pushEncodedKeyValuePair","isArray","forEach","subkey","parseString","pair","pos","decodeURIComponent","isJSON","mime","Response","xhr","responseType","statusText","_setStatusProperties","header","headers","field","fields","toLowerCase","parseHeader","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","body","_parseBody","_query","_header","new_err","res","rawResponse","statusCode","callback","_isResponseOK","del","serializeObject","types","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","_parser","toError","msg","set","accept","auth","pass","btoa","username","password","query","attach","_data","_getFormData","append","_formData","FormData","_maxRetries","_retries","_retry","_callback","clearTimeout","retries","crossDomainError","crossDomain","buffer","ca","agent","pipe","write","_appendQueryString","_sort","queryArr","sort","_isHost","_endCalled","_end","_setTimeouts","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","onprogress","upload","_withCredentials","withCredentials","contentType","_serializer","get","head","patch","post","put","./is-function","./is-object","./request-base","./response-base","./should-retry","component-emitter","3","4","5","_timer","timeout","_timeout","_responseTimeout","option","deadline","retry","count","_fullfilledPromise","innerResolve","innerReject","catch","ok","_okCallback","getHeader","unset","abort","redirects","_maxRedirects","isObj","sortQuery","_timeoutError","errno","6","utils","ct","params","links","link","parseLinks","statusType","redirect","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","./utils","7","ERROR_CODES","8","cleanHeader","shouldStripCookie","9","Buffer","superagent","querystring","basePath","authentications","access_token","in","client_id","quantimodo_oauth2","defaultHeaders","cache","enableCookies","requestAgent","paramToString","param","buildUrl","path","pathParams","_this","fullMatch","isJsonMime","jsonPreferredMime","contentTypes","isFileParam","fs","ReadStream","Blob","File","normalizeParams","newParams","CollectionFormatEnum","CSV","SSV","TSV","PIPES","MULTI","buildCollectionParam","collectionFormat","applyAuthToRequest","authNames","authName","apiKeyPrefix","accessToken","Authorization","deserialize","returnType","keys","convertToType","callApi","httpMethod","queryParams","collectionQueryParams","headerParams","formParams","bodyParam","accepts","_formParams","attachCookies","saveCookies","parseDate","constructFromObject","itemType","keyType","valueType","instance","ApiClient","10","Correlation","GetCorrelationsResponse","apiClient","getCorrelationExplanations","causeVariableName","effectVariableName","getCorrelations","limit","offset","userId","correlationCoefficient","updatedAt","outcomesOfInterest","commonOnly","AnalyticsApi","../ApiClient","../model/Correlation","../model/GetCorrelationsResponse","11","AppSettingsResponse","JsonErrorResponse","getAppSettings","client_secret","AppSettingsApi","../model/AppSettingsResponse","../model/JsonErrorResponse","12","getAccessToken","grantType","scope","grant_type","response_type","redirect_uri","getOauthAuthorizationCode","postGoogleIdToken","AuthenticationApi","13","GetConnectorsResponse","connectConnector","connectorName","disconnectConnector","getConnectors","getIntegrationJs","getMobileConnectPage","updateConnector","ConnectorsApi","../model/GetConnectorsResponse","14","CommonResponse","Measurement","MeasurementDelete","MeasurementSet","MeasurementUpdate","Pair","PostMeasurementsResponse","deleteMeasurement","postBody","getMeasurements","variableName","variableCategoryName","sourceName","unitName","earliestMeasurementTime","latestMeasurementTime","createdAt","groupingWidth","groupingTimezone","doNotProcess","doNotConvert","minMaxFilter","getPairs","effectUnitName","causeUnitName","onsetDelay","durationOfAction","measurementExportRequest","postMeasurements","updateMeasurement","MeasurementsApi","../model/CommonResponse","../model/Measurement","../model/MeasurementDelete","../model/MeasurementSet","../model/MeasurementUpdate","../model/Pair","../model/PostMeasurementsResponse","15","DeviceToken","getNotificationPreferences","postDeviceToken","NotificationsApi","../model/DeviceToken","16","GetTrackingReminderNotificationsResponse","PostTrackingRemindersResponse","TrackingReminder","TrackingReminderDelete","TrackingReminderNotificationPost","deleteTrackingReminder","getTrackingReminderNotifications","reminderTime","onlyPast","includeDeleted","getTrackingReminders","postTrackingReminderNotifications","postTrackingReminders","RemindersApi","../model/GetTrackingReminderNotificationsResponse","../model/PostTrackingRemindersResponse","../model/TrackingReminder","../model/TrackingReminderDelete","../model/TrackingReminderNotificationPost","17","GetSharesResponse","ShareInvitationBody","User","deleteShare","clientIdToRevoke","getShares","log","pwd","inviteShare","SharesApi","../model/GetSharesResponse","../model/ShareInvitationBody","../model/User","18","GetStudiesResponse","PostStudyCreateResponse","PostStudyPublishResponse","Study","StudyCreationBody","StudyJoinResponse","Vote","VoteDelete","createStudy","deleteVote","getOpenStudies","includeCharts","recalculate","studyId","getStudies","principalInvestigatorUserId","joined","created","population","getStudiesCreated","getStudiesJoined","getStudy","joinStudy","postVote","publishStudy","StudiesApi","../model/GetStudiesResponse","../model/PostStudyCreateResponse","../model/PostStudyPublishResponse","../model/Study","../model/StudyCreationBody","../model/StudyJoinResponse","../model/Vote","../model/VoteDelete","19","Unit","UnitCategory","getUnitCategories","getUnits","UnitsApi","../model/Unit","../model/UnitCategory","20","PostUserSettingsResponse","deleteUser","getUser","clientUserId","includeAuthorizedClients","postUserSettings","UserApi","../model/PostUserSettingsResponse","21","UserTag","UserVariableDelete","Variable","VariableCategory","deleteUserTag","taggedVariableId","tagVariableId","deleteUserVariable","variableId","getVariableCategories","getVariables","numberOfRawMeasurements","lastSourceName","includePublic","manualTracking","upc","effectOrCause","publicEffectOrCause","exactMatch","variableCategoryId","includePrivate","searchPhrase","synonyms","joinVariableId","parentUserTagVariableId","childUserTagVariableId","ingredientUserTagVariableId","ingredientOfUserTagVariableId","userOnly","includeTags","concise","postUserTags","postUserVariables","userVariables","resetUserVariableSettings","VariablesApi","../model/UserTag","../model/UserVariableDelete","../model/Variable","../model/VariableCategory","22","AppSettings","AuthorizedClients","Button","Card","Chart","ConnectInstructions","ConversionStep","DataSource","Explanation","ExplanationStartTracking","GetCorrelationsDataResponse","Image","InputField","MeasurementItem","ParticipantInstruction","PostMeasurementsDataResponse","PostTrackingRemindersDataResponse","PostUserSettingsDataResponse","StudyCharts","StudyHtml","StudyImages","StudyLinks","StudySharing","StudyText","StudyVotes","TrackingReminderNotification","TrackingReminderNotificationAction","TrackingReminderNotificationTrackAllAction","VariableCharts","./ApiClient","./api/AnalyticsApi","./api/AppSettingsApi","./api/AuthenticationApi","./api/ConnectorsApi","./api/MeasurementsApi","./api/NotificationsApi","./api/RemindersApi","./api/SharesApi","./api/StudiesApi","./api/UnitsApi","./api/UserApi","./api/VariablesApi","./model/AppSettings","./model/AppSettingsResponse","./model/AuthorizedClients","./model/Button","./model/Card","./model/Chart","./model/CommonResponse","./model/ConnectInstructions","./model/ConversionStep","./model/Correlation","./model/DataSource","./model/DeviceToken","./model/Explanation","./model/ExplanationStartTracking","./model/GetConnectorsResponse","./model/GetCorrelationsDataResponse","./model/GetCorrelationsResponse","./model/GetSharesResponse","./model/GetStudiesResponse","./model/GetTrackingReminderNotificationsResponse","./model/Image","./model/InputField","./model/JsonErrorResponse","./model/Measurement","./model/MeasurementDelete","./model/MeasurementItem","./model/MeasurementSet","./model/MeasurementUpdate","./model/Pair","./model/ParticipantInstruction","./model/PostMeasurementsDataResponse","./model/PostMeasurementsResponse","./model/PostStudyCreateResponse","./model/PostStudyPublishResponse","./model/PostTrackingRemindersDataResponse","./model/PostTrackingRemindersResponse","./model/PostUserSettingsDataResponse","./model/PostUserSettingsResponse","./model/ShareInvitationBody","./model/Study","./model/StudyCharts","./model/StudyCreationBody","./model/StudyHtml","./model/StudyImages","./model/StudyJoinResponse","./model/StudyLinks","./model/StudySharing","./model/StudyText","./model/StudyVotes","./model/TrackingReminder","./model/TrackingReminderDelete","./model/TrackingReminderNotification","./model/TrackingReminderNotificationAction","./model/TrackingReminderNotificationPost","./model/TrackingReminderNotificationTrackAllAction","./model/Unit","./model/UnitCategory","./model/User","./model/UserTag","./model/UserVariableDelete","./model/Variable","./model/VariableCategory","./model/VariableCharts","./model/Vote","./model/VoteDelete","23","./User","24","description","summary","./AppSettings","25","apps","individuals","studies","26","27","./Button","./InputField","28","29","30","31","operation","OperationEnum","ADD","MULTIPLY","32","averageDailyHighCause","averageDailyLowCause","averageEffect","averageEffectFollowingHighCause","averageEffectFollowingLowCause","averageForwardPearsonCorrelationOverOnsetDelays","averageReversePearsonCorrelationOverOnsetDelays","averageVote","causeChanges","causeUserVariableShareUserMeasurements","confidenceInterval","confidenceLevel","criticalTValue","durationOfActionInHours","effectChanges","effectSize","effectUnit","experimentEndTime","experimentStartTime","forwardSpearmanCorrelationCoefficient","numberOfPairs","onsetDelayInHours","onsetDelayWithStrongestPearsonCorrelation","onsetDelayWithStrongestPearsonCorrelationInHours","optimalPearsonProduct","outcomeFillingValue","pearsonCorrelationWithNoOnsetDelay","predictivePearsonCorrelation","predictivePearsonCorrelationCoefficient","predictorDataSources","predictorFillingValue","predictorMaximumAllowedValue","predictorMinimumAllowedValue","predictsHighEffectChange","predictsLowEffectChange","qmScore","reversePearsonCorrelationCoefficient","shareUserMeasurements","significantDifference","statisticalSignificance","strengthLevel","strongestPearsonCorrelationCoefficient","tValue","userVote","valuePredictingHighOutcome","valuePredictingLowOutcome","./DataSource","./StudyHtml","./StudyImages","./StudyLinks","./StudyText","33","affiliate","connectorClientId","defaultVariableCategoryName","displayName","enabled","getItUrl","image","imageHtml","linkedDisplayNameHtml","longDescription","shortDescription","./Card","./ConnectInstructions","34","deviceToken","35","ionIcon","startTracking","./ExplanationStartTracking","./Image","36","button","37","38","correlations","explanation","./Correlation","./Explanation","39","./GetCorrelationsDataResponse","40","./AuthorizedClients","41","./Study","42","./TrackingReminderNotification","43","height","imageUrl","width","44","TypeEnum","check_box","date","email","number","postal_code","select_option","string","switch","text_area","unit","variable_category","45","46","startTimeString","unitAbbreviatedName","47","48","49","measurementItems","CombinationOperationEnum","MEAN","SUM","./MeasurementItem","50","51","causeMeasurement","causeMeasurementValue","causeVariableUnitAbbreviatedName","effectMeasurement","effectMeasurementValue","effectVariableUnitAbbreviatedName","52","53","./Variable","54","success","./PostMeasurementsDataResponse","55","56","57","./TrackingReminder","58","./PostTrackingRemindersDataResponse","59","60","./PostUserSettingsDataResponse","61","emailAddress","62","./ParticipantInstruction","./StudyCharts","./StudySharing","./StudyVotes","63","./Chart","64","individual","group","65","chartHtml","fullStudyHtml","66","gaugeImage","gaugeImageSquare","67","68","studyLinkEmail","studyLinkFacebook","studyLinkGoogle","studyLinkStatic","studyLinkDynamic","studyLinkTwitter","69","sharingDescription","sharingTitle","70","studyAbstract","studyDesign","studyLimitations","studyObjective","studyResults","studyTitle","71","72","reminderFrequency","./TrackingReminderNotificationAction","./Unit","73","74","actionArray","availableUnits","fillingValue","trackAllActions","./TrackingReminderNotificationTrackAllAction","75","action","modifiedValue","76","ActionEnum","skip","snooze","track","77","78","abbreviatedName","category","conversionSteps","maximumValue","unitCategory","CategoryEnum","Distance","Duration","Energy","Frequency","Miscellany","Pressure","Proportion","Rating","Temperature","Volume","Weight","Count","./ConversionStep","./UnitCategory","79","80","administrator","loginName","81","conversionFactor","82","83","./VariableCategory","./VariableCharts","84","85","86","causeVariableId","effectVariableId","87","cause","effect","88","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","len2","encodeChunk","lookup","Uint8Array","output","89","90","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","__proto__","encodingOrOffset","allocUnsafe","encoding","isEncoding","actual","fromString","ArrayBuffer","isView","fromArrayLike","isInstance","array","byteOffset","fromArrayBuffer","valueOf","b","isBuffer","checked","copy","numberIsNaN","fromObject","Symbol","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","swap","m","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","defineProperty","enumerable","species","configurable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","y","list","swap16","swap32","swap64","toLocaleString","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","constructor","base64-js","91","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","floor","LN2","92","qs","sep","eq","regexp","maxKeys","kstr","vstr","idx","xs","93","stringifyPrimitive","objectKeys","ks","94","decode","encode","./decode","./encode","localforage","_dereq_","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","createTextNode","observe","characterData","setImmediate","MessageChannel","scriptEl","removeChild","appendChild","channel","port1","onmessage","port2","postMessage","queue","oldQueue","task","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","thenable","onError","onSuccess","tryCatch","all","iterable","values","resolved","allResolver","outValue","race","_typeof","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","properties","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","matchedEdge","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","_getConnection","upgradeNeeded","forages","db","close","dbArgs","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","bin","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","ready","initPromises","ignoreErrors","_defaultConfig","_support","isSafari","openDatabase","hasFetch","IDBKeyRange","isIndexedDBValid","iterate","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","readAsBinaryString","store","removeItem","clear","advanced","advance","dropInstance","currentConfig","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER_LENGTH","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","bufferToString","base64String","localforageSerializer","marker","fileReader","SERIALIZED_MARKER","readAsArrayBuffer","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","rows","webSQLStorage","dbInfoPromise","serializer","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","localforage_js","LocalForage","driverTypeKey","Constructor","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","previousUnderscore","_","ArrayProto","ObjProto","SymbolProto","nativeIsArray","nativeKeys","nativeCreate","create","Ctor","_wrapped","nodeType","VERSION","builtinIteratee","optimizeCb","argCount","collection","accumulator","iteratee","identity","restArguments","startIndex","rest","baseCreate","shallowProperty","has","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","each","collect","currentKey","createReduce","memo","initial","foldl","inject","reduceRight","foldr","detect","predicate","findIndex","findKey","select","negate","every","some","any","include","fromIndex","guard","invoke","contextPath","pluck","where","attrs","findWhere","computed","lastComputed","shuffle","sample","clone","last","rand","temp","sortBy","criteria","left","right","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","toArray","isString","first","take","tail","compact","flatten","input","shallow","strict","isArguments","without","otherArrays","difference","uniq","unique","isSorted","isBoolean","union","arrays","intersection","argsLength","unzip","zip","object","createPredicateIndexFinder","findLastIndex","sortedIndex","low","high","mid","createIndexFinder","predicateFind","range","stop","step","ceil","chunk","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","partial","boundArgs","placeholder","position","bindAll","memoize","hasher","address","delay","wait","defer","throttle","previous","later","leading","now","throttled","trailing","cancel","debounce","debounced","callNow","wrap","wrapper","compose","after","times","before","hasEnumBug","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","proto","allKeys","mapObject","invert","functions","methods","names","createAssigner","keysFunc","defaults","extendOwn","assign","deepEq","keyInObj","pick","omit","tap","interceptor","isMatch","aStack","bStack","areArrays","aCtor","bCtor","isEqual","isEmpty","isElement","nodelist","isSymbol","isNumber","isNull","isUndefined","noConflict","constant","propertyOf","matches","escapeMap","&","<",">","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","escape","unescape","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","settings","oldSettings","render","variable","Function","argument","chain","_chain","chainResult","qmLog","setName","isMobile","setMessage","isDebugMode","globalMetaData","chcpInfo","getCombinedMetaData","errorSpecificMetaData","stackTrace","combinedMetaData","getGlobalMetaData","obfuscateSecrets","populateReport","mobileDebug","logLevel","setLogLevelName","items","getLogLevelName","urlHelper","getParam","defaultLevel","appMode","isDevelopment","setAuthDebugEnabled","authDebugEnabled","storage","setDebugMode","getDebugMode","setMobileDebug","bugsnagClient","problem_object","propertyName","lowerCaseProperty","secretAliases","stringContainsSecretAliasWord","lowerCase","censoredString","secretAlias","stringHelper","getStringBeforeSubstring","shouldWeLog","getConsoleLogString","addGlobalMetaDataAndLog","bugsnagNotify","pushDebug","pushDebugEnabled","getAuthDebugEnabled","authDebug","webAuthDebug","errorOrInfoIfTesting","isTesting","logString","isMobileOrTesting","stringifyCircularObject","censored","providedLogLevelName","globalLogLevelValue","logLevels","cordovaPluginsAvailable","cordova","installed_plugins","Analytics","backgroundGeoLocation","cordova.plugins.notification","notification","facebookConnectPlugin","window.plugins.googleplus","googleplus","window.overApps","overApps","inAppPurchase","ionic","ionicDeploy","$ionicDeploy","PushNotification","SplashScreen","splashscreen","UserVoice","push_data","deviceTokenOnServer","deviceTokenToSync","last_push","getTimeSinceLastPushString","push enabled","draw over apps enabled","drawOverAppsPopupEnabled","last popup","notifications","getTimeSinceLastPopupString","local_storage","getLocalStorageList","build_server","buildServer","build_link","buildLink","test_app_url","addUrlQueryParamsToUrlString","userEmail","window_location_href","window_location_origin","origin","apiResponse","test_api_url","addQueryParameter","local_notifications","scheduledLocalNotifications","Platform","platformVersion","appDisplayName","setupIntercom","intercomSettings","app_id","userHelper","getUserFromLocalStorage","user_id","app_name","app_version","versionNumber","getCurrentPlatform","setupUserVoice","created_at","timeHelper","getUnixTimestampInSeconds","userRegistered","getSourceName","subscribed","account","setupBugsnag","getAppMode","androidVersionCode","getStackTrace","qmUser","isTruthy","stringifyIfNecessary","toCamelCase","analytics","eventCategories","pushNotifications","inbox","appContainer","hide","getPaneClass","style","display","show","querySelector","getAppContainer","setBackgroundColor","color","backgroundColor","setOpacity","opacity","paneClass","isStaging","isBuilder","isDebug","apiPaths","trackingReminderNotificationsPast","api","registerHelpers","trackAll","successHandler","errorHandler","trackNotification","getCirclePage","longQuestion","bodyText","pngPath","configureClient","minimumSecondsBetweenRequests","blockRequests","canWeMakeRequestYet","qmApiClient","getBaseUrl","getAccessTokenFromUrlUserOrStorage","X-Client-Id","getClientId","X-Platform","X-App-Version","appsManager","getAppVersion","X-Framework","cacheSet","getCacheName","cacheGet","cacheRemove","removeSpecialCharacters","generalResponseHandler","generalErrorHandler","getErrorMessageFromResponse","deleteAllAccessTokens","setUser","doNotSendToLogin","handle401Response","responseData","requestOptions","addGlobalParams","urlParams","force","excludeLocal","getAppSettingsFromMemory","appName","devCredentials","passableUrlParameters","getBuilderClientId","getClientIdFromQueryParameters","getClientIdFromSubDomain","getClientIdFromAwsPath","getClientIdWithCallback","getClientSecret","clientSecret","preferences","QuantiModoClientId","QuantiModoClientSecret","getAppSettingsFromDefaultConfigJson","appSettings","getStringBetween","hostname","subDomain","clientIdFromAppConfigName","appConfigFileNames","route","getSecondsSinceLastRequest","secondsSinceLastRequest","getLastRequestTime","secondsAgo","getLocalStorageNameForRequest","responseHandler","apiUrl","getQuantiModoApiUrl","postToQuantiModo","getRequestUrl","postViaXhr","postViaFetch","getViaXhrOrFetch","getViaXhr","getViaFetch","getAppSettingsUrl","generateUrl","settingsUrl","designMode","responseObject","parseIfJsonString","measurements","onDoneListener","getAppName","chrome","getChromeManifest","serviceWorker","showSignInNotification","addGlobalQueryParameters","getQuantiModoUrl","rateLimit","rate","async","currentlyEmptyingQueue","emptyQueue","executeWithRateLimit","functionToLimit","milliseconds","rateLimited","getStringAfter","builderClientId","port","privateConfig","isIOS","client_secrets","iOS","isAndroid","Android","isChromeExtension","Chrome","isWindows","Windows","Web","getAppSettingsLocallyOrFromApi","localStorageKey","appSettingsRevisions","localForage","processAndSaveAppSettings","isWeb","getAppSettingsFromApi","globalHelper","appSettingsUrl","getAbsoluteUrlFromRelativePath","parsedResponse","loadBuildInfoFromDefaultConfigJson","buildInfo","loadPrivateConfigFromJsonFile","getPrivateConfigJsonUrl","appDesign","ionNavBarClass","gottenAt","energymodo","default","local","medimodo","mindfirst","moodimodo","oauth","quantimodo","staging","your_quantimodo_client_id_here","apiHelper","getApiDocs","staticData","docs","getParameterDescription","parameterName","apiDocs","camelToTitleCase","parameters","getPropertyDescription","modelName","getModelDefinition","modelDefinition","convertToExplanation","getRequiredProperties","required","definition","definitions","checkRequiredProperties","bodyToCheck","requiredPropertyName","arrayHelper","arrayHasItemWithSpecificPropertyValue","propertyValue","arrayHasItemWithNameProperty","arrayOfObjects","removeItemsWithDifferentName","queryTerm","concatenateUniqueId","preferred","secondary","convertToArrayIfNecessary","variableIsArray","convertObjectToArray","deleteById","deleteByProperty","filterByProperty","filterPropertyName","filterPropertyValue","unfilteredElementArray","filterByPropertyOrSize","matchingElements","lessThanPropertyName","lessThanPropertyValue","greaterThanPropertyName","greaterThanPropertyValue","getByProperty","getContaining","searchTerm","getWithNameContaining","getWithNameContainingEveryWord","filterBy","word","alias","inArray","replaceElementInArrayById","replacementElement","removeLastItem","removeLastItemsUntilSizeLessThan","maxKb","getSizeInKiloBytes","sortByProperty","arrayToSort","unsetNullProperties","objectHelper","removeArrayElementsWithDuplicateIds","filterByRequestParams","requestParams","allowedFilterParams","excludedFilterParams","filterPropertyValues","filterPropertyNames","angular","getUnique","flags","deleteFromArrayByProperty","localStorageItemArray","elementsToKeep","addToOrReplaceByIdAndMoveToFront","replacementElementArray","round","getAndSaveAccessTokenFromCurrentUrl","accessTokenFromUrl","getAccessTokenFromCurrentUrl","accessTokenIsValid","saveAccessToken","saveAccessTokenResponse","accessResponse","refreshToken","refresh_token","expiresAtMilliseconds","expiresAt","expires","accessTokenExpires","accessTokenExpiresAtMilliseconds","getUnixTimestampInMilliseconds","expiresInSeconds","expiresIn","expires_in","getAsString","deleteAllCookies","cookies","cookie","eqPos","getPermissionString","permissions","generateV1OAuthUrl","register","getRedirectUri","openBrowserWindowAndGetParameterFromRedirect","redirectUrl","ref","interval","setInterval","onMessageReceived","clearInterval","getParameterFromEventUrl","checkLoadStartEventUrlForErrors","alert","oAuthBrowserLogin","redirectUri","getAccessTokenFromUrlAndSetLocalStorageFlags","stateName","onboarded","introSeen","afterLoginGoToState","afterLoginGoToUrl","logout","logOutOfWebsite","afterLogoutGoToUrl","getIonicUrlForPath","logoutUrl","weShouldSetAfterLoginStateOrUrl","afterLoginGoToStateOrUrl","setAfterLoginGoToUrl","sendToLogin","setAfterLoginGoToUrlAndSendToLogin","chartHelper","setChartExportingOptionsOnce","highchartConfig","exporting","setChartExportOptionsForAllSubProperties","something","getClientWebsiteUrl","partialPath","connectorHelper","getConnectorsFromApi","successCallback","connectors","apiInstance","getConnectorsFromJson","getConnectorsFromLocalStorage","getConnectorsFromLocalStorageOrApi","getConnectorByName","connector","storeConnectorResponse","spreadsheetUpload","hideUnavailableConnectors","getAggregatedCorrelationsFromApi","cachedData","aggregatedCorrelations","getUserCorrelationsFromApi","userCorrelations","dialogFlow","lastApiResponse","welcomeBody","responseId","queryResult","queryText","allRequiredParamsPresent","fulfillmentText","fulfillmentMessages","outputContexts","intent","intentDetectionConfidence","languageCode","originalDetectIntentRequest","isInSandbox","surface","capabilities","requestType","inputs","rawInputs","inputType","lastSeen","idToken","conversation","conversationId","availableSurfaces","google","expectUserResponse","richResponse","simpleResponse","ssml","displayText","systemIntent","@type","listSelect","optionInfo","lifespanCount","trackingReminderNotificationId","postNotificationResponse","outputContext","notificationResponseBody","notificationAction","yesNo","value.original","notificationAction.original","yesNo.original","OPTION","textValue","conversationToken","getEntityFromLastUserStatement","entityName","entry","lastUserStatement","speech","entries","dialogAgent","entities","words","weHaveRequiredParams","responses","parameter","currentIntent","parameterToGet","talkRobot","prompts","functionHelper","getCurrentFunctionNameDoesNotWork","geoLocation","getFoursqureClientId","FOURSQUARE_CLIENT_ID","getFoursquareClientSecret","FOURSQUARE_CLIENT_SECRET","connectorClientSecret","getGoogleMapsApiKey","GOOGLE_MAPS_API_KEY","getPrimaryOutcomeVariable","primaryOutcomeVariableDetails","variables","Overall Mood","userUnitAbbreviatedName","combinationOperation","valence","ratingOptionLabels","ratingValueToTextConversionDataSet","ratingTextToValueConversionDataSet","depressed","sad","happy","ecstatic","trackingQuestion","averageText","Energy Rating","positiveOrNegative","primaryOutcomeVariableName","getPrimaryOutcomeVariableByNumber","getUserFromLocalStorageOrApi","setStudy","study","setGlobal","causeVariable","effectVariable","getGlobal","valueIsValid","globals","help","getExplanations","predictorSearch","outcomeSearch","locationAndWeatherTracking","variableCategoryHelper","getVariableCategory","moreInfo","minimumAllowedValue","maximumAllowedValue","thumbs","getExplanation","parameterOrPropertyName","explanations","integration","getIntegrationJsWithoutClientId","integrationJs","getIntegrationJsEmbedCodeForClient","appList","authorizedClients","chromeWindowId","commonVariables","defaultHelpCards","hideImportHelpCard","lastGotNotificationsAtMilliseconds","lastLocalNotificationTime","lastLatitude","lastLocationAddress","lastLocationName","lastLocationNameAndAddress","lastLocationPostUnixTime","lastLocationResultType","lastLocationUpdateTimeEpochSeconds","lastLongitude","lastReminder","lastStudy","lastPopupNotificationUnixTimeSeconds","lastPushTimestamp","lastPushData","measurementsQueue","mostFrequentReminderIntervalInSeconds","microphoneEnabled","microphoneAvailable","notificationInterval","notificationsSyncQueue","physicianUser","primaryOutcomeVariableMeasurements","speechEnabled","speechAvailable","studiesCreated","studiesJoined","trackingReminderNotifications","trackingReminderNotificationSyncScheduled","trackingReminders","trackingReminderSyncQueue","useSmallInbox","variableCategories","loaders","robots","TimelineMax","repeat","repeatDelay","fromTo","ease","Power3","easeInOut","onStart","TweenMax","drawSVG","Linear","bolt","onComplete","reverse","onReverseComplete","play","rhb","scale","transformOrigin","Power2","sra","rotation","sla","redhead","blueBotRArm","staggerFromTo","Power1","blueBotLArm","dial","blueBotBody","Sine","blueBotHead","eyes","saveWithUniqueId","arrayToSave","existingData","newObjectToSave","existingObjectToReplace","lastSelectedAt","searchByProperty","fromGlobals","getWithFilters","localStorageItemName","getElementsWithRequestParams","getMeasurementsFromApi","addLocationDataToMeasurement","measurementObject","latitude","longitude","addLocationAndSourceDataToMeasurement","addToMeasurementsQueue","appendToArray","updateMeasurementInQueue","measurementInfo","startTimeEpoch","prevStartTimeEpoch","note","getMeasurementsFromQueue","addInfoAndImagesToMeasurements","parseJsonIfPossible","ratingInfo","ratingImages","getRatingInfo","parsedNote","roundedValue","displayValueAndUnitString","valueUnitVariableName","positiveImage","negativeImage","numericImage","icon","recentlyPostedMeasurements","getRecentlyPostedMeasurements","manualTrackingVariableCategoryNames","microphone","getMicrophoneEnabled","getMicrophoneAvailable","setMicrophoneEnabled","rootScope","turnOff","annyang","streamReference","getAudioTracks","getVideoTracks","toggleListening","listening","pauseListening","resumeListening","abortListening","visualizer","hideVisualizer","annyangAvailable","pause","resume","startListening","commands","autoRestart","continuous","paused","addCommands","listenForNotificationResponse","initializeListening","reminderNotificationCommands","debugListening","setLanguage","specificErrorHandler","meta","visualizeVoice","addCallback","userSaid","commandText","phrases","possiblePhrasesArray","music","player","getSpeechEnabled","Audio","volume","fadeIn","actualVolume","fadeInInterval","fadeOut","fadeOutInterval","actions","trackYesAction","prettyJsonStringify","pushData","notificationsPostBody","trackNoAction","trackZeroAction","trackOneRatingAction","trackTwoRatingAction","trackThreeRatingAction","trackFourRatingAction","trackFiveRatingAction","trackDefaultValueAction","snoozeAction","trackLastValueAction","lastValue","trackSecondToLastValueAction","secondToLastValue","trackThirdToLastValueAction","thirdToLastValue","buttons","card","getFromGlobalsOrLocalStorage","getMostRecentRatingNotificationNotInSyncQueue","uniqueRatingNotifications","getAllUniqueRatingNotifications","hoursAgo","trackingReminderNotificationTimeEpoch","getMostRecentUniqueNotificationNotInSyncQueue","uniqueNotifications","getUniqueNotificationsDueInLast24","setLastPopupTime","getTimeSinceString","getLastPopupUnixTime","getTimeSinceLastLocalNotification","lastPopupWasBeforeLastReminderTime","lastTime","reminderHelper","getMostFrequentReminderIntervalInSeconds","getSecondsSinceLastPopup","canWeShowPopupYet","minimumTimeBetweenInMinutes","getMostFrequentReminderIntervalInMinutes","setLastNotificationsRefreshTime","setLastRequestTime","getLastNotificationsRefreshTime","getSecondsSinceLastNotificationsRefresh","addToSyncQueue","trackingReminderNotification","updateLatestMeasurementTime","refreshIfEmpty","getNumberInGlobalsOrLocalStorage","refreshNotifications","refreshIfEmptyOrStale","ratingNotifications","getAllUniqueNotifications","getNotificationsDueInLast24","allNotifications","last24","lastAction","setLastAction","formatValueUnitDisplayText","undo","getMostRecentRatingNotification","deleteByVariableName","setTrackingReminderNotifications","refreshAndShowPopupIfNecessary","notificationParams","uniqueNotification","numberOfWaitingNotifications","objectLength","openOrFocusChromePopupWindow","getRatingNotificationPath","top","screen","focused","updateChromeBadge","createSmallNotificationAndOpenInboxInBackground","closePopup","ratingTrackingReminderNotification","clearNotifications","OverApps","closeWebView","mostRecentNotificationIsOlderThanMostFrequentInterval","MostRecentNotification","getMostRecentNotification","mostFrequent","mostRecent","scheduleNotificationSync","delayBeforePostingNotificationsInMilliseconds","postNotifications","notificationFromLocalStorage","getElementOfLocalStorageItemById","numberOfPendingNotifications","snoozeNotification","skipAllTrackingReminderNotifications","trackingReminderNotificationsArray","addTimeZoneOffsetProperty","newNotificationsSyncQueue","copyPropertiesFromOneObjectToAnother","destination","getSizeInKb","getSizeOfStringInKb","unsetPropertiesWithSizeGreaterThanForObject","maximumKb","objectContainsString","snakeToCamelCaseProperties","getValueOfPropertyOrSubPropertyWithNameLike","wantedKeyNameNeedle","eachRecursive","parameterHelper","getStateUrlRootScopeOrRequestParam","paramName","$stateParams","$scope","$rootScope","runtime","alarms","isWebOrChrome","chromeExtension","android","ios","web","ionicPlatform","isIPad","isDevelopmentMode","isDesignMode","isChrome","isEdge","isIE","isOpera","isBlink","InstallTrigger","webstore","StyleMedia","documentMode","HTMLElement","safari","pushNotification","opr","addons","opera","CSS","getLastPushTimeStampInSeconds","getHoursSinceLastPush","getMinutesSinceLastPush","pushNotificationsEnabled","getNumberOfReminders","getNumberOfTrackingRemindersInLocalStorage","getTrackingRemindersFromApi","saveToLocalStorage","getTrackingRemindersFromLocalStorage","currentFrequency","removeArchivedReminders","allReminders","activeReminders","getActive","favorites","getFavorites","trackingReminder","valueAndFrequencyTextDescription","getArchived","positive","negative","numeric","displayDescription","robot","showing","getElement","setSpeechEnabled","showRobot","getSpeechAvailable","getClass","toggle","initializeSpeechKit","qmService","record a measurement","goToState","qmStates","measurementAddSearch","SpeechKITT","setStylesheet","vroom","readCard","subTitle","subHeader","headerTitle","DEFAULT","VOICE","defaultAction","deepThought","getMostRecentNotificationAndTalk","lastUtterance","pendingUtteranceText","shutUpRobot","speechSynthesis","classList","remove","duration","fallbackMessageIndex","fallbackMessage","tag","messages","intents","afterNotificationMessages","utterances","recentStatements","sayIfNotInRecentStatements","askQuestion","askYesNoQuestion","yesCallback","noCallback","yes","no","voices","getVoices","utterance","SpeechSynthesisUtterance","resumeInfinity","timeoutResumeInfinity","onstart","pitch","voice","add","isListening","onend","speak","currentNotification","speechUtteranceChunker","utt","newUtt","txt","voiceURI","chunkLength","pattRegex","chunkArr","modifier","deepThoughts","I don't know","*tag","userOptimalValueMessage","commonOptimalValueMessage","machinesOfLovingGrace","shares","sendInvitation","saveAuthorizedClientsToLocalStorage","getAuthorizedClientsFromApi","getAuthorizedClientsFromLocalStorage","getAuthorizedClientsFromLocalStorageOrApi","revokeClientAccess","splash","getStudiesCreatedFromApi","studyHelper","getStudiesApiInstance","saveStudiesCreatedToLocalStorage","getStudiesCreatedFromLocalStorage","getStudiesCreatedFromLocalStorageOrApi","getStudyFromLocalForageOrGlobals","processAndSaveStudy","getStudiesJoinedFromApi","saveStudiesJoinedToLocalStorage","getStudiesJoinedFromLocalStorage","getStudiesJoinedFromLocalStorageOrApi","getUserVariableByName","userVariable","lastAccessedUnixTime","lastValueInUserUnit","deleteByPropertyInArray","objectsArray","arrayOfValuesForProperty","getAllLocalStorageDataWithSizes","localStorageItemsArray","kB","elementId","sizeInKb","summaryValue","deleteLargeLocalStorageItems","localStorageItems","valueString","clearOAuthTokens","elementToAdd","localStorageItem","removeArrayElementsWithSameId","deleteTrackingReminderNotification","clearStorageExceptForUnitsAndCommonVariables","jsonObject","maxLength","parseBoolean","stringOrObject","g","firstString","secondString","between","fullString","truncateIfGreaterThan","maxCharacters","replaceAll","indent","printedObjects","printedObjectKeys","printedObjIndex","qualifiedKey","isFalsey","valueUnitText","abbreviatedUnitName","getCauseVariable","lastStudyOrCorrelation","getEffectVariable","getCauseVariableName","getStudyId","getEffectVariableName","getCauseVariableId","getEffectVariableId","studyMatchesParams","saveLastStudyToGlobalsAndLocalForage","deleteLastStudyFromGlobalsAndLocalForage","getStudyUrl","getBaseAppUrl","addStudyParamsToUrl","getStudyJoinUrl","getStudyFromApi","getStudyFromLocalStorageOrApi","aggregated","studyCharts","publicStudy","userStudy","cohortStudy","statistics","getStudiesFromApi","goToStudyPageJoinPageViaStudy","goToStudyPageViaStudy","dateTimeString","universalConversionToUnixTimeSeconds","unixTimeOrString","unixTimestamp","minutesAgo","daysAgo","getCurrentLocalDateAndTime","convertUnixTimeStampToISOString","UNIX_timestamp","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeZoneOffset","getTimezoneOffset","unitHelper","getNonAdvancedUnits","nonAdvancedUnitObjects","allUnits","inNonAdvancedUnitAbbreviatedNames","nonAdvancedUnitAbbreviatedNames","getManualTrackingUnits","manualTrackingUnitObjects","inManualTrackingUnitUnitAbbreviatedNames","manualTrackingUnitUnitAbbreviatedNames","getAllUnits","getProgressivelyMoreUnits","currentlyDisplayedUnits","getByNameAbbreviatedNameOrId","unitAbbreviatedNameOrId","indexByAbbreviatedName","unitsIndexedByAbbreviatedName","getUnitArrayContaining","currentUnitAbbreviatedName","getUnitsFromApiAndIndexByAbbreviatedNames","updateAllUnitPropertiesOnObject","unitNameAbbreviatedNameOrId","objectProperty","lowerCaseObjectProperty","unitProperty","addUrlParmsToCurrentUrl","encodeURI","kvp","shouldDecode","parameterKeyValuePairs","currentParameterKeyValuePair","getQueryParams","keyValuePairsObject","parameterKeyValueSubstrings","openUrlInNewTab","showLocation","getIonicAppBaseUrl","relativePath","onQMSubDomain","redirectToHttpsIfNecessary","isQuantiMoDoDomain","urlToCheck","isHttps","matchesQuantiModo","getRootDomain","getAuthorizationCodeFromEventUrl","addEventListenerAndGetParameterFromRedirectedUrl","windowRef","executeScriptCallBack","$","scriptErrorMessage","executeScript","convertObjectToQueryString","getStringAfterLastSlash","lastSlashIndex","stripQueryString","pathWithQuery","goToUrl","deleteUserAccount","checkUserId","ID","isTestUser","userToSave","withinAllowedNotificationTimes","currentTime","latestReminderTime","earliestReminderTime","getUserFromApi","userSuccessHandler","userFromApi","openLoginWindow","userIsOlderThan1Day","userIsOlderThanXSeconds","secondsCutoff","ageInSeconds","commonVariablesHelper","getCommonVariablesFromApi","cacheKey","putCommonVariablesInLocalStorageUsingApi","definitelyCommonVariables","getCommonVariablesFromJsonFile","getFromLocalStorage","getFromLocalForage","fromJson","fromLocalForage","variablesHelper","defaultVariableSort","getFromLocalStorageOrApi","refreshIfNecessary","definitelyUserVariables","getFromApi","getByNameFromApi","getByName","charts","lineChartWithoutSmoothing","variableSearchQuery","haveEnough","doWeHaveEnoughVariables","doWeHaveExactMatch","refreshIfNumberOfRemindersGreaterThanUserVariables","sortUpdateSubtitlesAndReturnVariables","updateSubtitles","minimumNumberOfResultsRequiredToAvoidAPIRequest","getUserAndCommonVariablesFromLocalStorage","putManualTrackingFirst","variableToCheck","nonManual","getValue","numberOfTrackingReminders","numberOfUserVariables","aValue","bValue","both","subtitle","getVariableCategoriesFromJsonFile","getVariableCategoriesFromApi","globalSuccessHandler","getVariableCategoriesFromGlobalsOrApi","getVariableCategoriesFromGlobals","variableCategory","variableCategoryNameSingular","rainbowCircleVisualizer","analyser","frequencyData","waveData","audioCtx","AudioContext","doAudioStuff","mediaStream","createAnalyser","smoothingTimeConstant","fftSize","frequencyBinCount","createMediaStreamSource","connect","animate","webkitGetUserMedia","audio","canvas","mediaDevices","getUserMedia","w","h","w2","h2","h3","h4","getElementById","ctx","getContext","setCanvasSizes","innerWidth","innerHeight","byteToNum","byte","hue","getByteFrequencyData","getByteTimeDomainData","strokeStyle","fillStyle","fillRect","beginPath","lineTo","sin","cos","closePath","stroke","arc","PI","requestAnimationFrame","siriVisualizer","WIDTH","HEIGHT","smoothing","fft","minDecibels","glow","color1","color2","color3","fillOpacity","lineWidth","blend","amp","dat","gui","GUI","addColor","freqs","mozGetUserMedia","msGetUserMedia","visualize","innerHTML","shadowColor","shadowBlur","globalCompositeOperation","band","freq","moveTo","bezierCurveTo","maxDecibels","zIndex","paths","getElementsByTagName","mask","stream","persistAudioStream","setAttribute","audioContent","audioStream","frequencyArray","createElementNS","doDraw","adjustedLength","webNotifications","initializeFirebase","firebase","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","registerServiceWorker","serviceWorkerUrl","registration","messaging","useServiceWorker","subscribeUser","requestPermission","getToken","currentToken","postWebPushSubscriptionToServer","deviceTokenString","windowHelper","scrollToTop","scrollTop","debugEnabled","chromeDebug","getAll","windows","getLastFocused","getCurrent","checkTimePastNotificationsAndExistingPopupAndShowPopupIfNecessary","alarm","createSmallInboxNotification","windowParams","inboxNotificationParams","fullInboxWindowParams","createPopup","chromeWindow","update","fullWebsiteUrl","canShowChromePopups","getManifest","getWindowByIdAndFocusOrCreateNewPopup","lastError","createPopupIfNoWindowIdInLocalStorage","getCurrentWindowAndFocusOrCreateNewPopup","getAllWindowsFocusOrCreateNewPopup","handleNotificationClick","notificationId","facesWindowParams","exception","IsJsonString","openMeasurementAddWindow","openFullInbox","initialize","onClicked","addListener","extension","onMessage","sender","sendResponse","onInstalled","scheduleGenericChromeExtensionNotification","openIntroWindowPopup","onAlarm","showRatingOrInboxPopup","introWindowParams","focusWindow","multiplyScreenHeight","multiplyScreenWidth","intervalInMinutes","alarmInfo","periodInMinutes","scheduleChromeExtensionNotificationWithTrackingReminder","when","nextReminderTimeEpochSeconds","alarmName","createChromeAlarmNameFromTrackingReminder","hasAlarm","oneAlarm","trackingReminderId","reminderStartTime","startTrackingDate","reminderEndTime","combineNotifications","showRatingPopup","compactInboxWindowParams","signInNotificationParams","numberOfNotifications","browserAction","setBadgeText","factor","iconUrl","priority","ratingPopupHeight","ratingPopupWidth","qmPopup","setFaceButtonListeners","onclick","onFaceButtonClicked","inboxButtonClicked","setLastValueButtonListeners","onLastValueButtonClicked","getVariableName","valenceNegative","openApp","hidePopupPostNotificationsDeleteLocalAndClosePopup","hidePopup","ratingValue","buttonId","addToSyncQueueAndCloseOrUpdateQuestion","updateQuestion","resizeTo","showLoader","sectionRate","getRatingSectionElement","getQuestionElement","unHidePopup","questionText","getLastValueSectionElement","setLastValueButtonProperties","textElement","buttonElement","shortTitle","fontSize","getLastValueElement","getLastValueButtonElement","getSecondToLastValueElement","getSecondToLastValueButtonElement","getThirdToLastValueElement","getThirdToLastValueButtonElement","question","getInboxButtonElement","wDiff","hDiff","resizeBy"],"mappings":"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","file":"popup-combined-head-libraries-dbdf0690d5.js","sourcesContent":["/* eslint-disable no-irregular-whitespace */\n// A separate logger file allows us to use \"black-boxing\" in the Chrome dev console to preserve actual file line numbers\n// BLACK BOX THESE\n// \\.min\\.js$ — for all minified sources\n// qmLogger.js\n// qmLogService.js\n// bugsnag.js\n// node_modules and bower_components — for dependencies\n// — home for dependencies in Webpack bundle\n// bundle.js — it’s a bundle itself (we use sourcemaps, don’t we?)\n// \\(webpack\\)-hot-middleware — HMR\nwindow.qmLog = {\n    name: null,\n    setName: function(name, message) {\n        if(name && name.response && name.response.body){\n            var body = name.response.body;\n            qmLog.name = body.errorMessage || body.message || JSON.stringify(body);\n        }\n        qmLog.name = name || message;\n        if(qm.platform.isMobile()){qmLog.name = \"QM: \" + name;} // Use for filtering in LogCat\n    },\n    message: null,\n    setMessage: function(name, message) {\n        if(message && typeof message === 'object'){\n            qmLog.message = message.message || JSON.stringify(message);\n        } else {\n            qmLog.message = message || name;\n        }\n        if(qm.platform.isMobile() && qmLog.isDebugMode()){qmLog.message = addCallerFunctionToMessage(qmLog.message || \"\");}\n        return qmLog.message;\n    },\n    globalMetaData : {\n        context: null,\n        chcpInfo: {\n            error: null\n        },\n        message: {},\n        name: {}\n    },\n    getCombinedMetaData: function(name, message, errorSpecificMetaData, stackTrace) {\n        var combinedMetaData = qmLog.getGlobalMetaData();\n        combinedMetaData = JSON.parse(JSON.stringify(combinedMetaData));\n        combinedMetaData.errorSpecificMetaData = errorSpecificMetaData;\n        combinedMetaData.stackTrace = stackTrace;\n        combinedMetaData.message = message;\n        combinedMetaData.name = name;\n        combinedMetaData = qmLog.obfuscateSecrets(combinedMetaData);\n        return combinedMetaData;\n    },\n    stacktrace: null,\n    populateReport: function(name, message, metaData, stacktrace){\n        qmLog.setName(name, message);\n        qmLog.setMessage(name, message);\n        qmLog.stacktrace = stacktrace | null;\n    },\n    mobileDebug: null,\n    logLevel: null,\n    setLogLevelName: function(value){\n        if(qmLog.logLevel === value){return;}\n        qmLog.logLevel = value;\n        if(typeof localStorage !== \"undefined\"){\n            localStorage.setItem(qm.items.logLevel, value); // Can't use qm.storage because of recursion issue\n        }\n    },\n    getLogLevelName: function() {\n        if(window.location.href.indexOf('utopia.quantimo.do') > -1){return \"debug\";}\n        if(qm.urlHelper.getParam('debug') || qm.urlHelper.getParam('debugMode')){qmLog.setLogLevelName(\"debug\");}\n        if(qm.urlHelper.getParam(qm.items.logLevel)){qmLog.setLogLevelName(qm.urlHelper.getParam(qm.items.logLevel));}\n        if(qmLog.logLevel){return qmLog.logLevel;}\n        if(typeof localStorage !== \"undefined\"){\n            qmLog.logLevel = localStorage.getItem(qm.items.logLevel);  // Can't use qm.storage because of recursion issue\n        }\n        if(qmLog.logLevel){return qmLog.logLevel;}\n        var defaultLevel = (qm.appMode.isDevelopment()) ? \"info\" : \"error\";\n        qmLog.setLogLevelName(defaultLevel); // I think info logs might be slowing down iOS app so default to error\n        return qmLog.logLevel;\n    },\n    setAuthDebugEnabled: function (value) {\n        qmLog.authDebugEnabled = value;\n        if(qmLog.authDebugEnabled && window.localStorage){\n            qm.storage.setItem('authDebugEnabled', value);\n        }\n        return qmLog.authDebugEnabled;\n    },\n    setDebugMode: function (value) {\n        if (value) {\n            qmLog.setLogLevelName(\"debug\");\n        } else {\n            qmLog.setLogLevelName(\"info\");\n        }\n        return value;\n    },\n    isDebugMode: function() {\n        return qmLog.getLogLevelName() === \"debug\";\n    },\n    getDebugMode: function () {\n        return qmLog.isDebugMode();\n    },\n    setMobileDebug: function (value) {\n        qmLog.mobileDebug = value;\n    },\n    obfuscateSecrets: function(object){\n        if(typeof object !== 'object'){return object;}\n        try {\n            object = JSON.parse(JSON.stringify(object)); // Decouple so we don't screw up original object\n        } catch (error) {\n            if(typeof Bugsnag !== \"undefined\"){\n                bugsnagClient.notify(\"Could not decouple object to obfuscate secrets: \" + error ,\n                    \"object = JSON.parse(JSON.stringify(object))\", {problem_object: object}, \"error\");\n            }\n            //window.qmLog.error(error, object); // Avoid infinite recursion\n            return {};\n        }\n        for (var propertyName in object) {\n            if (object.hasOwnProperty(propertyName)) {\n                var lowerCaseProperty = propertyName.toLowerCase();\n                if(qmLog.secretAliases.indexOf(lowerCaseProperty) !== -1){\n                    object[propertyName] = \"HIDDEN\";\n                } else {\n                    object[propertyName] = qmLog.obfuscateSecrets(object[propertyName]);\n                }\n            }\n        }\n        return object;\n    },\n    secretAliases: ['secret', 'password', 'token', 'secret', 'private'],\n    stringContainsSecretAliasWord: function(string){\n        var lowerCase = string.toLowerCase();\n        var censoredString = lowerCase;\n        for (var i = 0; i < qmLog.secretAliases.length; i++) {\n            var secretAlias = qmLog.secretAliases[i];\n            if(lowerCase.indexOf(secretAlias) !== -1){\n                censoredString = qm.stringHelper.getStringBeforeSubstring(secretAlias, censoredString) + \" \" + secretAlias + \"...\";\n            }\n        }\n        if(censoredString !== lowerCase){return censoredString;}\n        return false;\n    },\n    error: function (name, message, errorSpecificMetaData, stackTrace) {\n        if(!qmLog.shouldWeLog(\"error\")){return;}\n        qmLog.populateReport(name, message, errorSpecificMetaData, stackTrace);\n        console.error(qmLog.getConsoleLogString(\"ERROR\", errorSpecificMetaData), errorSpecificMetaData);\n        qmLog.globalMetaData = qmLog.addGlobalMetaDataAndLog(qmLog.name, qmLog.message, errorSpecificMetaData, qmLog.stackTrace);\n        function bugsnagNotify(name, message, errorSpecificMetaData, logLevel, stackTrace){\n            if(typeof bugsnagClient === \"undefined\") {\n                if (!qm.appMode.isDevelopment()) {console.error('bugsnagClient not defined', errorSpecificMetaData);}\n                return;\n            }\n            var combinedMetaData = qmLog.getCombinedMetaData(name, message, errorSpecificMetaData, stackTrace);\n            if(!name){name = \"No error name provided\";}\n            if(!message){message = \"No error message provided\";}\n            if(typeof name !== \"string\"){name = message;}\n            if(typeof message !== \"string\"){message = JSON.stringify(message);}\n            bugsnagClient.notify({ name: name, message: message}, {severity: logLevel, metaData: combinedMetaData});\n        }\n        bugsnagNotify(qmLog.name, qmLog.message, errorSpecificMetaData, \"error\", qmLog.stackTrace);\n        //if(window.qmLog.mobileDebug){alert(name + \": \" + message);}\n    },\n    pushDebug: function(name, message, errorSpecificMetaData, stackTrace) {\n        //qmLog.pushDebugEnabled = true;\n        if(!qmLog.pushDebugEnabled){\n            qmLog.pushDebugEnabled = window.location.href.indexOf(\"pushDebugEnabled\") !== -1;\n            if(qmLog.pushDebugEnabled && window.localStorage){\n                localStorage.setItem('pushDebugEnabled', \"true\");\n            }\n        }\n        if(!qmLog.pushDebugEnabled && window.localStorage){qmLog.pushDebugEnabled = localStorage.getItem('pushDebugEnabled');}\n        if(qmLog.pushDebugEnabled || qmLog.isDebugMode()){\n            qmLog.error(\"PushNotification Debug: \" + name, message, errorSpecificMetaData, stackTrace);\n        } else {\n            qmLog.info(\"PushNotification Debug: \" + name, message, errorSpecificMetaData, stackTrace);\n        }\n    },\n    getAuthDebugEnabled: function(message){\n        if(message.indexOf(\"cloudtestlabaccounts\") !== -1){ // Keeps spamming bugsnag\n            return qmLog.setAuthDebugEnabled(false);\n        }\n        if(!qmLog.authDebugEnabled && window.location.href.indexOf(\"authDebug\") !== -1){\n            return qmLog.setAuthDebugEnabled(true)\n        }\n        if(qmLog.authDebugEnabled === null && window.localStorage){\n            qmLog.authDebugEnabled = localStorage.getItem('authDebugEnabled');\n        }\n        return qmLog.authDebugEnabled;\n    },\n    authDebug: function(name, message, errorSpecificMetaData) {\n        if(!qmLog.getAuthDebugEnabled(name)){return;}\n        name = \"Auth Debug: \" + name;\n        if(qm.platform.isMobile()){\n            qmLog.error(name, message, errorSpecificMetaData);\n        } else {\n            qmLog.info(name, message, errorSpecificMetaData);\n        }\n    },\n    webAuthDebug: function(name, message, errorSpecificMetaData) {\n        if(!qm.platform.isMobile()){qmLog.authDebug(name, message, errorSpecificMetaData);}\n    },\n    warn: function (name, message, errorSpecificMetaData, stackTrace) {\n        if(!qmLog.shouldWeLog(\"warn\")){return;}\n        qmLog.populateReport(name, message, errorSpecificMetaData, stackTrace);\n        if(errorSpecificMetaData){\n            console.warn(qmLog.getConsoleLogString(\"WARNING\", errorSpecificMetaData), errorSpecificMetaData);\n        } else {\n            console.warn(qmLog.getConsoleLogString(\"WARNING\", errorSpecificMetaData));\n        }\n    },\n    info: function (name, message, errorSpecificMetaData, stackTrace) {\n        if(!qmLog.shouldWeLog(\"info\")){return;}\n        qmLog.populateReport(name, message, errorSpecificMetaData, stackTrace);\n        if(errorSpecificMetaData){\n            console.info(qmLog.getConsoleLogString(\"INFO\", errorSpecificMetaData), errorSpecificMetaData);\n        } else {\n            console.info(qmLog.getConsoleLogString(\"INFO\", errorSpecificMetaData));\n        }\n    },\n    debug: function (name, message, errorSpecificMetaData, stackTrace) {\n        if(!qmLog.shouldWeLog(\"debug\")){return;}\n        qmLog.populateReport(name, message, errorSpecificMetaData, stackTrace);\n        if(errorSpecificMetaData){\n            console.debug(qmLog.getConsoleLogString(\"DEBUG\", errorSpecificMetaData), errorSpecificMetaData);\n        } else {\n            console.debug(qmLog.getConsoleLogString(\"DEBUG\", errorSpecificMetaData));\n        }\n    },\n    errorOrInfoIfTesting: function (name, message, metaData, stackTrace) {\n        message = message || name;\n        name = name || message;\n        qmLog.globalMetaData = qmLog.globalMetaData || null;\n        if(qm.appMode.isTesting()){\n            qmLog.info(name, message, metaData, stackTrace);\n        } else {\n            qmLog.error(name, message, metaData, stackTrace);\n        }\n    },\n    getConsoleLogString: function (logLevel, errorSpecificMetaData){\n        var logString = qmLog.name;\n        if(qmLog.message && logString !== qmLog.message){logString = logString + \": \" + qmLog.message;}\n        if(qm.platform.isMobileOrTesting() && qmLog.isDebugMode()){logString = addCallerFunctionToMessage(logString);}\n        if(qmLog.stackTrace){logString = logString + \". stackTrace: \" + qmLog.stackTrace;}\n        if(errorSpecificMetaData && qm.platform.isMobileOrTesting()){ // Meta object is already logged nicely in browser console\n            try {\n                if(qmLog.isDebugMode()){  // stringifyCircularObject might be too resource intensive\n                    logString = logString + \". metaData: \" + qm.stringHelper.stringifyCircularObject(errorSpecificMetaData);\n                }\n            } catch (error) {\n                console.error(\"Could not stringify log meta data\", error);\n            }\n        }\n        var censored = qmLog.stringContainsSecretAliasWord(logString);\n        if(censored){logString = censored;}\n        if(qm.platform.isMobileOrTesting()){logString = logLevel + \": \" + logString;}\n        return logString;\n    },\n    shouldWeLog: function(providedLogLevelName) {\n        var globalLogLevelValue = qmLog.logLevels[qmLog.getLogLevelName()];\n        var providedLogLevelValue = qmLog.logLevels[providedLogLevelName];\n        return globalLogLevelValue >= providedLogLevelValue;\n    },\n    getGlobalMetaData: function() {\n        function getTestUrl() {\n            function getCurrentRoute() {\n                var parts = window.location.href.split(\"#/app\");\n                return parts[1];\n            }\n            var url = \"https://local.quantimo.do/ionic/Modo/www/index.html#/app\" + getCurrentRoute();\n            if(qm.getUser()){url = qm.urlHelper.addUrlQueryParamsToUrlString({userEmail: qm.getUser().email}, url);}\n            return url;\n        }\n        function cordovaPluginsAvailable() {\n            if(typeof cordova === \"undefined\"){return false;}\n            return typeof cordova.plugins !== \"undefined\";\n        }\n        qmLog.globalMetaData.installed_plugins = {\n            \"Analytics\": (typeof Analytics !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"backgroundGeoLocation\": (typeof backgroundGeoLocation !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"cordova.plugins.notification\": (cordovaPluginsAvailable() && typeof cordova.plugins.notification !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"facebookConnectPlugin\": (typeof facebookConnectPlugin !== \"undefined\"),\n            \"window.plugins.googleplus\": (window && window.plugins && window.plugins.googleplus)  ? \"installed\" : \"not installed\",\n            \"window.overApps\": (cordovaPluginsAvailable() && typeof window.overApps !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"inAppPurchase\": (typeof window.inAppPurchase !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"ionic\": (typeof ionic !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"ionicDeploy\": (typeof $ionicDeploy !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"PushNotification\": (typeof PushNotification !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"SplashScreen\": (typeof navigator !== \"undefined\" && typeof navigator.splashscreen !== \"undefined\") ? \"installed\" : \"not installed\",\n            \"UserVoice\": (typeof UserVoice !== \"undefined\") ? \"installed\" : \"not installed\"\n        };\n        qmLog.globalMetaData.push_data = {\n            \"deviceTokenOnServer\": qm.storage.getItem(qm.items.deviceTokenOnServer),\n            \"deviceTokenToSync\": qm.storage.getItem(qm.items.deviceTokenToSync),\n            \"last_push\": window.qm.push.getTimeSinceLastPushString(),\n            \"push enabled\": qm.push.enabled(),\n            \"draw over apps enabled\": qm.storage.getItem(qm.items.drawOverAppsPopupEnabled), // Don't use function drawOverAppsPopupEnabled() because of recursion error\n            \"last popup\": qm.notifications.getTimeSinceLastPopupString()\n        };\n        if(qmLog.isDebugMode()){qmLog.globalMetaData.local_storage = window.qm.storage.getLocalStorageList();} // Too slow to do for every error\n        if(qm.getAppSettings()){\n            qmLog.globalMetaData.build_server = qm.getAppSettings().buildServer;\n            qmLog.globalMetaData.build_link = qm.getAppSettings().buildLink;\n        }\n        qmLog.globalMetaData.test_app_url = getTestUrl();\n        qmLog.globalMetaData.window_location_href = window.location.href;\n        qmLog.globalMetaData.window_location_origin = window.location.origin;\n        function addQueryParameter(url, name, value){\n            if(url.indexOf('?') === -1){return url + \"?\" + name + \"=\" + value;}\n            return url + \"&\" + name + \"=\" + value;\n        }\n        if(qmLog.globalMetaData.apiResponse){\n            var request = qmLog.globalMetaData.apiResponse.req;\n            qmLog.globalMetaData.test_api_url = request.method + \" \" + request.url;\n            if(request.header.Authorization){\n                qmLog.globalMetaData.test_api_url = addQueryParameter(qmLog.globalMetaData.test_api_url, \"access_token\", request.header.Authorization.replace(\"Bearer \", \"\"));\n            }\n            console.error('API ERROR URL ' + qmLog.globalMetaData.test_api_url, qmLog.globalMetaData);\n            delete qmLog.globalMetaData.apiResponse;\n        }\n        qmLog.globalMetaData.local_notifications = qm.storage.getItem(qm.items.scheduledLocalNotifications);\n        if(typeof ionic !== \"undefined\"){\n            qmLog.globalMetaData.platform = ionic.Platform.platform();\n            qmLog.globalMetaData.platformVersion = ionic.Platform.version();\n        }\n        if(qm.getAppSettings()){qmLog.globalMetaData.appDisplayName = qm.getAppSettings().appDisplayName;}\n        return qmLog.globalMetaData;\n    },\n    setupIntercom: function() {\n        window.intercomSettings = {\n            app_id: \"uwtx2m33\",\n            name: qm.userHelper.getUserFromLocalStorage().displayName,\n            email: qm.userHelper.getUserFromLocalStorage().email,\n            user_id: qm.userHelper.getUserFromLocalStorage().id,\n            app_name: qm.getAppSettings().appDisplayName,\n            app_version: qm.getAppSettings().versionNumber,\n            platform: qm.platform.getCurrentPlatform()\n        };\n    },\n    setupUserVoice: function() {\n        if (typeof UserVoice !== \"undefined\") {\n            UserVoice.push(['identify', {\n                email: qm.getUser().email, // User’s email address\n                name: qm.getUser().displayName, // User’s real name\n                created_at: window.qm.timeHelper.getUnixTimestampInSeconds(qm.userHelper.getUserFromLocalStorage().userRegistered), // Unix timestamp for the date the user signed up\n                id: qm.userHelper.getUserFromLocalStorage().id, // Optional: Unique id of the user (if set, this should not change)\n                type: qm.getSourceName() + ' User (Subscribed: ' + qm.userHelper.getUserFromLocalStorage().subscribed + ')', // Optional: segment your users by type\n                account: {\n                    //id: 123, // Optional: associate multiple users with a single account\n                    name: qm.getSourceName() + ' v' + qm.getAppSettings().versionNumber, // Account name\n                    //created_at: 1364406966, // Unix timestamp for the date the account was created\n                    //monthly_rate: 9.99, // Decimal; monthly rate of the account\n                    //ltv: 1495.00, // Decimal; lifetime value of the account\n                    //plan: 'Subscribed' // Plan name for the account\n                }\n            }]);\n        }\n    },\n    setupBugsnag: function(){\n        if (typeof bugsnag !== \"undefined\") {\n            var options = {\n                apiKey: \"ae7bc49d1285848342342bb5c321a2cf\",\n                releaseStage: qm.appMode.getAppMode(),\n                //notifyReleaseStages: [ 'staging', 'production' ],\n                metaData: qmLog.getGlobalMetaData(),\n                user: qmLog.obfuscateSecrets(qm.userHelper.getUserFromLocalStorage()),\n                beforeSend: function (report) {}\n            };\n            if(qm.getUser()){options.user = qmLog.obfuscateSecrets(qm.getUser());}\n            if(qm.getAppSettings()){options.appVersion = qm.getAppSettings().androidVersionCode;}\n            window.bugsnagClient = bugsnag(options);\n        } else {\n            if(!qm.appMode.isDevelopment()){qmLog.error('Bugsnag is not defined');}\n        }\n    },\n    getStackTrace: function() {\n        var err = new Error();\n        var stackTrace = err.stack;\n        if(!stackTrace){\n            console.log(\"Could not get stack trace\");\n            return null;\n        }\n        stackTrace = stackTrace.substring(stackTrace.indexOf('getStackTrace')).replace('getStackTrace', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.debug')).replace('window.qmLog.debug', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.info')).replace('window.qmLog.info', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.error')).replace('window.qmLog.error', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.debug')).replace('window.qmLog.debug', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.info')).replace('window.qmLog.info', '');\n        stackTrace = stackTrace.substring(stackTrace.indexOf('window.qmLog.error')).replace('window.qmLog.error', '');\n        return stackTrace;\n    },\n    logLevels: {\n        \"error\": 1,\n        \"warn\": 2,\n        \"info\": 3,\n        \"debug\": 4\n    },\n    addGlobalMetaDataAndLog: function(name, message, errorSpecificMetaData, stacktrace) {\n        var i = 0;\n        var combinedMetaData = qmLog.getCombinedMetaData(name, message, errorSpecificMetaData, stacktrace);\n        var logMetaData = false;\n        if (!logMetaData){return combinedMetaData;}\n        for (var propertyName in combinedMetaData) {\n            if (combinedMetaData.hasOwnProperty(propertyName)) {\n                if(combinedMetaData[propertyName]){\n                    i++;\n                    console.log(propertyName + \": \" + window.stringifyIfNecessary(combinedMetaData[propertyName]));\n                    if(i > 10){\n                        break;\n                    }\n                }\n            }\n        }\n        return combinedMetaData;\n    }\n};\nif(typeof bugsnag !== \"undefined\"){\n    window.bugsnagClient = bugsnag(\"ae7bc49d1285848342342bb5c321a2cf\");\n}\nif(!window.qmUser){\n    if(typeof localStorage !== \"undefined\"){\n        window.qmUser = localStorage.getItem('user');\n    }\n    if(window.qmUser){window.qmUser = JSON.parse(window.qmUser);}\n}\nwindow.isTruthy = function(value){return value && value !== \"false\"; };\nwindow.stringifyIfNecessary = function(variable){\n    if(!variable || typeof message === \"string\"){return variable;}\n    try {\n        return JSON.stringify(variable);\n    } catch (error) {\n        console.error(\"Could not stringify\", variable);\n        return \"Could not stringify\";\n    }\n};\nfunction getCalleeFunction() {\n    var callee = arguments.callee.caller;\n    if(callee.caller){callee = callee.caller;}\n    if(callee.caller){callee = callee.caller;}\n    if(callee.caller){callee = callee.caller;}\n    if(callee.caller){callee = callee.caller;}\n    if(callee.caller){callee = callee.caller;}\n    return callee;\n}\nfunction getCalleeFunctionName() {\n    try {\n        if(getCalleeFunction() && getCalleeFunction().name && getCalleeFunction().name !== \"\"){\n            return getCalleeFunction().name;\n        }\n    } catch (error) {\n        console.debug(error);\n    }\n    return null;\n}\nfunction getCallerFunctionName() {\n    function getCallerFunction() {\n        if(getCalleeFunction()){\n            try {\n                return getCalleeFunction().caller;\n            } catch (error) {\n                console.error(error);\n                return null;\n            }\n        }\n        return null;\n    }\n    try {\n        if(getCallerFunction() && getCallerFunction().name && getCallerFunction().name !== \"\"){\n            return getCallerFunction().name;\n        }\n    } catch (error) {\n        console.debug(error);\n    }\n    return null;\n}\nfunction addCallerFunctionToMessage(message) {\n    if(qm.platform.browser.isFirefox()){return message;}\n    if(message === \"undefined\"){message = \"\";}\n    if(getCalleeFunctionName()){message = \"callee \" + getCalleeFunctionName() + \": \" + message || \"\";}\n    if(getCallerFunctionName()){message = \"Caller \" + getCallerFunctionName() + \" called \" + message || \"\";}\n    return message;\n}\n\n","/** @namespace window.qmLog */\n/** @namespace window.qm */\nwindow.qm.chrome = {\n    debugEnabled: true,\n    chromeDebug: function () {\n        function checkAlarm() {\n            chrome.alarms.getAll(function(alarms) {\n                console.log(\"all alarms\", alarms);\n            })\n        }\n        if (qm.chrome.debugEnabled) {\n            checkAlarm();\n            chrome.windows.getLastFocused(function (window) {\n                console.log(\"last focused\", window);\n            });\n            chrome.windows.getAll(function (windows) {\n                console.log(\"all windows\", windows);\n            });\n            chrome.windows.getCurrent(function (window) {\n                console.log(\"current window\", window);\n            });\n        }\n    },\n    checkTimePastNotificationsAndExistingPopupAndShowPopupIfNecessary: function(alarm) {\n        if(!qm.platform.isChromeExtension()){return;}\n        window.qmLog.debug('showNotificationOrPopupForAlarm alarm: ', null, alarm);\n        if(!qm.userHelper.withinAllowedNotificationTimes()){return false;}\n        if(qm.notifications.getNumberInGlobalsOrLocalStorage()){\n            qm.chrome.createSmallInboxNotification();\n        } else {\n            qm.notifications.refreshAndShowPopupIfNecessary();\n        }\n\n    },\n    createSmallInboxNotification: function (){\n        var notificationId = \"inbox\";\n        chrome.notifications.create(notificationId, qm.chrome.windowParams.inboxNotificationParams, function (id) {});\n    },\n    createSmallNotificationAndOpenInboxInBackground: function(){\n       qm.chrome.createSmallInboxNotification();\n        var windowParams = qm.chrome.windowParams.fullInboxWindowParams;\n        windowParams.focused = false;\n        qm.chrome.openOrFocusChromePopupWindow(windowParams);\n    },\n    createPopup: function(windowParams){\n        function createPopup(windowParams) {\n            windowParams.url = qm.api.addGlobalParams(windowParams.url);\n            qmLog.info(\"creating popup window\", null, windowParams);\n            chrome.windows.create(windowParams, function (chromeWindow) {\n                qm.storage.setItem('chromeWindowId', chromeWindow.id);\n                chrome.windows.update(chromeWindow.id, { focused: windowParams.focused });\n            });\n        }\n        if(windowParams.url.indexOf('.quantimo.do') !== -1 || windowParams.url.indexOf('popup.html') !== -1){\n            createPopup(windowParams);\n        } else {\n            qm.client.getClientWebsiteUrl(function (fullWebsiteUrl) {\n                windowParams.url = fullWebsiteUrl + windowParams.url;\n                createPopup(windowParams);\n            })\n        }\n    },\n    canShowChromePopups: function(){\n        if(typeof chrome === \"undefined\" || typeof chrome.windows === \"undefined\" || typeof chrome.windows.create === \"undefined\"){\n            qmLog.info(\"Cannot show chrome popups\");\n            return false;\n        }\n        if(qm.getUser() && !qm.getUser().pushNotificationsEnabled){\n            qmLog.info(\"User has disabled notifications\");\n            return false;\n        }\n        return true;\n    },\n    getChromeManifest: function() {if(qm.platform.isChromeExtension()){return chrome.runtime.getManifest();}},\n    getWindowByIdAndFocusOrCreateNewPopup: function(chromeWindowId, windowParams){\n        chrome.windows.get(chromeWindowId, function (chromeWindow) {\n            if (!chrome.runtime.lastError && chromeWindow){\n                if(windowParams.focused){\n                    window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow: Window already open. Focusing...', windowParams );\n                    chrome.windows.update(chromeWindowId, {focused: true});\n                } else {\n                    window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow: Window already open. NOT focusing...', windowParams );\n                }\n            } else {\n                window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow: Window NOT already open. Creating one...', windowParams );\n                qm.chrome.createPopup(windowParams);\n            }\n        });\n    },\n    createPopupIfNoWindowIdInLocalStorage: function(windowParams){\n        window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow checking if a window is already open.  new window params: ', null, windowParams );\n        var chromeWindowId = parseInt(qm.storage.getItem(qm.items.chromeWindowId), null);\n        if(!chromeWindowId){\n            window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow: No window id from localStorage. Creating one...', windowParams );\n            qm.chrome.createPopup(windowParams);\n            return false;\n        }\n        window.qmLog.info('qm.chrome.openOrFocusChromePopupWindow: window id from localStorage: ' + chromeWindowId, windowParams );\n        return chromeWindowId;\n    },\n    getCurrentWindowAndFocusOrCreateNewPopup: function (windowParams) {\n        chrome.windows.getCurrent(function (window) {\n            console.log(\"current window\", window);\n            if(window && window.type === \"popup\"){\n                chrome.windows.update(window.id, {focused: true});\n            } else {\n                qm.chrome.createPopup(windowParams);\n            }\n        });\n    },\n    getAllWindowsFocusOrCreateNewPopup: function (windowParams) {\n        qm.userHelper.getUserFromLocalStorageOrApi(function (user) {\n            if(!user.pushNotificationsEnabled){\n                qmLog.pushDebug(\"Not showing chrome popup because notifications are disabled\");\n                return;\n            }\n            console.log(\"getAllWindowsFocusOrCreateNewPopup\");\n            chrome.windows.getAll(function (windows) {\n                for (var i = 0; i < windows.length; i++) {\n                    var window = windows[i];\n                    console.log(\"current window\", window);\n                    if(window.type === \"popup\"){\n                        console.log(\"Focusing existing popup\", window);\n                        chrome.windows.update(window.id, {focused: true});\n                        return;\n                    }\n                }\n                qm.chrome.createPopup(windowParams);\n            });\n        })\n    },\n    handleNotificationClick: function(notificationId) {\n        window.qmLog.debug('onClicked: notificationId:' + notificationId);\n        var focusWindow = true;\n        if(!qm.platform.isChromeExtension()){return;}\n        if(!notificationId){notificationId = null;}\n        qm.chrome.updateChromeBadge(0);\n        qmLog.info(\"notificationId: \"+ notificationId);\n        /**\n         * @return {boolean}\n         */\n        function IsJsonString(str) {\n            try {\n                JSON.parse(str);\n            } catch (exception) {\n                return false;\n            }\n            return true;\n        }\n        if(notificationId === \"moodReportNotification\") {\n            qm.chrome.openOrFocusChromePopupWindow(qm.chrome.windowParams.facesWindowParams);\n        } else if (notificationId === \"signin\") {\n            qm.chrome.openLoginWindow();\n        } else if (notificationId && IsJsonString(notificationId)) {\n            qm.chrome.openMeasurementAddWindow(focusWindow, notificationId);\n        } else {\n            qm.chrome.openFullInbox(focusWindow, notificationId);\n        }\n        if(notificationId){chrome.notifications.clear(notificationId);}\n    },\n    initialize: function () {\n        //return;\n        chrome.notifications.onClicked.addListener(function(notificationId) { // Called when the notification is clicked\n            qm.chrome.handleNotificationClick(notificationId);\n        });\n        /** @namespace chrome.extension.onMessage */\n        chrome.extension.onMessage.addListener(function(request, sender, sendResponse) {\n            // Handles extension-specific requests that come in, such as a request to upload a new measurement\n            window.qmLog.debug('Received request: ' + request.message, null);\n            if(request.message === \"uploadMeasurements\") {qm.api.postMeasurements(request.payload, null);}\n        });\n        chrome.runtime.onInstalled.addListener(function () { // Called when the extension is installed\n            qm.chrome.scheduleGenericChromeExtensionNotification();\n            if(!localStorage.getItem(qm.items.introSeen)){qm.chrome.openIntroWindowPopup();}\n        });\n        chrome.alarms.onAlarm.addListener(function (alarm) { // Called when an alarm goes off (we only have one)\n            qmLog.info('onAlarm Listener heard this alarm ', null, alarm);\n            qm.userHelper.getUserFromLocalStorageOrApi(function () {\n                qm.notifications.refreshIfEmptyOrStale(qm.chrome.showRatingOrInboxPopup());\n            });\n        });\n        qm.userHelper.getUserFromLocalStorageOrApi(function () {\n            qm.chrome.showRatingOrInboxPopup();\n        }, function () {\n            qm.chrome.showSignInNotification();\n        });\n    },\n    openIntroWindowPopup: function(){\n        qm.storage.setItem('introSeen', true);\n        qm.chrome.createPopup(qm.chrome.windowParams.introWindowParams);\n    },\n    openOrFocusChromePopupWindow: function (windowParams) {\n        //qm.chrome.chromeDebug();\n        if(!window.qm.chrome.canShowChromePopups()){return;}\n        // var chromeWindowId = qm.chrome.createPopupIfNoWindowIdInLocalStorage(windowParams);\n        // if(!chromeWindowId){return;}\n        //qm.chrome.getCurrentWindowAndFocusOrCreateNewPopup(windowParams);\n        qm.chrome.getAllWindowsFocusOrCreateNewPopup(windowParams);\n        //qm.chrome.getWindowByIdAndFocusOrCreateNewPopup(chromeWindowId, windowParams);\n    },\n    openFullInbox: function (focusWindow, notificationId) {\n        var windowParams = qm.chrome.windowParams.fullInboxWindowParams;\n        if(focusWindow){windowParams.focused = true;}\n        qm.chrome.openOrFocusChromePopupWindow(qm.chrome.windowParams.fullInboxWindowParams);\n        console.error('notificationId is not a json object and is not moodReportNotification. Opening Reminder Inbox', notificationId);\n    },\n    openLoginWindow: function(){\n        var windowParams = { type: 'panel', top: multiplyScreenHeight(0.2), left: multiplyScreenWidth(0.4), width: 450, height: 750, focused: true};\n        windowParams.url = \"https://\" + qm.getClientId() + '.quantimo.do/ionic/Modo/www/index.html#/app/login';\n        windowParams.focused = true;\n        qm.chrome.openOrFocusChromePopupWindow(windowParams);\n    },\n    openMeasurementAddWindow: function (focusWindow, notificationId) {\n        var windowParams = qm.chrome.windowParams.fullInboxWindowParams;\n        if(focusWindow){windowParams.focused = true;}\n        qm.chrome.windowParams.fullInboxWindowParams.url = \"index.html#/app/measurement-add/?trackingReminderObject=\" + notificationId;\n        qm.chrome.openOrFocusChromePopupWindow(qm.chrome.windowParams.fullInboxWindowParams);\n    },\n    scheduleGenericChromeExtensionNotification: function() {\n        var intervalInMinutes = parseInt(qm.storage.getItem(qm.items.notificationInterval) || \"60\");\n        qmLog.info('scheduleGenericChromeExtensionNotification: Reminder notification interval is ' + intervalInMinutes + ' minutes');\n        var alarmInfo = {periodInMinutes: intervalInMinutes};\n        qmLog.info('scheduleGenericChromeExtensionNotification: clear genericTrackingReminderNotificationAlarm');\n        chrome.alarms.clear(\"genericTrackingReminderNotificationAlarm\");\n        qmLog.info('scheduleGenericChromeExtensionNotification: create genericTrackingReminderNotificationAlarm', null, alarmInfo);\n        chrome.alarms.create(\"genericTrackingReminderNotificationAlarm\", alarmInfo);\n        qmLog.info('Alarm set, every ' + intervalInMinutes + ' minutes');\n    },\n    scheduleChromeExtensionNotificationWithTrackingReminder: function(trackingReminder) {\n        var alarmInfo = {};\n        alarmInfo.when =  trackingReminder.nextReminderTimeEpochSeconds * 1000;\n        alarmInfo.periodInMinutes = trackingReminder.reminderFrequency / 60;\n        var alarmName = qm.chrome.createChromeAlarmNameFromTrackingReminder(trackingReminder);\n        alarmName = JSON.stringify(alarmName);\n        chrome.alarms.getAll(function(alarms) {\n            var hasAlarm = alarms.some(function(oneAlarm) {return oneAlarm.name === alarmName;});\n            if (hasAlarm) {qmLog.info(null, 'Already have an alarm for ' + alarmName, null);}\n            if (!hasAlarm) {\n                chrome.alarms.create(alarmName, alarmInfo);\n                qmLog.info(null, 'Created alarm for alarmName ' + alarmName, null, alarmInfo);\n            }\n        });\n    },\n    createChromeAlarmNameFromTrackingReminder: function (trackingReminder) {\n        return {\n            trackingReminderId: trackingReminder.id,\n            variableName: trackingReminder.variableName,\n            defaultValue: trackingReminder.defaultValue,\n            unitAbbreviatedName: trackingReminder.unitAbbreviatedName,\n            periodInMinutes: trackingReminder.reminderFrequency / 60,\n            reminderStartTime: trackingReminder.reminderStartTime,\n            startTrackingDate: trackingReminder.startTrackingDate,\n            variableCategoryName: trackingReminder.variableCategoryName,\n            valence: trackingReminder.valence,\n            reminderEndTime: trackingReminder.reminderEndTime\n        };\n    },\n    showRatingOrInboxPopup: function () {\n        qm.userHelper.getUserFromLocalStorageOrApi(function (user) {\n            if(!user.pushNotificationsEnabled){\n                qmLog.pushDebug(\"Not showing chrome popup because notifications are disabled\");\n                return;\n            }\n            qm.notifications.refreshIfEmptyOrStale(function () {\n                if(!qm.notifications.getNumberInGlobalsOrLocalStorage()){\n                    qmLog.info(\"No notifications not opening popup\");\n                    return false;\n                }\n                if(qm.getUser().combineNotifications){\n                    qm.chrome.createSmallInboxNotification();\n                    return;\n                }\n                window.trackingReminderNotification = window.qm.notifications.getMostRecentRatingNotificationNotInSyncQueue();\n                if(window.trackingReminderNotification){\n                    qm.chrome.showRatingPopup(window.trackingReminderNotification);\n                } else if (qm.storage.getItem(qm.items.useSmallInbox)) {\n                    qmLog.info(\"No rating notifications so opening compactInboxWindow popup\");\n                    qm.chrome.openOrFocusChromePopupWindow(qm.chrome.windowParams.compactInboxWindowParams);\n                } else if (qm.notifications.getNumberInGlobalsOrLocalStorage()) {\n                    qmLog.info(\"Got an alarm so checkTimePastNotificationsAndExistingPopupAndShowPopupIfNecessary(alarm)\");\n                    qm.chrome.createSmallInboxNotification();\n                }\n            }, function (err) {\n                qmLog.error(\"Not showing popup because of notification refresh error: \"+ err);\n            });\n        });\n    },\n    showRatingPopup: function(trackingReminderNotification){\n        qmLog.info(\"Opening rating notification popup\");\n        var getChromeRatingNotificationParams = function(trackingReminderNotification){\n            if(!trackingReminderNotification){trackingReminderNotification = qm.notifications.getMostRecentRatingNotificationNotInSyncQueue();}\n            return { url: qm.notifications.getRatingNotificationPath(trackingReminderNotification), type: 'panel', top: screen.height - 150,\n                left: screen.width - 380, width: 390, height: 110, focused: true};\n        };\n        if(trackingReminderNotification){\n            window.trackingReminderNotification = trackingReminderNotification;\n        } else {\n            window.trackingReminderNotification = qm.notifications.getMostRecentRatingNotificationNotInSyncQueue();\n        }\n        if(window.trackingReminderNotification){\n            qm.getClientId(function (clientId) {\n                qm.chrome.openOrFocusChromePopupWindow(getChromeRatingNotificationParams(window.trackingReminderNotification));\n            });\n        }\n        window.qm.chrome.updateChromeBadge(0);\n    },\n    showSignInNotification: function() {\n        if(!qm.platform.isChromeExtension()){return;}\n        var notificationId = 'signin';\n        chrome.notifications.create(notificationId, qm.chrome.windowParams.signInNotificationParams, function (id) {});\n    },\n    updateChromeBadge: function(numberOfNotifications){\n        var text = \"\";\n        if(qm.platform.isChromeExtension() && typeof chrome.browserAction !== \"undefined\"){\n            if(numberOfNotifications){text = numberOfNotifications.toString();}\n            if(numberOfNotifications > 9){text = \"?\";}\n            chrome.browserAction.setBadgeText({text: text});\n        }\n    }\n};\nif(typeof screen !== \"undefined\"){\n    function multiplyScreenHeight(factor) {\n        if(typeof screen === \"undefined\"){return false;}\n        return parseInt(factor * screen.height);\n    }\n    function multiplyScreenWidth(factor) {\n        if(typeof screen === \"undefined\"){return false;}\n        return parseInt(factor * screen.height);\n    }\n    qm.chrome.windowParams = {\n        introWindowParams: { url: \"index.html#/app/intro\", type: 'panel', top: multiplyScreenHeight(0.2), left: multiplyScreenWidth(0.4), width: 450, height: 750, focused: true},\n        facesWindowParams: { url: \"android_popup.html\", type: 'panel', top: screen.height - 150, left: screen.width - 380, width: 390, height: 110, focused: true},\n        fullInboxWindowParams: { url: \"index.html#/app/reminders-inbox\", type: 'panel', top: screen.height - 800, left: screen.width - 455, width: 450, height: 750},\n        compactInboxWindowParams: { url: \"index.html#/app/reminders-inbox-compact\", type: 'panel', top: screen.height - 360 - 30, left: screen.width - 350, width: 350, height: 360},\n        inboxNotificationParams: { type: \"basic\", title: \"How are you?\", message: \"Click to open reminder inbox\", iconUrl: \"img/icons/icon_700.png\", priority: 2},\n        signInNotificationParams: { type: \"basic\", title: \"How are you?\", message: \"Click to sign in and record a measurement\", iconUrl: \"img/icons/icon_700.png\", priority: 2},\n    };\n}\nif(qm.platform.isChromeExtension()){\n    qm.chrome.initialize();\n}\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag = f()}})(function(){var define,module,exports;\n","// minimal implementations of useful ES functionality\n\n// all we really need for arrays is reduce – everything else is just sugar!\n\n// Array#reduce\nconst reduce = (arr, fn, accum) => {\n  let val = accum\n  for (let i = 0, len = arr.length; i < len; i++) val = fn(val, arr[i], i, arr)\n  return val\n}\n\n// Array#filter\nconst filter = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => !fn(item, i, arr) ? accum : accum.concat(item), [])\n\n// Array#map\nconst map = (arr, fn) =>\n  reduce(arr, (accum, item, i, arr) => accum.concat(fn(item, i, arr)), [])\n\n// Array#includes\nconst includes = (arr, x) =>\n  reduce(arr, (accum, item, i, arr) => accum === true || item === x, false)\n\nconst _hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString')\nconst _dontEnums = [\n  'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty',\n  'isPrototypeOf', 'propertyIsEnumerable', 'constructor'\n]\n\n// Object#keys\nconst keys = obj => {\n  // stripped down version of\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/Keys\n  const result = []\n  let prop\n  for (prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) result.push(prop)\n  }\n  if (!_hasDontEnumBug) return result\n  for (let i = 0, len = _dontEnums.length; i < len; i++) {\n    if (Object.prototype.hasOwnProperty.call(obj, _dontEnums[i])) result.push(_dontEnums[i])\n  }\n  return result\n}\n\n// Array#isArray\nconst isArray = obj => Object.prototype.toString.call(obj) === '[object Array]'\n\nconst _pad = n => n < 10 ? `0${n}` : n\n\n// Date#toISOString\nconst isoDate = () => {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\n  const d = new Date()\n  return d.getUTCFullYear() +\n    '-' + _pad(d.getUTCMonth() + 1) +\n    '-' + _pad(d.getUTCDate()) +\n    'T' + _pad(d.getUTCHours()) +\n    ':' + _pad(d.getUTCMinutes()) +\n    ':' + _pad(d.getUTCSeconds()) +\n    '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n    'Z'\n}\n\nmodule.exports = { map, reduce, filter, includes, keys, isArray, isoDate }\n","const { isoDate } = require('./lib/es-utils')\n\nclass BugsnagBreadcrumb {\n  constructor (name = '[anonymous]', metaData = {}, type = 'manual', timestamp = isoDate()) {\n    this.type = type\n    this.name = name\n    this.metaData = metaData\n    this.timestamp = timestamp\n  }\n\n  toJSON () {\n    return {\n      type: this.type,\n      name: this.name,\n      timestamp: this.timestamp,\n      metaData: this.metaData\n    }\n  }\n}\n\nmodule.exports = BugsnagBreadcrumb\n","const { includes } = require('./es-utils')\n\nmodule.exports = value =>\n  includes([ 'undefined', 'number' ], typeof value) &&\n  parseInt('' + value, 10) === value &&\n  value > 0\n","const { filter, reduce, keys, isArray } = require('./lib/es-utils')\nconst positiveIntIfDefined = require('./lib/positive-int-check')\n\nmodule.exports.schema = {\n  apiKey: {\n    defaultValue: () => null,\n    message: 'is required',\n    validate: value => typeof value === 'string' && value.length\n  },\n  appVersion: {\n    defaultValue: () => null,\n    message: 'should be a string',\n    validate: value => value === null || (typeof value === 'string' && value.length)\n  },\n  autoNotify: {\n    defaultValue: () => true,\n    message: 'should be true|false',\n    validate: value => value === true || value === false\n  },\n  beforeSend: {\n    defaultValue: () => [],\n    message: 'should be a function or array of functions',\n    validate: value => typeof value === 'function' || (isArray(value) && filter(value, f => typeof f === 'function').length === value.length)\n  },\n  endpoint: {\n    defaultValue: () => 'https://notify.bugsnag.com',\n    message: 'should be a URL',\n    validate: () => true\n  },\n  sessionEndpoint: {\n    defaultValue: () => 'https://sessions.bugsnag.com',\n    message: 'should be a URL',\n    validate: () => true\n  },\n  autoCaptureSessions: {\n    defaultValue: () => false,\n    message: 'should be true|false',\n    validate: val => val === true || val === false\n  },\n  notifyReleaseStages: {\n    defaultValue: () => null,\n    message: 'should be an array of strings',\n    validate: value => value === null || (isArray(value) && filter(value, f => typeof f === 'string').length === value.length)\n  },\n  releaseStage: {\n    defaultValue: () => 'production',\n    message: 'should be a string',\n    validate: value => typeof value === 'string' && value.length\n  },\n  maxBreadcrumbs: {\n    defaultValue: () => 20,\n    message: 'should be a number ≤40',\n    validate: value => value === 0 || (positiveIntIfDefined(value) && (value === undefined || value <= 40))\n  },\n  autoBreadcrumbs: {\n    defaultValue: () => true,\n    message: 'should be true|false',\n    validate: (value) => typeof value === 'boolean'\n  },\n  user: {\n    defaultValue: () => null,\n    message: '(object) user should be an object',\n    validate: (value) => typeof value === 'object'\n  },\n  metaData: {\n    defaultValue: () => null,\n    message: 'should be an object',\n    validate: (value) => typeof value === 'object'\n  },\n  logger: {\n    defaultValue: () => undefined,\n    message: 'should be null or an object with methods { debug, info, warn, error }',\n    validate: value =>\n      (!value) ||\n      (value && reduce(\n        [ 'debug', 'info', 'warn', 'error' ],\n        (accum, method) => accum && typeof value[method] === 'function',\n        true\n      ))\n  }\n}\n\nmodule.exports.mergeDefaults = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  return reduce(keys(schema), (accum, key) => {\n    accum[key] = opts[key] !== undefined ? opts[key] : schema[key].defaultValue()\n    return accum\n  }, {})\n}\n\nmodule.exports.validate = (opts, schema) => {\n  if (!opts || !schema) throw new Error('schema.mergeDefaults(opts, schema): opts and schema objects are required')\n  const errors = reduce(keys(schema), (accum, key) => {\n    if (schema[key].validate(opts[key])) return accum\n    return accum.concat({ key, message: schema[key].message, value: opts[key] })\n  }, [])\n  return { valid: !errors.length, errors }\n}\n","module.exports = client =>\n  client.app && typeof client.app.releaseStage === 'string'\n    ? client.app.releaseStage\n    : client.config.releaseStage\n","// Given `err` which may be an error, does it have a stack property which is a string?\nmodule.exports = err =>\n  !!err &&\n  (!!err.stack || !!err.stacktrace || !!err['opera#sourceloc']) &&\n  typeof (err.stack || err.stacktrace || err['opera#sourceloc']) === 'string'\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function() {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.substring(1);\n    }\n\n    function _getter(p) {\n        return function() {\n            return this[p];\n        };\n    }\n\n    var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];\n    var numericProps = ['columnNumber', 'lineNumber'];\n    var stringProps = ['fileName', 'functionName', 'source'];\n    var arrayProps = ['args'];\n\n    var props = booleanProps.concat(numericProps, stringProps, arrayProps);\n\n    function StackFrame(obj) {\n        if (obj instanceof Object) {\n            for (var i = 0; i < props.length; i++) {\n                if (obj.hasOwnProperty(props[i]) && obj[props[i]] !== undefined) {\n                    this['set' + _capitalize(props[i])](obj[props[i]]);\n                }\n            }\n        }\n    }\n\n    StackFrame.prototype = {\n        getArgs: function() {\n            return this.args;\n        },\n        setArgs: function(v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        getEvalOrigin: function() {\n            return this.evalOrigin;\n        },\n        setEvalOrigin: function(v) {\n            if (v instanceof StackFrame) {\n                this.evalOrigin = v;\n            } else if (v instanceof Object) {\n                this.evalOrigin = new StackFrame(v);\n            } else {\n                throw new TypeError('Eval Origin must be an Object or StackFrame');\n            }\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    for (var i = 0; i < booleanProps.length; i++) {\n        StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);\n        StackFrame.prototype['set' + _capitalize(booleanProps[i])] = (function(p) {\n            return function(v) {\n                this[p] = Boolean(v);\n            };\n        })(booleanProps[i]);\n    }\n\n    for (var j = 0; j < numericProps.length; j++) {\n        StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);\n        StackFrame.prototype['set' + _capitalize(numericProps[j])] = (function(p) {\n            return function(v) {\n                if (!_isNumber(v)) {\n                    throw new TypeError(p + ' must be a Number');\n                }\n                this[p] = Number(v);\n            };\n        })(numericProps[j]);\n    }\n\n    for (var k = 0; k < stringProps.length; k++) {\n        StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);\n        StackFrame.prototype['set' + _capitalize(stringProps[k])] = (function(p) {\n            return function(v) {\n                this[p] = String(v);\n            };\n        })(stringProps[k]);\n    }\n\n    return StackFrame;\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?:\\:(\\d+))?(?:\\:(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[\\(\\)]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.join('@') || undefined;\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n","(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize) {\n                if (!curr['arguments']) {\n                  break;\n                }\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n","const ErrorStackParser = require('error-stack-parser')\nconst StackGenerator = require('stack-generator')\nconst hasStack = require('./lib/has-stack')\nconst { reduce, filter } = require('./lib/es-utils')\n\nclass BugsnagReport {\n  constructor (errorClass, errorMessage, stacktrace = [], handledState = defaultHandledState()) {\n    // duck-typing ftw >_<\n    this.__isBugsnagReport = true\n\n    this._ignored = false\n\n    // private (un)handled state\n    this._handledState = handledState\n\n    // setable props\n    this.app = undefined\n    this.apiKey = undefined\n    this.breadcrumbs = []\n    this.context = undefined\n    this.device = undefined\n    this.errorClass = stringOrFallback(errorClass, '[no error class]')\n    this.errorMessage = stringOrFallback(errorMessage, '[no error message]')\n    this.groupingHash = undefined\n    this.metaData = {}\n    this.request = undefined\n    this.severity = this._handledState.severity\n    this.stacktrace = reduce(stacktrace, (accum, frame) => {\n      const f = formatStackframe(frame)\n      // don't include a stackframe if none of its properties are defined\n      try {\n        if (JSON.stringify(f) === '{}') return accum\n        return accum.concat(f)\n      } catch (e) {\n        return accum\n      }\n    }, [])\n    this.user = undefined\n    this.session = undefined\n  }\n\n  ignore () {\n    this._ignored = true\n  }\n\n  isIgnored () {\n    return this._ignored\n  }\n\n  updateMetaData (section, ...args) {\n    if (!section) return this\n    let updates\n\n    // updateMetaData(\"section\", null) -> removes section\n    if (args[0] === null) return this.removeMetaData(section)\n\n    // updateMetaData(\"section\", \"property\", null) -> removes property from section\n    if (args[1] === null) return this.removeMetaData(section, args[0], args[1])\n\n    // normalise the two supported input types into object form\n    if (typeof args[0] === 'object') updates = args[0]\n    if (typeof args[0] === 'string') updates = { [args[0]]: args[1] }\n\n    // exit if we don't have an updates object at this point\n    if (!updates) return this\n\n    // ensure a section with this name exists\n    if (!this.metaData[section]) this.metaData[section] = {}\n\n    // merge the updates with the existing section\n    this.metaData[section] = { ...this.metaData[section], ...updates }\n\n    return this\n  }\n\n  removeMetaData (section, property) {\n    if (typeof section !== 'string') return this\n\n    // remove an entire section\n    if (!property) {\n      delete this.metaData[section]\n      return this\n    }\n\n    // remove a single property from a section\n    if (this.metaData[section]) {\n      delete this.metaData[section][property]\n      return this\n    }\n\n    return this\n  }\n\n  toJSON () {\n    return {\n      payloadVersion: '4',\n      exceptions: [\n        {\n          errorClass: this.errorClass,\n          message: this.errorMessage,\n          stacktrace: this.stacktrace,\n          type: 'browserjs'\n        }\n      ],\n      severity: this.severity,\n      unhandled: this._handledState.unhandled,\n      severityReason: this._handledState.severityReason,\n      app: this.app,\n      device: this.device,\n      breadcrumbs: this.breadcrumbs,\n      context: this.context,\n      user: this.user,\n      metaData: this.metaData,\n      groupingHash: this.groupingHash,\n      request: this.request,\n      session: this.session\n    }\n  }\n}\n\n// takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n// and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\nconst formatStackframe = frame => {\n  const f = {\n    file: frame.fileName,\n    method: normaliseFunctionName(frame.functionName),\n    lineNumber: frame.lineNumber,\n    columnNumber: frame.columnNumber,\n    code: undefined,\n    inProject: undefined\n  }\n  // Some instances result in no file:\n  // - calling notify() from chrome's terminal results in no file/method.\n  // - non-error exception thrown from global code in FF\n  // This adds one.\n  if (f.lineNumber > -1 && !f.file && !f.method) {\n    f.file = 'global code'\n  }\n  return f\n}\n\nconst normaliseFunctionName = name => /^global code$/i.test(name) ? 'global code' : name\n\nconst defaultHandledState = () => ({\n  unhandled: false,\n  severity: 'warning',\n  severityReason: { type: 'handledException' }\n})\n\nconst stringOrFallback = (str, fallback) => typeof str === 'string' && str ? str : fallback\n\n// Helpers\n\nBugsnagReport.getStacktrace = (error, errorFramesToSkip = 0, generatedFramesToSkip = 0) => {\n  if (hasStack(error)) return ErrorStackParser.parse(error).slice(errorFramesToSkip)\n  // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n  return filter(StackGenerator.backtrace(), frame =>\n    (frame.functionName || '').indexOf('StackGenerator$$') === -1\n  ).slice(1 + generatedFramesToSkip)\n}\n\nBugsnagReport.ensureReport = function (reportOrError, errorFramesToSkip = 0, generatedFramesToSkip = 0) {\n  // notify() can be called with a Report object. In this case no action is required\n  if (reportOrError.__isBugsnagReport) return reportOrError\n  try {\n    const stacktrace = BugsnagReport.getStacktrace(reportOrError, errorFramesToSkip, 1 + generatedFramesToSkip)\n    return new BugsnagReport(reportOrError.name, reportOrError.message, stacktrace)\n  } catch (e) {\n    return new BugsnagReport(reportOrError.name, reportOrError.message, [])\n  }\n}\n\nmodule.exports = BugsnagReport\n","module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n","var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = 0;\nfor (var prop in env) {\n  if (Object.hasOwnProperty.call(env, prop)) globalCount++;\n}\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n","/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((Math.random() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n","const { isoDate } = require('./lib/es-utils')\nconst cuid = require('@bugsnag/cuid')\n\nclass Session {\n  constructor () {\n    this.id = cuid()\n    this.startedAt = isoDate()\n    this._handled = 0\n    this._unhandled = 0\n  }\n  toJSON () {\n    return {\n      id: this.id,\n      startedAt: this.startedAt,\n      events: { handled: this._handled, unhandled: this._unhandled }\n    }\n  }\n  trackError (report) {\n    this[report._handledState.unhandled ? '_unhandled' : '_handled'] += 1\n  }\n}\n\nmodule.exports = Session\n","\n/**\n * Expose `isError`.\n */\n\nmodule.exports = isError;\n\n/**\n * Test whether `value` is error object.\n *\n * @param {*} value\n * @returns {boolean}\n */\n\nfunction isError(value) {\n  switch (Object.prototype.toString.call(value)) {\n    case '[object Error]': return true;\n    case '[object Exception]': return true;\n    case '[object DOMException]': return true;\n    default: return value instanceof Error;\n  }\n}\n","const config = require('./config')\nconst BugsnagReport = require('./report')\nconst BugsnagBreadcrumb = require('./breadcrumb')\nconst BugsnagSession = require('./session')\nconst { map, reduce, includes, isArray } = require('./lib/es-utils')\nconst inferReleaseStage = require('./lib/infer-release-stage')\nconst isError = require('iserror')\n\nconst noop = () => {}\n\nclass BugsnagClient {\n  constructor (notifier, configSchema = config.schema, session = null) {\n    if (!notifier) throw new Error('new BugsnagClient(notifier, configSchema) requires `notifier` argument')\n    if (!notifier.name || !notifier.version || !notifier.url) {\n      throw new Error('new BugsnagClient(notifier, configSchema) - `notifier` requires: `{ name, version, url }`')\n    }\n\n    // notifier id\n    this.notifier = notifier\n\n    // config\n    this.configSchema = configSchema\n\n    // configure() should be called before notify()\n    this._configured = false\n\n    // i/o\n    this._transport = { name: 'NULL_TRANSPORT', sendSession: noop, sendReport: noop }\n    this._logger = { debug: noop, info: noop, warn: noop, error: noop }\n\n    // plugins\n    this.plugins = []\n\n    this.session = session\n    this.beforeSession = []\n\n    this.breadcrumbs = []\n\n    // setable props\n    this.app = {}\n    this.context = undefined\n    this.device = undefined\n    this.metaData = undefined\n    this.request = undefined\n    this.user = {}\n\n    // expose internal constructors\n    this.BugsnagReport = BugsnagReport\n    this.BugsnagBreadcrumb = BugsnagBreadcrumb\n    this.BugsnagSession = BugsnagSession\n  }\n\n  configure (opts = {}) {\n    this.config = config.mergeDefaults({ ...this.config, ...opts }, this.configSchema)\n    const validity = config.validate(this.config, this.configSchema)\n    if (!validity.valid === true) {\n      const err = new Error('Bugsnag configuration error')\n      err.errors = map(validity.errors, (err) => `${err.key} ${err.message} \\n  ${err.value}`)\n      throw err\n    }\n    if (typeof this.config.beforeSend === 'function') this.config.beforeSend = [ this.config.beforeSend ]\n    if (this.config.appVersion !== null) this.app.version = this.config.appVersion\n    if (this.config.metaData) this.metaData = this.config.metaData\n    if (this.config.user) this.user = this.config.user\n    if (this.config.logger) this.logger(this.config.logger)\n    this._configured = true\n    this._logger.debug(`Loaded!`)\n    return this\n  }\n\n  use (plugin) {\n    this.plugins.push(plugin)\n    return plugin.init(this)\n  }\n\n  transport (t) {\n    this._transport = t\n    return this\n  }\n\n  logger (l, sid) {\n    this._logger = l\n    return this\n  }\n\n  sessionDelegate (s) {\n    this._sessionDelegate = s\n    return this\n  }\n\n  startSession () {\n    if (!this._sessionDelegate) {\n      this._logger.warn('No session implementation is installed')\n      return this\n    }\n    return this._sessionDelegate.startSession(this)\n  }\n\n  leaveBreadcrumb (name, metaData, type, timestamp) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling leaveBreadcrumb()')\n\n    // coerce bad values so that the defaults get set\n    name = name || undefined\n    type = typeof type === 'string' ? type : undefined\n    timestamp = typeof timestamp === 'string' ? timestamp : undefined\n    metaData = typeof metaData === 'object' && metaData !== null ? metaData : undefined\n\n    // if no name and no metaData, usefulness of this crumb is questionable at best so discard\n    if (typeof name !== 'string' && !metaData) return\n\n    const crumb = new BugsnagBreadcrumb(name, metaData, type, timestamp)\n\n    // push the valid crumb onto the queue and maintain the length\n    this.breadcrumbs.push(crumb)\n    if (this.breadcrumbs.length > this.config.maxBreadcrumbs) {\n      this.breadcrumbs = this.breadcrumbs.slice(this.breadcrumbs.length - this.config.maxBreadcrumbs)\n    }\n\n    return this\n  }\n\n  notify (error, opts = {}) {\n    if (!this._configured) throw new Error('Bugsnag must be configured before calling report()')\n\n    // releaseStage can be set via config.releaseStage or client.app.releaseStage\n    const releaseStage = inferReleaseStage(this)\n\n    // ensure we have an error (or a reasonable object representation of an error)\n    let { err, errorFramesToSkip, _opts } = normaliseError(error, opts, this._logger)\n    if (_opts) opts = _opts\n\n    // if we have something falsey at this point, report usage error\n    if (!err) {\n      this._logger.warn(`Usage error. notify() called with no \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with no \"error\" parameter')\n    }\n\n    // ensure opts is an object\n    if (typeof opts !== 'object' || opts === null) opts = {}\n\n    // create a report from the error, if it isn't one already\n    const report = BugsnagReport.ensureReport(err, errorFramesToSkip, 1)\n\n    report.app = { ...{ releaseStage }, ...report.app, ...this.app }\n    report.context = report.context || opts.context || this.context || undefined\n    report.device = { ...report.device, ...this.device, ...opts.device }\n    report.request = { ...report.request, ...this.request, ...opts.request }\n    report.user = { ...report.user, ...this.user, ...opts.user }\n    report.metaData = { ...report.metaData, ...this.metaData, ...opts.metaData }\n    report.breadcrumbs = this.breadcrumbs.slice(0)\n\n    if (this.session) {\n      this.session.trackError(report)\n      report.session = this.session\n    }\n\n    // set severity if supplied\n    if (opts.severity !== undefined) {\n      report.severity = opts.severity\n      report._handledState.severityReason = { type: 'userSpecifiedSeverity' }\n    }\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(this.config.notifyReleaseStages) && !includes(this.config.notifyReleaseStages, releaseStage)) {\n      this._logger.warn(`Report not sent due to releaseStage/notifyReleaseStages configuration`)\n      return false\n    }\n\n    const originalSeverity = report.severity\n\n    const beforeSend = [].concat(opts.beforeSend).concat(this.config.beforeSend)\n    const preventSend = reduce(beforeSend, (accum, fn) => {\n      if (accum === true) return true\n      if (typeof fn === 'function' && fn(report) === false) return true\n      if (report.isIgnored()) return true\n      return false\n    }, false)\n\n    if (preventSend) {\n      this._logger.debug(`Report not sent due to beforeSend callback`)\n      return false\n    }\n\n    // only leave a crumb for the error if actually got sent\n    if (this.config.autoBreadcrumbs) {\n      this.leaveBreadcrumb(report.errorClass, {\n        errorClass: report.errorClass,\n        errorMessage: report.errorMessage,\n        severity: report.severity,\n        stacktrace: report.stacktrace\n      }, 'error')\n    }\n\n    if (originalSeverity !== report.severity) {\n      report._handledState.severityReason = { type: 'userCallbackSetSeverity' }\n    }\n\n    this._transport.sendReport(this._logger, this.config, {\n      apiKey: report.apiKey || this.config.apiKey,\n      notifier: this.notifier,\n      events: [ report ]\n    })\n\n    return true\n  }\n}\n\nconst normaliseError = (error, opts, logger) => {\n  let err\n  let errorFramesToSkip = 0\n  let _opts\n  switch (typeof error) {\n    case 'string':\n      if (typeof opts === 'string') {\n        // ≤v3 used to have a notify('ErrorName', 'Error message') interface\n        // report usage/deprecation errors if this function is called like that\n        logger.warn(`Usage error. notify() called with (string, string) but expected (error, object)`)\n        err = new Error('Bugsnag usage error. notify() called with (string, string) but expected (error, object)')\n        _opts = { metaData: { notifier: { notifyArgs: [ error, opts ] } } }\n      } else {\n        err = new Error(String(error))\n        errorFramesToSkip += 2\n      }\n      break\n    case 'number':\n    case 'boolean':\n      err = new Error(String(error))\n      break\n    case 'function':\n      logger.warn(`Usage error. notify() called with a function as \"error\" parameter`)\n      err = new Error('Bugsnag usage error. notify() called with a function as \"error\" parameter')\n      break\n    case 'object':\n      if (error !== null && (isError(error) || error.__isBugsnagReport)) {\n        err = error\n      } else if (error !== null && hasNecessaryFields(error)) {\n        err = new Error(error.message || error.errorMessage)\n        err.name = error.name || error.errorClass\n        errorFramesToSkip += 2\n      } else {\n        logger.warn(`Usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.`)\n        err = new Error('Bugsnag usage error. notify() called with an unsupported object as \"error\" parameter. Supply an Error or { name, message } object.')\n      }\n      break\n  }\n  return { err, errorFramesToSkip, _opts }\n}\n\nconst hasNecessaryFields = error =>\n  (typeof error.name === 'string' || typeof error.errorClass === 'string') &&\n  (typeof error.message === 'string' || typeof error.errorMessage === 'string')\n\nmodule.exports = BugsnagClient\n","const positiveIntIfDefined = require('../lib/positive-int-check')\n\n/*\n * Throttles and dedupes error reports\n */\n\nmodule.exports = {\n  init: (client) => {\n    // track sent events for each init of the plugin\n    let n = 0\n\n    // add beforeSend hook\n    client.config.beforeSend.push((report) => {\n      // have max events been sent already?\n      if (n >= client.config.maxEvents) return report.ignore()\n      n++\n    })\n\n    client.refresh = () => { n = 0 }\n  },\n  configSchema: {\n    maxEvents: {\n      defaultValue: () => 10,\n      message: 'should be a positive integer ≤100',\n      validate: val => positiveIntIfDefined(val) && val < 100\n    }\n  }\n}\n","const { schema } = require('../base/config')\nconst { map } = require('../base/lib/es-utils')\n\nmodule.exports = {\n  releaseStage: {\n    defaultValue: () => {\n      if (/^localhost(:\\d+)?$/.test(window.location.host)) return 'development'\n      return 'production'\n    },\n    message: '(string) releaseStage should be set',\n    validate: value => typeof value === 'string' && value.length\n  },\n  collectUserIp: {\n    defaultValue: () => true,\n    message: '(boolean) collectUserIp should true/false',\n    validate: value => value === true || value === false\n  },\n  logger: {\n    ...schema.logger,\n    defaultValue: () =>\n      // set logger based on browser capability\n      (typeof console !== 'undefined' && typeof console.debug === 'function')\n        ? getPrefixedConsole()\n        : undefined\n  }\n}\n\nconst getPrefixedConsole = () => {\n  const logger = {}\n  const consoleLog = console['log']\n  map([ 'debug', 'info', 'warn', 'error' ], (method) => {\n    const consoleMethod = console[method]\n    logger[method] = typeof consoleMethod === 'function'\n      ? consoleMethod.bind(console, '[bugsnag]')\n      : consoleLog.bind(console, '[bugsnag]')\n  })\n  return logger\n}\n","const { map, reduce, filter } = require('../../base/lib/es-utils')\n\n/*\n * Leaves breadcrumbs when console log methods are called\n */\nexports.init = (client) => {\n  map(CONSOLE_LOG_METHODS, method => {\n    const original = console[method]\n    console[method] = (...args) => {\n      client.leaveBreadcrumb('Console output', reduce(args, (accum, arg, i) => {\n        // do the best/simplest stringification of each argument\n        let stringified = String(arg)\n        // if it stringifies to [object Object] attempt to JSON stringify\n        if (stringified === '[object Object]') {\n          // catch stringify errors and fallback to [object Object]\n          try { stringified = JSON.stringify(arg) } catch (e) {}\n        }\n        accum[`[${i}]`] = stringified\n        return accum\n      }, {\n        severity: method.indexOf('group') === 0 ? 'log' : method\n      }), 'log')\n      original.apply(console, args)\n    }\n    console[method]._restore = () => { console[method] = original }\n  })\n}\n\nexports.configSchema = {\n  consoleBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: 'should be true|false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => CONSOLE_LOG_METHODS.forEach(method => {\n    if (typeof console[method]._restore === 'function') console[method]._restore()\n  })\n}\n\nconst CONSOLE_LOG_METHODS = filter([ 'log', 'debug', 'info', 'warn', 'error' ], method =>\n  typeof console !== 'undefined' && typeof console[method] === 'function'\n)\n","/*\n * Sets the default context to be the current URL\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.context) return\n      report.context = window.location.pathname\n    })\n  }\n}\n","const { isoDate } = require('../../base/lib/es-utils')\n/*\n * Automatically detects browser device details\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift((report) => {\n      report.device = {\n        ...{\n          time: isoDate(),\n          locale: navigator.browserLanguage || navigator.systemLanguage || navigator.userLanguage || navigator.language,\n          userAgent: navigator.userAgent\n        },\n        ...report.device\n      }\n    })\n\n    client.beforeSession.push(session => { session.device = { userAgent: navigator.userAgent } })\n  }\n}\n","const { reduce } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    let html = ''\n    let DOMContentLoaded = false\n    const getHtml = () => document.documentElement.outerHTML\n    const originalLocation = window.location.href\n\n    const addInlineContent = report => {\n      const frame = report.stacktrace[0]\n      if (!frame || !frame.file || !frame.lineNumber) return frame\n      if (frame.file.replace(/#.*$/, '') !== originalLocation.replace(/#.*$/, '')) return frame\n      if (!DOMContentLoaded || !html) html = getHtml()\n      const htmlLines = [ '<!-- DOCUMENT START -->' ].concat(html.split('\\n'))\n      const { script, start } = extractScriptContent(htmlLines, frame.lineNumber - 1)\n      const code = reduce(script, (accum, line, i) => {\n        if (Math.abs((start + i + 1) - frame.lineNumber) > 10) return accum\n        accum[`${start + i + 1}`] = line\n        return accum\n      }, {})\n      frame.code = code\n      report.updateMetaData('script', { content: script.join('\\n') })\n    }\n\n    // get whatever HTML exists at this point in time\n    html = getHtml()\n\n    // then update it when the DOM content has loaded\n    document.onreadystatechange = () => {\n      // IE8 compatible alternative to document#DOMContentLoaded\n      if (document.readyState === 'interactive') {\n        html = getHtml()\n        DOMContentLoaded = true\n      }\n    }\n\n    client.config.beforeSend.unshift(addInlineContent)\n  }\n}\n\nconst scriptStartRe = /^.*<script.*?>/\nconst scriptEndRe = /<\\/script>.*$/\nconst extractScriptContent = module.exports.extractScriptContent = (lines, startLine) => {\n  // search down for </script>\n  let line = startLine\n  while (line < lines.length && !scriptEndRe.test(lines[line])) line++\n\n  // search up for <script>\n  const end = line\n  while (line > 0 && !scriptStartRe.test(lines[line])) line--\n  const start = line\n\n  // strip <script> tags so that lines just contain js content\n  const script = lines.slice(start, end + 1)\n  script[0] = script[0].replace(scriptStartRe, '')\n  script[script.length - 1] = script[script.length - 1].replace(scriptEndRe, '')\n\n  // return the array of lines, and the line number the script started at\n  return { script, start }\n}\n","/*\n * Leaves breadcrumbs when the user interacts with the DOM\n */\nmodule.exports = {\n  init: (client) => {\n    if (!('addEventListener' in window)) return\n\n    window.addEventListener('click', (event) => {\n      let targetText, targetSelector\n      try {\n        targetText = getNodeText(event.target)\n        targetSelector = getNodeSelector(event.target)\n      } catch (e) {\n        targetText = '[hidden]'\n        targetSelector = '[hidden]'\n        client._logger.error('Cross domain error when tracking click event. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n      }\n      client.leaveBreadcrumb('UI click', { targetText, targetSelector }, 'user')\n    }, true)\n  },\n  configSchema: {\n    interactionBreadcrumbsEnabled: {\n      defaultValue: () => undefined,\n      validate: (value) => value === true || value === false || value === undefined,\n      message: 'should be true|false'\n    }\n  }\n}\n\n// extract text content from a element\nconst getNodeText = el => {\n  let text = el.textContent || el.innerText || ''\n  if (!text && (el.type === 'submit' || el.type === 'button')) text = el.value\n  text = text.replace(/^\\s+|\\s+$/g, '') // trim whitespace\n  return truncate(text, 140)\n}\n\n// Create a label from tagname, id and css class of the element\nfunction getNodeSelector (el) {\n  const parts = [ el.tagName ]\n  if (el.id) parts.push('#' + el.id)\n  if (el.className && el.className.length) parts.push(`.${el.className.split(' ').join('.')}`)\n  // Can't get much more advanced with the current browser\n  if (!document.querySelectorAll || !Array.prototype.indexOf) return parts.join('')\n  try {\n    if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  } catch (e) {\n    // Sometimes the query selector can be invalid just return it as-is\n    return parts.join('')\n  }\n  // try to get a more specific selector if this one matches more than one element\n  if (el.parentNode.childNodes.length > 1) {\n    const index = Array.prototype.indexOf.call(el.parentNode.childNodes, el) + 1\n    parts.push(`:nth-child(${index})`)\n  }\n  if (document.querySelectorAll(parts.join('')).length === 1) return parts.join('')\n  // try prepending the parent node selector\n  if (el.parentNode) return `${getNodeSelector(el.parentNode)} > ${parts.join('')}`\n  return parts.join('')\n}\n\nfunction truncate (value, length) {\n  const ommision = '(...)'\n  if (value && value.length <= length) return value\n  return value.slice(0, length - ommision.length) + ommision\n}\n","/*\n * Prevent collection of user IPs\n */\nmodule.exports = {\n  init: (client) => {\n    if (client.config.collectUserIp) return\n    client.config.beforeSend.push(report => {\n      report.user = { id: '[NOT COLLECTED]', ...report.user }\n      report.request = { clientIp: '[NOT COLLECTED]', ...report.request }\n    })\n  }\n}\n","/*\n * Leaves breadcrumbs when navigation methods are called or events are emitted\n */\nexports.init = (client) => {\n  if (!('addEventListener' in window)) return\n\n  // returns a function that will drop a breadcrumb with a given name\n  const drop = name => () => client.leaveBreadcrumb(name, {}, 'navigation')\n\n  // simple drops – just names, no meta\n  window.addEventListener('pagehide', drop('Page hidden'), true)\n  window.addEventListener('pageshow', drop('Page shown'), true)\n  window.addEventListener('load', drop('Page loaded'), true)\n  window.document.addEventListener('DOMContentLoaded', drop('DOMContentLoaded'), true)\n  // some browsers like to emit popstate when the page loads, so only add the postate listener after that\n  window.addEventListener('load', () => window.addEventListener('popstate', drop('Navigated back'), true))\n\n  // hashchange has some metaData that we care about\n  window.addEventListener('hashchange', event => {\n    const metaData = event.oldURL\n      ? { from: relativeLocation(event.oldURL), to: relativeLocation(event.newURL), state: window.history.state }\n      : { to: relativeLocation(window.location.href) }\n    client.leaveBreadcrumb('Hash changed', metaData, 'navigation')\n  }, true)\n\n  // the only way to know about replaceState/pushState is to wrap them… >_<\n\n  if (window.history.replaceState) wrapHistoryFn(client, window.history, 'replaceState')\n  if (window.history.pushState) wrapHistoryFn(client, window.history, 'pushState')\n\n  client.leaveBreadcrumb('Bugsnag loaded', {}, 'navigation')\n}\n\nexports.configSchema = {\n  navigationBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: 'should be true|false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    window.history.replaceState._restore()\n    window.history.pushState._restore()\n  }\n}\n\n// takes a full url like http://foo.com:1234/pages/01.html?yes=no#section-2 and returns\n// just the path and hash parts, e.g. /pages/01.html?yes=no#section-2\nconst relativeLocation = url => {\n  const a = document.createElement('A')\n  a.href = url\n  return `${a.pathname}${a.search}${a.hash}`\n}\n\nconst stateChangeToMetaData = (state, title, url) => {\n  const currentPath = relativeLocation(window.location.href)\n  return { title, state, prevState: window.history.state, to: url || currentPath, from: currentPath }\n}\n\nconst wrapHistoryFn = (client, target, fn) => {\n  const orig = target[fn]\n  target[fn] = (state, title, url) => {\n    client.leaveBreadcrumb(`History ${fn}`, stateChangeToMetaData(state, title, url), 'navigation')\n    // if throttle plugin is in use, refresh the event sent count\n    if (typeof client.refresh === 'function') client.refresh()\n    // if the client is operating in session-mode, a new route should trigger a new session\n    if (client.session) client.startSession()\n    orig.call(target, state, title, url)\n  }\n  target[fn]._restore = () => { target[fn] = orig }\n}\n","const BREADCRUMB_TYPE = 'network'\n\n// keys to safely store metadata on the request object\nconst REQUEST_SETUP_KEY = 'BUGSNAG:SETUP'\nconst REQUEST_URL_KEY = 'BUGSNAG:REQUEST_URL'\nconst REQUEST_METHOD_KEY = 'BUGSNAG:REQUEST_METHOD'\n\nlet restoreFunctions = []\nlet client\n\n/*\n * Leaves breadcrumbs when network requests occur\n */\nexports.init = (_client) => {\n  client = _client\n  monkeyPatchXMLHttpRequest()\n  monkeyPatchFetch()\n}\n\nexports.configSchema = {\n  networkBreadcrumbsEnabled: {\n    defaultValue: () => undefined,\n    validate: (value) => value === true || value === false || value === undefined,\n    message: 'should be true|false'\n  }\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    restoreFunctions.forEach(fn => fn())\n    restoreFunctions = []\n  }\n}\n\n// XMLHttpRequest monkey patch\nconst monkeyPatchXMLHttpRequest = () => {\n  if (!('addEventListener' in window.XMLHttpRequest.prototype)) return\n  const nativeOpen = window.XMLHttpRequest.prototype.open\n\n  // override native open()\n  window.XMLHttpRequest.prototype.open = function open (method, url) {\n    // store url and HTTP method for later\n    this[REQUEST_URL_KEY] = url\n    this[REQUEST_METHOD_KEY] = method\n\n    // if we have already setup listeners, it means open() was called twice, we need to remove\n    // the listeners and recreate them\n    if (this[REQUEST_SETUP_KEY]) {\n      this.removeEventListener('load', handleXHRLoad)\n      this.removeEventListener('error', handleXHRError)\n    }\n\n    // attach load event listener\n    this.addEventListener('load', handleXHRLoad)\n    // attach error event listener\n    this.addEventListener('error', handleXHRError)\n\n    this[REQUEST_SETUP_KEY] = true\n\n    nativeOpen.apply(this, arguments)\n  }\n\n  if (\"production\" !== 'production') {\n    restoreFunctions.push(() => {\n      window.XMLHttpRequest.prototype.open = nativeOpen\n    })\n  }\n}\n\nfunction handleXHRLoad () {\n  if (\n    this[REQUEST_URL_KEY] === client.config.endpoint ||\n    this[REQUEST_URL_KEY] === client.config.sessionEndpoint\n  ) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  const metaData = {\n    status: this.status,\n    request: `${this[REQUEST_METHOD_KEY]} ${this[REQUEST_URL_KEY]}`\n  }\n  if (this.status >= 400) {\n    // contacted server but got an error response\n    client.leaveBreadcrumb('XMLHttpRequest failed', metaData, BREADCRUMB_TYPE)\n  } else {\n    client.leaveBreadcrumb('XMLHttpRequest succeeded', metaData, BREADCRUMB_TYPE)\n  }\n}\n\nfunction handleXHRError () {\n  if (\n    this[REQUEST_URL_KEY] === client.config.endpoint ||\n    this[REQUEST_URL_KEY] === client.config.sessionEndpoint\n  ) {\n    // don't leave a network breadcrumb from bugsnag notify calls\n    return\n  }\n  // failed to contact server\n  client.leaveBreadcrumb('XMLHttpRequest error', {\n    request: `${this[REQUEST_METHOD_KEY]} ${this[REQUEST_URL_KEY]}`\n  }, BREADCRUMB_TYPE)\n}\n\n// window.fetch monkey patch\nconst monkeyPatchFetch = () => {\n  if (!('fetch' in window)) return\n\n  const oldFetch = window.fetch\n  window.fetch = function fetch (...args) {\n    let [url, options] = args\n    let method = 'GET'\n    if (options && options.method) {\n      method = options.method\n    }\n    return new Promise((resolve, reject) => {\n      // pass through to native fetch\n      oldFetch(...args)\n        .then(response => {\n          handleFetchSuccess(response, method, url)\n          resolve(response)\n        })\n        .catch(error => {\n          handleFetchError(method, url)\n          reject(error)\n        })\n    })\n  }\n\n  if (\"production\" !== 'production') {\n    restoreFunctions.push(() => {\n      window.fetch = oldFetch\n    })\n  }\n}\n\nconst handleFetchSuccess = (response, method, url) => {\n  const metaData = {\n    status: response.status,\n    request: `${method} ${url}`\n  }\n  if (response.status >= 400) {\n    // when the request comes back with a 4xx or 5xx status it does not reject the fetch promise,\n    client.leaveBreadcrumb('fetch() failed', metaData, BREADCRUMB_TYPE)\n  } else {\n    client.leaveBreadcrumb('fetch() succeeded', metaData, BREADCRUMB_TYPE)\n  }\n}\n\nconst handleFetchError = (method, url) => {\n  client.leaveBreadcrumb('fetch() error', { request: `${method} ${url}` }, BREADCRUMB_TYPE)\n}\n","/*\n * Sets the report request: { url } to be the current href\n */\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.unshift(report => {\n      if (report.request && report.request.url) return\n      report.request = { ...report.request, url: window.location.href }\n    })\n  }\n}\n","const { map, isArray, includes } = require('../../base/lib/es-utils')\nconst inferReleaseStage = require('../../base/lib/infer-release-stage')\n\nmodule.exports = {\n  init: client => client.sessionDelegate(sessionDelegate)\n}\n\nconst sessionDelegate = {\n  startSession: client => {\n    const sessionClient = client\n    sessionClient.session = new client.BugsnagSession()\n\n    map(sessionClient.beforeSession, (fn) => fn(sessionClient))\n\n    const releaseStage = inferReleaseStage(sessionClient)\n\n    // exit early if the reports should not be sent on the current releaseStage\n    if (isArray(sessionClient.config.notifyReleaseStages) && !includes(sessionClient.config.notifyReleaseStages, releaseStage)) {\n      sessionClient._logger.warn(`Session not sent due to releaseStage/notifyReleaseStages configuration`)\n      return sessionClient\n    }\n\n    sessionClient._transport.sendSession(\n      sessionClient._logger,\n      sessionClient.config,\n      {\n        notifier: sessionClient.notifier,\n        device: sessionClient.device,\n        app: { ...{ releaseStage }, ...sessionClient.app },\n        sessions: [\n          {\n            id: sessionClient.session.id,\n            startedAt: sessionClient.session.startedAt,\n            user: sessionClient.user\n          }\n        ]\n      }\n    )\n\n    return sessionClient\n  }\n}\n","/*\n * Remove query strings (and fragments) from stacktraces\n */\nconst { map } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  init: (client) => {\n    client.config.beforeSend.push(report => {\n      report.stacktrace = map(report.stacktrace, frame => ({ ...frame, file: strip(frame.file) }))\n    })\n  }\n}\n\nconst strip = module.exports._strip = str =>\n  typeof str === 'string'\n    ? str.replace(/\\?.*$/, '').replace(/#.*$/, '')\n    : str\n","const ErrorStackParser = require('error-stack-parser')\nconst hasStack = require('../../base/lib/has-stack')\nconst { reduce } = require('../../base/lib/es-utils')\nconst isError = require('iserror')\n\n/*\n * Automatically notifies Bugsnag when window.onunhandledrejection is called\n */\nlet _listener\nexports.init = (client) => {\n  const listener = event => {\n    let error = event.reason\n    let isBluebird = false\n\n    if (event.detail && event.detail.reason) {\n      error = event.detail.reason\n      isBluebird = true\n    }\n\n    const handledState = {\n      severity: 'error',\n      unhandled: true,\n      severityReason: { type: 'unhandledPromiseRejection' }\n    }\n\n    let report\n    if (error && hasStack(error)) {\n      // if it quacks like an Error…\n      report = new client.BugsnagReport(error.name, error.message, ErrorStackParser.parse(error), handledState)\n      if (isBluebird) {\n        report.stacktrace = reduce(report.stacktrace, fixBluebirdStacktrace(error), [])\n      }\n    } else {\n      // if it doesn't…\n      const msg = 'Rejection reason was not an Error. See \"Promise\" tab for more detail.'\n      report = new client.BugsnagReport(\n        error && error.name ? error.name : 'UnhandledRejection',\n        error && error.message ? error.message : msg,\n        [],\n        handledState\n      )\n      // stuff the rejection reason into metaData, it could be useful\n      report.updateMetaData('promise', 'rejection reason', serializableReason(error))\n    }\n\n    client.notify(report)\n  }\n  if ('addEventListener' in window) {\n    window.addEventListener('unhandledrejection', listener)\n  } else {\n    window.onunhandledrejection = (reason, promise) => {\n      listener({ detail: { reason, promise } })\n    }\n  }\n  _listener = listener\n}\n\nif (\"production\" !== 'production') {\n  exports.destroy = () => {\n    if (_listener) {\n      if ('addEventListener' in window) {\n        window.removeEventListener('unhandledrejection', _listener)\n      } else {\n        window.onunhandledrejection = null\n      }\n    }\n    _listener = null\n  }\n}\n\nconst serializableReason = (err) => {\n  if (err === null || err === undefined) {\n    return 'undefined (or null)'\n  } else if (isError(err)) {\n    return {\n      [Object.prototype.toString.call(err)]: {\n        name: err.name,\n        message: err.message,\n        code: err.code,\n        stack: err.stack\n      }\n    }\n  } else {\n    return err\n  }\n}\n\n// The stack parser on bluebird stacks in FF get a suprious first frame:\n//\n// Error: derp\n//   b@http://localhost:5000/bluebird.html:22:24\n//   a@http://localhost:5000/bluebird.html:18:9\n//   @http://localhost:5000/bluebird.html:14:9\n//\n// results in\n//   […]\n//     0: Object { file: \"Error: derp\", method: undefined, lineNumber: undefined, … }\n//     1: Object { file: \"http://localhost:5000/bluebird.html\", method: \"b\", lineNumber: 22, … }\n//     2: Object { file: \"http://localhost:5000/bluebird.html\", method: \"a\", lineNumber: 18, … }\n//     3: Object { file: \"http://localhost:5000/bluebird.html\", lineNumber: 14, columnNumber: 9, … }\n//\n// so the following reduce/accumulator function removes such frames\n//\n// Bluebird pads method names with spaces so trim that too…\n// https://github.com/petkaantonov/bluebird/blob/b7f21399816d02f979fe434585334ce901dcaf44/src/debuggability.js#L568-L571\nconst fixBluebirdStacktrace = (error) => (accum, frame) => {\n  if (frame.file === error.toString()) return accum\n  if (frame.method) {\n    frame.method = frame.method.replace(/^\\s+/, '')\n  }\n  return accum.concat(frame)\n}\n","/*\n * Automatically notifies Bugsnag when window.onerror is called\n */\n\nmodule.exports = {\n  init: (client) => {\n    const onerror = (messageOrEvent, url, lineNo, charNo, error) => {\n      // Ignore errors with no info due to CORS settings\n      if (lineNo === 0 && /Script error\\.?/.test(messageOrEvent)) {\n        client._logger.warn('Ignoring cross-domain or eval script error. See https://docs.bugsnag.com/platforms/browsers/faq/#3-cross-origin-script-errors')\n        return\n      }\n\n      // any error sent to window.onerror is unhandled and has severity=error\n      const handledState = { severity: 'error', unhandled: true, severityReason: { type: 'unhandledException' } }\n\n      let report\n      if (error) {\n        if (error.name && error.message) {\n          report = new client.BugsnagReport(error.name, error.message, decorateStack(client.BugsnagReport.getStacktrace(error), url, lineNo, charNo), handledState)\n        } else {\n          report = new client.BugsnagReport('window.onerror', String(error), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n          report.updateMetaData('window onerror', { error })\n        }\n      } else if ((typeof messageOrEvent === 'object' && messageOrEvent !== null) && !url && !lineNo && !charNo && !error) {\n        const name = messageOrEvent.type ? `Event: ${messageOrEvent.type}` : 'window.onerror'\n        const message = messageOrEvent.message || messageOrEvent.detail || ''\n        report = new client.BugsnagReport(name, message, client.BugsnagReport.getStacktrace(new Error(), 1).slice(1), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      } else {\n        report = new client.BugsnagReport('window.onerror', String(messageOrEvent), decorateStack(client.BugsnagReport.getStacktrace(error, 1), url, lineNo, charNo), handledState)\n        report.updateMetaData('window onerror', { event: messageOrEvent })\n      }\n\n      client.notify(report)\n\n      if (typeof prevOnError === 'function') prevOnError(messageOrEvent, url, lineNo, charNo, error)\n    }\n\n    const prevOnError = window.onerror\n    window.onerror = onerror\n  }\n}\n\nconst decorateStack = (stack, url, lineNo, charNo) => {\n  const culprit = stack[0]\n  if (!culprit) return stack\n  if (!culprit.fileName) culprit.setFileName(url)\n  if (!culprit.lineNumber) culprit.setLineNumber(lineNo)\n  if (!culprit.columnNumber) {\n    if (charNo !== undefined) {\n      culprit.setColumnNumber(charNo)\n    } else if (window.event && window.event.errorCharacter) {\n      culprit.setColumnNumber(window.event && window.event.errorCharacter)\n    }\n  }\n  return stack\n}\n","module.exports = function (data, replacer, space) {\n  return JSON.stringify(ensureProperties(data), replacer, space)\n}\n\nvar MAX_DEPTH = 20\nvar MAX_EDGES = 25000\nvar MIN_PRESERVED_DEPTH = 8\n\nvar REPLACEMENT_NODE = '...'\n\nfunction throwsMessage (err) {\n  return '[Throws: ' + (err ? err.message : '?') + ']'\n}\n\nfunction find (haystack, needle) {\n  for (var i = 0, len = haystack.length; i < len; i++) {\n    if (haystack[i] === needle) return true\n  }\n  return false\n}\n\nfunction isArray (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nfunction safelyGetProp (obj, prop) {\n  try {\n    return obj[prop]\n  } catch (err) {\n    return throwsMessage(err)\n  }\n}\n\nfunction ensureProperties (obj) {\n  var seen = [] // store references to objects we have seen before\n  var edges = 0\n\n  function visit (obj, depth) {\n    function edgesExceeded () {\n      return depth > MIN_PRESERVED_DEPTH && edges > MAX_EDGES\n    }\n\n    edges++\n\n    if (depth === undefined) depth = 0\n    if (depth > MAX_DEPTH) return REPLACEMENT_NODE\n    if (edgesExceeded()) return REPLACEMENT_NODE\n    if (obj === null || typeof obj !== 'object') return obj\n    if (find(seen, obj)) return '[Circular]'\n\n    seen.push(obj)\n\n    if (typeof obj.toJSON === 'function') {\n      try {\n        // we're not going to count this as an edge because it\n        // replaces the value of the currently visited object\n        edges--\n        var fResult = visit(obj.toJSON(), depth)\n        seen.pop()\n        return fResult\n      } catch (err) {\n        return throwsMessage(err)\n      }\n    }\n\n    if (isArray(obj)) {\n      var aResult = []\n      for (var i = 0, len = obj.length; i < len; i++) {\n        if (edgesExceeded()) {\n          aResult.push(REPLACEMENT_NODE)\n          break\n        }\n        aResult.push(visit(obj[i], depth + 1))\n      }\n      seen.pop()\n      return aResult\n    }\n\n    var result = {}\n    try {\n      for (var prop in obj) {\n        if (!Object.prototype.hasOwnProperty.call(obj, prop)) continue\n        if (edgesExceeded()) {\n          result[prop] = REPLACEMENT_NODE\n          break\n        }\n        result[prop] = visit(safelyGetProp(obj, prop), depth + 1)\n      }\n    } catch (e) {}\n    seen.pop()\n    return result\n  }\n\n  return visit(obj)\n}\n","const jsonStringify = require('@bugsnag/safe-json-stringify')\n\nmodule.exports = report => {\n  let payload = jsonStringify(report)\n  if (payload.length > 10e5) {\n    delete report.events[0].metaData\n    report.events[0].metaData = {\n      notifier:\n`WARNING!\nThe serialized payload was ${payload.length / 10e5}MB. The limit is 1MB.\nreport.metaData was stripped to make the payload of a deliverable size.`\n    }\n    payload = jsonStringify(report)\n    if (payload.length > 10e5) throw new Error('payload exceeded 1MB limit')\n  }\n  return payload\n}\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('@bugsnag/safe-json-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XDomainRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.endpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=4.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(makePayload(report))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = `${matchPageProtocol(config.sessionEndpoint, window.location.protocol)}?apiKey=${encodeURIComponent(config.apiKey)}&payloadVersion=1.0&sentAt=${encodeURIComponent(isoDate())}`\n    const req = new window.XDomainRequest()\n    req.onload = function () {\n      cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    setTimeout(() => {\n      try {\n        req.send(jsonStringify(session))\n      } catch (e) {\n        logger.error(e)\n      }\n    }, 0)\n  }\n}\n\nconst matchPageProtocol = module.exports._matchPageProtocol = (endpoint, pageProtocol) =>\n  pageProtocol === 'http:'\n    ? endpoint.replace(/^https:/, 'http:')\n    : endpoint\n","const makePayload = require('./lib/payload')\nconst jsonStringify = require('@bugsnag/safe-json-stringify')\nconst { isoDate } = require('../../base/lib/es-utils')\n\nmodule.exports = {\n  name: 'XMLHttpRequest',\n  sendReport: (logger, config, report, cb = () => {}) => {\n    const url = config.endpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', report.apiKey || config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '4.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(makePayload(report))\n    } catch (e) {\n      logger.error(e)\n    }\n  },\n  sendSession: (logger, config, session, cb = () => {}) => {\n    const url = config.sessionEndpoint\n    const req = new window.XMLHttpRequest()\n    req.onreadystatechange = function () {\n      if (req.readyState === window.XMLHttpRequest.DONE) cb(null, req.responseText)\n    }\n    req.open('POST', url)\n    req.setRequestHeader('Content-Type', 'application/json')\n    req.setRequestHeader('Bugsnag-Api-Key', config.apiKey)\n    req.setRequestHeader('Bugsnag-Payload-Version', '1.0')\n    req.setRequestHeader('Bugsnag-Sent-At', isoDate())\n    try {\n      req.send(jsonStringify(session))\n    } catch (e) {\n      logger.error(e)\n    }\n  }\n}\n","const name = 'Bugsnag JavaScript'\nconst version = '4.6.0'\nconst url = 'https://github.com/bugsnag/bugsnag-js'\n\nconst Client = require('../base/client')\nconst Report = require('../base/report')\nconst Session = require('../base/session')\nconst Breadcrumb = require('../base/breadcrumb')\nconst { map, reduce } = require('../base/lib/es-utils')\n\n// extend the base config schema with some browser-specific options\nconst schema = { ...require('../base/config').schema, ...require('./config') }\n\nconst pluginWindowOnerror = require('./plugins/window-onerror')\nconst pluginUnhandledRejection = require('./plugins/unhandled-rejection')\nconst pluginDevice = require('./plugins/device')\nconst pluginContext = require('./plugins/context')\nconst pluginRequest = require('./plugins/request')\nconst pluginThrottle = require('../base/plugins/throttle')\nconst pluginConsoleBreadcrumbs = require('./plugins/console-breadcrumbs')\nconst pluginNetworkBreadcrumbs = require('./plugins/network-breadcrumbs')\nconst pluginNavigationBreadcrumbs = require('./plugins/navigation-breadcrumbs')\nconst pluginInteractionBreadcrumbs = require('./plugins/interaction-breadcrumbs')\nconst pluginInlineScriptContent = require('./plugins/inline-script-content')\nconst pluginSessions = require('./plugins/sessions')\nconst pluginIp = require('./plugins/ip')\nconst pluginStripQueryString = require('./plugins/strip-query-string')\n\nconst plugins = [\n  pluginWindowOnerror,\n  pluginUnhandledRejection,\n  pluginDevice,\n  pluginContext,\n  pluginRequest,\n  pluginThrottle,\n  pluginConsoleBreadcrumbs,\n  pluginNetworkBreadcrumbs,\n  pluginNavigationBreadcrumbs,\n  pluginInteractionBreadcrumbs,\n  pluginInlineScriptContent,\n  pluginSessions,\n  pluginIp,\n  pluginStripQueryString\n]\n\nconst transports = {\n  'XDomainRequest': require('./transports/x-domain-request'),\n  'XMLHttpRequest': require('./transports/xml-http-request')\n}\n\nmodule.exports = (opts, userPlugins = []) => {\n  // handle very simple use case where user supplies just the api key as a string\n  if (typeof opts === 'string') opts = { apiKey: opts }\n\n  // support renamed option\n  if (opts.sessionTrackingEnabled) {\n    opts.autoCaptureSessions = opts.sessionTrackingEnabled\n  }\n\n  // allow plugins to augment the schema with their own options\n  const finalSchema = reduce([].concat(plugins).concat(userPlugins), (accum, plugin) => {\n    if (!plugin.configSchema) return accum\n    return { ...accum, ...plugin.configSchema }\n  }, schema)\n\n  const bugsnag = new Client({ name, version, url }, finalSchema)\n\n  // set transport based on browser capability (IE 8+9 have an XDomainRequest object)\n  bugsnag.transport(window.XDomainRequest ? transports.XDomainRequest : transports.XMLHttpRequest)\n\n  try {\n    // configure with user supplied options\n    // errors can be thrown here that prevent the lib from being in a useable state\n    bugsnag.configure(opts)\n  } catch (e) {\n    bugsnag._logger.warn(e)\n    if (e.errors) map(e.errors, bugsnag._logger.warn)\n    // rethrow. if there was an error with configuration\n    // the library is not going to work\n    throw e\n  }\n\n  // always-on browser-specific plugins\n  bugsnag.use(pluginDevice)\n  bugsnag.use(pluginContext)\n  bugsnag.use(pluginRequest)\n  bugsnag.use(pluginInlineScriptContent)\n  bugsnag.use(pluginThrottle)\n  bugsnag.use(pluginSessions)\n  bugsnag.use(pluginIp)\n  bugsnag.use(pluginStripQueryString)\n\n  // optional browser-specific plugins\n\n  if (bugsnag.config.autoNotify !== false) {\n    bugsnag.use(pluginWindowOnerror)\n    bugsnag.use(pluginUnhandledRejection)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'navigationBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNavigationBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'interactionBreadcrumbsEnabled')) {\n    bugsnag.use(pluginInteractionBreadcrumbs)\n  }\n\n  if (inferBreadcrumbSetting(bugsnag.config, 'networkBreadcrumbsEnabled')) {\n    bugsnag.use(pluginNetworkBreadcrumbs)\n  }\n\n  // because console breadcrumbs play havoc with line numbers,\n  // if not explicitly enabled, only setup on non-development evironments\n  if (inferBreadcrumbSetting(bugsnag.config, 'consoleBreadcrumbsEnabled', false)) {\n    bugsnag.use(pluginConsoleBreadcrumbs)\n  }\n\n  // init user supplied plugins\n  map(userPlugins, (plugin) => bugsnag.use(plugin))\n\n  return bugsnag.config.autoCaptureSessions\n    ? bugsnag.startSession()\n    : bugsnag\n}\n\nconst inferBreadcrumbSetting = (config, val, defaultInDev = true) =>\n  typeof config[val] === 'boolean'\n    ? config[val]\n    : (config.autoBreadcrumbs &&\n        (defaultInDev || !/^dev(elopment)?$/.test(config.releaseStage))\n      )\n\n// Stub this value because this is what the type interface looks like\n// (types/bugsnag.d.ts). This is only an issue in Angular's development\n// mode as its TS/DI thingy attempts to use this value at runtime.\n// In most other situations, TS only uses the types at compile time.\nmodule.exports.Bugsnag = {\n  Client,\n  Report,\n  Session,\n  Breadcrumb\n}\n\n// Export a \"default\" property for compatibility with ESM imports\nmodule.exports['default'] = module.exports\n","\nreturn _$browser_12;\n\n});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Quantimodo = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n},{}],2:[function(require,module,exports){\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n      \n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;  \n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n},{\"./is-function\":3,\"./is-object\":4,\"./request-base\":5,\"./response-base\":6,\"./should-retry\":7,\"component-emitter\":1}],3:[function(require,module,exports){\n/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n},{\"./is-object\":4}],4:[function(require,module,exports){\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n},{}],5:[function(require,module,exports){\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n\n},{\"./is-object\":4}],6:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n},{\"./utils\":8}],7:[function(require,module,exports){\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n\n},{}],8:[function(require,module,exports){\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n},{}],9:[function(require,module,exports){\n(function (Buffer){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['superagent', 'querystring'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('superagent'), require('querystring'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ApiClient = factory(root.superagent, root.querystring);\n  }\n}(this, function(superagent, querystring) {\n  'use strict';\n\n  /**\n   * @module ApiClient\n   * @version 5.8.112511\n   */\n\n  /**\n   * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n   * application to use this class directly - the *Api and model classes provide the public API for the service. The\n   * contents of this file should be regarded as internal but are documented for completeness.\n   * @alias module:ApiClient\n   * @class\n   */\n  var exports = function() {\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://app.quantimo.do/api\n     */\n    this.basePath = 'https://app.quantimo.do/api'.replace(/\\/+$/, '');\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      'access_token': {type: 'apiKey', 'in': 'query', name: 'access_token'},\n      'client_id': {type: 'apiKey', 'in': 'query', name: 'clientId'},\n      'quantimodo_oauth2': {type: 'oauth2'}\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n    this.cache = true;\n\n    /**\n     * If set to true, the client will save the cookies from each server\n     * response, and return them in the next request.\n     * @default false\n     */\n    this.enableCookies = false;\n\n    /*\n     * Used to save and return cookies in a node.js (non-browser) setting,\n     * if this.enableCookies is set to true.\n     */\n    if (typeof window === 'undefined') {\n      this.agent = new superagent.agent();\n    }\n\n    /*\n     * Allow user to override superagent agent\n     */\n    this.requestAgent = null;\n  };\n\n  /**\n   * Returns a string representation for an actual parameter.\n   * @param param The actual parameter.\n   * @returns {String} The string representation of <code>param</code>.\n   */\n  exports.prototype.paramToString = function(param) {\n    if (param == undefined || param == null) {\n      return '';\n    }\n    if (param instanceof Date) {\n      return param.toJSON();\n    }\n    return param.toString();\n  };\n\n  /**\n   * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n   * NOTE: query parameters are not handled here.\n   * @param {String} path The path to append to the base URL.\n   * @param {Object} pathParams The parameter values to append.\n   * @returns {String} The encoded path with parameter values substituted.\n   */\n  exports.prototype.buildUrl = function(path, pathParams) {\n    if (!path.match(/^\\//)) {\n      path = '/' + path;\n    }\n    var url = this.basePath + path;\n    var _this = this;\n    url = url.replace(/\\{([\\w-]+)\\}/g, function(fullMatch, key) {\n      var value;\n      if (pathParams.hasOwnProperty(key)) {\n        value = _this.paramToString(pathParams[key]);\n      } else {\n        value = fullMatch;\n      }\n      return encodeURIComponent(value);\n    });\n    return url;\n  };\n\n  /**\n   * Checks whether the given content type represents JSON.<br>\n   * JSON content type examples:<br>\n   * <ul>\n   * <li>application/json</li>\n   * <li>application/json; charset=UTF8</li>\n   * <li>APPLICATION/JSON</li>\n   * </ul>\n   * @param {String} contentType The MIME content type to check.\n   * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n   */\n  exports.prototype.isJsonMime = function(contentType) {\n    return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n  };\n\n  /**\n   * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n   * @param {Array.<String>} contentTypes\n   * @returns {String} The chosen content type, preferring JSON.\n   */\n  exports.prototype.jsonPreferredMime = function(contentTypes) {\n    for (var i = 0; i < contentTypes.length; i++) {\n      if (this.isJsonMime(contentTypes[i])) {\n        return contentTypes[i];\n      }\n    }\n    return contentTypes[0];\n  };\n\n  /**\n   * Checks whether the given parameter value represents file-like content.\n   * @param param The parameter to check.\n   * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n   */\n  exports.prototype.isFileParam = function(param) {\n    // fs.ReadStream in Node.js and Electron (but not in runtime like browserify)\n    if (typeof require === 'function') {\n      var fs;\n      try {\n        fs = require('fs');\n      } catch (err) {}\n      if (fs && fs.ReadStream && param instanceof fs.ReadStream) {\n        return true;\n      }\n    }\n    // Buffer in Node.js\n    if (typeof Buffer === 'function' && param instanceof Buffer) {\n      return true;\n    }\n    // Blob in browser\n    if (typeof Blob === 'function' && param instanceof Blob) {\n      return true;\n    }\n    // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n    if (typeof File === 'function' && param instanceof File) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Normalizes parameter values:\n   * <ul>\n   * <li>remove nils</li>\n   * <li>keep files and arrays</li>\n   * <li>format to string with `paramToString` for other cases</li>\n   * </ul>\n   * @param {Object.<String, Object>} params The parameters as object properties.\n   * @returns {Object.<String, Object>} normalized parameters.\n   */\n  exports.prototype.normalizeParams = function(params) {\n    var newParams = {};\n    for (var key in params) {\n      if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n        var value = params[key];\n        if (this.isFileParam(value) || Array.isArray(value)) {\n          newParams[key] = value;\n        } else {\n          newParams[key] = this.paramToString(value);\n        }\n      }\n    }\n    return newParams;\n  };\n\n  /**\n   * Enumeration of collection format separator strategies.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CollectionFormatEnum = {\n    /**\n     * Comma-separated values. Value: <code>csv</code>\n     * @const\n     */\n    CSV: ',',\n    /**\n     * Space-separated values. Value: <code>ssv</code>\n     * @const\n     */\n    SSV: ' ',\n    /**\n     * Tab-separated values. Value: <code>tsv</code>\n     * @const\n     */\n    TSV: '\\t',\n    /**\n     * Pipe(|)-separated values. Value: <code>pipes</code>\n     * @const\n     */\n    PIPES: '|',\n    /**\n     * Native array. Value: <code>multi</code>\n     * @const\n     */\n    MULTI: 'multi'\n  };\n\n  /**\n   * Builds a string representation of an array-type actual parameter, according to the given collection format.\n   * @param {Array} param An array parameter.\n   * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n   * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n   * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n   */\n  exports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {\n    if (param == null) {\n      return null;\n    }\n    switch (collectionFormat) {\n      case 'csv':\n        return param.map(this.paramToString).join(',');\n      case 'ssv':\n        return param.map(this.paramToString).join(' ');\n      case 'tsv':\n        return param.map(this.paramToString).join('\\t');\n      case 'pipes':\n        return param.map(this.paramToString).join('|');\n      case 'multi':\n        // return the array directly as SuperAgent will handle it as expected\n        return param.map(this.paramToString);\n      default:\n        throw new Error('Unknown collection format: ' + collectionFormat);\n    }\n  };\n\n  /**\n   * Applies authentication headers to the request.\n   * @param {Object} request The request object created by a <code>superagent()</code> call.\n   * @param {Array.<String>} authNames An array of authentication method names.\n   */\n  exports.prototype.applyAuthToRequest = function(request, authNames) {\n    var _this = this;\n    authNames.forEach(function(authName) {\n      var auth = _this.authentications[authName];\n      switch (auth.type) {\n        case 'basic':\n          if (auth.username || auth.password) {\n            request.auth(auth.username || '', auth.password || '');\n          }\n          break;\n        case 'apiKey':\n          if (auth.apiKey) {\n            var data = {};\n            if (auth.apiKeyPrefix) {\n              data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n            } else {\n              data[auth.name] = auth.apiKey;\n            }\n            if (auth['in'] === 'header') {\n              request.set(data);\n            } else {\n              request.query(data);\n            }\n          }\n          break;\n        case 'oauth2':\n          if (auth.accessToken) {\n            request.set({'Authorization': 'Bearer ' + auth.accessToken});\n          }\n          break;\n        default:\n          throw new Error('Unknown authentication type: ' + auth.type);\n      }\n    });\n  };\n\n  /**\n   * Deserializes an HTTP response body into a value of the specified type.\n   * @param {Object} response A SuperAgent response object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns A value of the specified type.\n   */\n  exports.prototype.deserialize = function deserialize(response, returnType) {\n    if (response == null || returnType == null || response.status == 204) {\n      return null;\n    }\n    // Rely on SuperAgent for parsing response body.\n    // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n    var data = response.body;\n    if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {\n      // SuperAgent does not always produce a body; use the unparsed response as a fallback\n      data = response.text;\n    }\n    return exports.convertToType(data, returnType);\n  };\n\n  /**\n   * Callback function to receive the result of the operation.\n   * @callback module:ApiClient~callApiCallback\n   * @param {String} error Error message, if any.\n   * @param data The data returned by the service call.\n   * @param {String} response The complete HTTP response.\n   */\n\n  /**\n   * Invokes the REST service using the supplied settings and parameters.\n   * @param {String} path The base URL to invoke.\n   * @param {String} httpMethod The HTTP method to use.\n   * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n   * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n   * @param {Object.<String, Object>} collectionQueryParams A map of collection query parameters and their values.\n   * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n   * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n   * @param {Object} bodyParam The value to pass as the request body.\n   * @param {Array.<String>} authNames An array of authentication type names.\n   * @param {Array.<String>} contentTypes An array of request MIME types.\n   * @param {Array.<String>} accepts An array of acceptable response MIME types.\n   * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n   * constructor for a complex type.\n   * @param {module:ApiClient~callApiCallback} callback The callback function.\n   * @returns {Object} The SuperAgent request object.\n   */\n  exports.prototype.callApi = function callApi(path, httpMethod, pathParams,\n      queryParams, collectionQueryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,\n      returnType, callback) {\n\n    var _this = this;\n    var url = this.buildUrl(path, pathParams);\n    var request = superagent(httpMethod, url);\n\n    // apply authentications\n    this.applyAuthToRequest(request, authNames);\n\n    // set collection query parameters\n    for (var key in collectionQueryParams) {\n      if (collectionQueryParams.hasOwnProperty(key)) {\n        var param = collectionQueryParams[key];\n        if (param.collectionFormat === 'csv') {\n          // SuperAgent normally percent-encodes all reserved characters in a query parameter. However,\n          // commas are used as delimiters for the 'csv' collectionFormat so they must not be encoded. We\n          // must therefore construct and encode 'csv' collection query parameters manually.\n          if (param.value != null) {\n            var value = param.value.map(this.paramToString).map(encodeURIComponent).join(',');\n            request.query(encodeURIComponent(key) + \"=\" + value);\n          }\n        } else {\n          // All other collection query parameters should be treated as ordinary query parameters.\n          queryParams[key] = this.buildCollectionParam(param.value, param.collectionFormat);\n        }\n      }\n    }\n\n    // set query parameters\n    if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n    }\n    request.query(this.normalizeParams(queryParams));\n\n    // set header parameters\n    request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n\n    // set requestAgent if it is set by user\n    if (this.requestAgent) {\n      request.agent(this.requestAgent);\n    }\n\n    // set request timeout\n    request.timeout(this.timeout);\n\n    var contentType = this.jsonPreferredMime(contentTypes);\n    if (contentType) {\n      // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n      if(contentType != 'multipart/form-data') {\n        request.type(contentType);\n      }\n    } else if (!request.header['Content-Type']) {\n      request.type('application/json');\n    }\n\n    if (contentType === 'application/x-www-form-urlencoded') {\n      request.send(querystring.stringify(this.normalizeParams(formParams)));\n    } else if (contentType == 'multipart/form-data') {\n      var _formParams = this.normalizeParams(formParams);\n      for (var key in _formParams) {\n        if (_formParams.hasOwnProperty(key)) {\n          if (this.isFileParam(_formParams[key])) {\n            // file field\n            request.attach(key, _formParams[key]);\n          } else {\n            request.field(key, _formParams[key]);\n          }\n        }\n      }\n    } else if (bodyParam) {\n      request.send(bodyParam);\n    }\n\n    var accept = this.jsonPreferredMime(accepts);\n    if (accept) {\n      request.accept(accept);\n    }\n\n    if (returnType === 'Blob') {\n      request.responseType('blob');\n    } else if (returnType === 'String') {\n      request.responseType('string');\n    }\n\n    // Attach previously saved cookies, if enabled\n    if (this.enableCookies){\n      if (typeof window === 'undefined') {\n        this.agent.attachCookies(request);\n      }\n      else {\n        request.withCredentials();\n      }\n    }\n\n\n    request.end(function(error, response) {\n      if (callback) {\n        var data = null;\n        if (!error) {\n          try {\n            data = _this.deserialize(response, returnType);\n            if (_this.enableCookies && typeof window === 'undefined'){\n              _this.agent.saveCookies(response);\n            }\n          } catch (err) {\n            error = err;\n          }\n        }\n        callback(error, data, response);\n      }\n    });\n\n    return request;\n  };\n\n  /**\n   * Parses an ISO-8601 string representation of a date value.\n   * @param {String} str The date value as a string.\n   * @returns {Date} The parsed date object.\n   */\n  exports.parseDate = function(str) {\n    return new Date(str.replace(/T/i, ' '));\n  };\n\n  /**\n   * Converts a value to the specified type.\n   * @param {(String|Object)} data The data to convert, as a string or object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns An instance of the specified type or null or undefined if data is null or undefined.\n   */\n  exports.convertToType = function(data, type) {\n    if (data === null || data === undefined)\n      return data\n\n    switch (type) {\n      case 'Boolean':\n        return Boolean(data);\n      case 'Integer':\n        return parseInt(data, 10);\n      case 'Number':\n        return parseFloat(data);\n      case 'String':\n        return String(data);\n      case 'Date':\n        return this.parseDate(String(data));\n      case 'Blob':\n      \treturn data;\n      default:\n        if (type === Object) {\n          // generic object, return directly\n          return data;\n        } else if (typeof type === 'function') {\n          // for model type like: User\n          return type.constructFromObject(data);\n        } else if (Array.isArray(type)) {\n          // for array type like: ['String']\n          var itemType = type[0];\n          return data.map(function(item) {\n            return exports.convertToType(item, itemType);\n          });\n        } else if (typeof type === 'object') {\n          // for plain object type like: {'String': 'Integer'}\n          var keyType, valueType;\n          for (var k in type) {\n            if (type.hasOwnProperty(k)) {\n              keyType = k;\n              valueType = type[k];\n              break;\n            }\n          }\n          var result = {};\n          for (var k in data) {\n            if (data.hasOwnProperty(k)) {\n              var key = exports.convertToType(k, keyType);\n              var value = exports.convertToType(data[k], valueType);\n              result[key] = value;\n            }\n          }\n          return result;\n        } else {\n          // for unknown type, return the data directly\n          return data;\n        }\n    }\n  };\n\n  /**\n   * Constructs a new map or array model from REST data.\n   * @param data {Object|Array} The REST data.\n   * @param obj {Object|Array} The target object or array.\n   */\n  exports.constructFromObject = function(data, obj, itemType) {\n    if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        if (data.hasOwnProperty(i))\n          obj[i] = exports.convertToType(data[i], itemType);\n      }\n    } else {\n      for (var k in data) {\n        if (data.hasOwnProperty(k))\n          obj[k] = exports.convertToType(data[k], itemType);\n      }\n    }\n  };\n\n  /**\n   * The default API client implementation.\n   * @type {module:ApiClient}\n   */\n  exports.instance = new exports();\n\n  return exports;\n}));\n\n}).call(this,require(\"buffer\").Buffer)\n},{\"buffer\":90,\"fs\":89,\"querystring\":94,\"superagent\":2}],10:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Correlation', 'model/GetCorrelationsResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/Correlation'), require('../model/GetCorrelationsResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AnalyticsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.Correlation, root.Quantimodo.GetCorrelationsResponse);\n  }\n}(this, function(ApiClient, Correlation, GetCorrelationsResponse) {\n  'use strict';\n\n  /**\n   * Analytics service.\n   * @module api/AnalyticsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new AnalyticsApi. \n   * @alias module:api/AnalyticsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getCorrelationExplanations operation.\n     * @callback module:api/AnalyticsApi~getCorrelationExplanationsCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Correlation>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get correlation explanations\n     * Get explanations of  correlations based on data from a single user.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {module:api/AnalyticsApi~getCorrelationExplanationsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Correlation>}\n     */\n    this.getCorrelationExplanations = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [Correlation];\n\n      return this.apiClient.callApi(\n        '/v3/correlations/explanations', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getCorrelations operation.\n     * @callback module:api/AnalyticsApi~getCorrelationsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetCorrelationsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get correlations\n     * Get a list of correlations that can be used to display top predictors of a given outcome like mood, for instance.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.correlationCoefficient Pearson correlation coefficient between cause and effect after lagging by onset delay and grouping by duration of action\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Boolean} opts.outcomesOfInterest Only include correlations for which the effect is an outcome of interest for the user\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.commonOnly Return only public, anonymized and aggregated population data instead of user-specific variables\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/AnalyticsApi~getCorrelationsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetCorrelationsResponse}\n     */\n    this.getCorrelations = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'sort': opts['sort'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'userId': opts['userId'],\n        'correlationCoefficient': opts['correlationCoefficient'],\n        'updatedAt': opts['updatedAt'],\n        'outcomesOfInterest': opts['outcomesOfInterest'],\n        'clientId': opts['clientId'],\n        'commonOnly': opts['commonOnly'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetCorrelationsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/correlations', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/Correlation\":32,\"../model/GetCorrelationsResponse\":39}],11:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AppSettingsResponse', 'model/JsonErrorResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/AppSettingsResponse'), require('../model/JsonErrorResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AppSettingsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.AppSettingsResponse, root.Quantimodo.JsonErrorResponse);\n  }\n}(this, function(ApiClient, AppSettingsResponse, JsonErrorResponse) {\n  'use strict';\n\n  /**\n   * AppSettings service.\n   * @module api/AppSettingsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new AppSettingsApi. \n   * @alias module:api/AppSettingsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getAppSettings operation.\n     * @callback module:api/AppSettingsApi~getAppSettingsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/AppSettingsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get client app settings\n     * Get the settings for your application configurable at https://build.quantimo.do\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.clientSecret This is the secret for your obtained clientId. We use this to ensure that only your application uses the clientId.  Obtain this by creating a free application at [https://app.quantimo.do/api/v2/apps](https://app.quantimo.do/api/v2/apps).\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/AppSettingsApi~getAppSettingsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/AppSettingsResponse}\n     */\n    this.getAppSettings = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'client_secret': opts['clientSecret'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = AppSettingsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/appSettings', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/AppSettingsResponse\":24,\"../model/JsonErrorResponse\":45}],12:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AuthenticationApi = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Authentication service.\n   * @module api/AuthenticationApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new AuthenticationApi. \n   * @alias module:api/AuthenticationApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getAccessToken operation.\n     * @callback module:api/AuthenticationApi~getAccessTokenCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get a user access token\n     * Client provides authorization token obtained from /api/v3/oauth2/authorize to this endpoint and receives an access token. Access token can then be used to query API endpoints. ### Request Access Token After user approves your access to the given scope form the https:/app.quantimo.do/v2/oauth2/authorize endpoint, you&#39;ll receive an authorization code to request an access token. This time make a &#x60;POST&#x60; request to &#x60;/api/v2/oauth/access_token&#x60; with parameters including: * &#x60;grant_type&#x60; Can be &#x60;authorization_code&#x60; or &#x60;refresh_token&#x60; since we are getting the &#x60;access_token&#x60; for the first time we don&#39;t have a &#x60;refresh_token&#x60; so this must be &#x60;authorization_code&#x60;. * &#x60;code&#x60; Authorization code you received with the previous request. * &#x60;redirect_uri&#x60; Your application&#39;s redirect url. ### Refreshing Access Token Access tokens expire at some point, to continue using our api you need to refresh them with &#x60;refresh_token&#x60; you received along with the &#x60;access_token&#x60;. To do this make a &#x60;POST&#x60; request to &#x60;/api/v2/oauth/access_token&#x60; with correct parameters, which are: * &#x60;grant_type&#x60; This time grant type must be &#x60;refresh_token&#x60; since we have it. * &#x60;clientId&#x60; Your application&#39;s client id. * &#x60;client_secret&#x60; Your application&#39;s client secret. * &#x60;refresh_token&#x60; The refresh token you received with the &#x60;access_token&#x60;. Every request you make to this endpoint will give you a new refresh token and make the old one expired. So you can keep getting new access tokens with new refresh tokens. ### Using Access Token Currently we support 2 ways for this, you can&#39;t use both at the same time. * Adding access token to the request header as &#x60;Authorization: Bearer {access_token}&#x60; * Adding to the url as a query parameter &#x60;?access_token&#x3D;{access_token}&#x60; You can read more about OAuth2 from [here](http://oauth.net/2/)\n     * @param {String} grantType Grant Type can be &#39;authorization_code&#39; or &#39;refresh_token&#39;\n     * @param {String} code Authorization code you received with the previous request.\n     * @param {String} responseType If the value is code, launches a Basic flow, requiring a POST to the token endpoint to obtain the tokens. If the value is token id_token or id_token token, launches an Implicit flow, requiring the use of Javascript at the redirect URI to retrieve tokens from the URI #fragment.\n     * @param {String} scope Scopes include basic, readmeasurements, and writemeasurements. The &#x60;basic&#x60; scope allows you to read user info (displayName, email, etc). The &#x60;readmeasurements&#x60; scope allows one to read a user&#39;s data. The &#x60;writemeasurements&#x60; scope allows you to write user data. Separate multiple scopes by a space.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.clientSecret This is the secret for your obtained clientId. We use this to ensure that only your application uses the clientId.  Obtain this by creating a free application at [https://app.quantimo.do/api/v2/apps](https://app.quantimo.do/api/v2/apps).\n     * @param {String} opts.redirectUri The redirect URI is the URL within your client application that will receive the OAuth2 credentials.\n     * @param {String} opts.state An opaque string that is round-tripped in the protocol; that is to say, it is returned as a URI parameter in the Basic flow, and in the URI\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/AuthenticationApi~getAccessTokenCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getAccessToken = function(grantType, code, responseType, scope, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'grantType' is set\n      if (grantType === undefined || grantType === null) {\n        throw new Error(\"Missing the required parameter 'grantType' when calling getAccessToken\");\n      }\n\n      // verify the required parameter 'code' is set\n      if (code === undefined || code === null) {\n        throw new Error(\"Missing the required parameter 'code' when calling getAccessToken\");\n      }\n\n      // verify the required parameter 'responseType' is set\n      if (responseType === undefined || responseType === null) {\n        throw new Error(\"Missing the required parameter 'responseType' when calling getAccessToken\");\n      }\n\n      // verify the required parameter 'scope' is set\n      if (scope === undefined || scope === null) {\n        throw new Error(\"Missing the required parameter 'scope' when calling getAccessToken\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'client_secret': opts['clientSecret'],\n        'grant_type': grantType,\n        'code': code,\n        'response_type': responseType,\n        'scope': scope,\n        'redirect_uri': opts['redirectUri'],\n        'state': opts['state'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/oauth2/token', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getOauthAuthorizationCode operation.\n     * @callback module:api/AuthenticationApi~getOauthAuthorizationCodeCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Request Authorization Code\n     * You can implement OAuth2 authentication to your application using our **OAuth2** endpoints.  You need to redirect users to &#x60;/api/v3/oauth2/authorize&#x60; endpoint to get an authorization code and include the parameters below.   This page will ask the user if they want to allow a client&#39;s application to submit or obtain data from their QM account. It will redirect the user to the url provided by the client application with the code as a query parameter or error in case of an error. See the /api/v2/oauth/access_token endpoint for the next steps.\n     * @param {String} responseType If the value is code, launches a Basic flow, requiring a POST to the token endpoint to obtain the tokens. If the value is token id_token or id_token token, launches an Implicit flow, requiring the use of Javascript at the redirect URI to retrieve tokens from the URI #fragment.\n     * @param {String} scope Scopes include basic, readmeasurements, and writemeasurements. The &#x60;basic&#x60; scope allows you to read user info (displayName, email, etc). The &#x60;readmeasurements&#x60; scope allows one to read a user&#39;s data. The &#x60;writemeasurements&#x60; scope allows you to write user data. Separate multiple scopes by a space.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.clientSecret This is the secret for your obtained clientId. We use this to ensure that only your application uses the clientId.  Obtain this by creating a free application at [https://app.quantimo.do/api/v2/apps](https://app.quantimo.do/api/v2/apps).\n     * @param {String} opts.redirectUri The redirect URI is the URL within your client application that will receive the OAuth2 credentials.\n     * @param {String} opts.state An opaque string that is round-tripped in the protocol; that is to say, it is returned as a URI parameter in the Basic flow, and in the URI\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/AuthenticationApi~getOauthAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getOauthAuthorizationCode = function(responseType, scope, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'responseType' is set\n      if (responseType === undefined || responseType === null) {\n        throw new Error(\"Missing the required parameter 'responseType' when calling getOauthAuthorizationCode\");\n      }\n\n      // verify the required parameter 'scope' is set\n      if (scope === undefined || scope === null) {\n        throw new Error(\"Missing the required parameter 'scope' when calling getOauthAuthorizationCode\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'client_secret': opts['clientSecret'],\n        'response_type': responseType,\n        'scope': scope,\n        'redirect_uri': opts['redirectUri'],\n        'state': opts['state'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/oauth2/authorize', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postGoogleIdToken operation.\n     * @callback module:api/AuthenticationApi~postGoogleIdTokenCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post GoogleIdToken\n     * Post GoogleIdToken\n     * @param {module:api/AuthenticationApi~postGoogleIdTokenCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.postGoogleIdToken = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/googleIdToken', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9}],13:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/GetConnectorsResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/GetConnectorsResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ConnectorsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.GetConnectorsResponse);\n  }\n}(this, function(ApiClient, GetConnectorsResponse) {\n  'use strict';\n\n  /**\n   * Connectors service.\n   * @module api/ConnectorsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new ConnectorsApi. \n   * @alias module:api/ConnectorsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the connectConnector operation.\n     * @callback module:api/ConnectorsApi~connectConnectorCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Obtain a token from 3rd party data source\n     * Attempt to obtain a token from the data provider, store it in the database. With this, the connector to continue to obtain new user data until the token is revoked.\n     * @param {module:model/String} connectorName Lowercase system name of the source application or device. Get a list of available connectors from the /v3/connectors/list endpoint.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/ConnectorsApi~connectConnectorCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.connectConnector = function(connectorName, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'connectorName' is set\n      if (connectorName === undefined || connectorName === null) {\n        throw new Error(\"Missing the required parameter 'connectorName' when calling connectConnector\");\n      }\n\n\n      var pathParams = {\n        'connectorName': connectorName\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/connectors/{connectorName}/connect', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the disconnectConnector operation.\n     * @callback module:api/ConnectorsApi~disconnectConnectorCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete stored connection info\n     * The disconnect method deletes any stored tokens or connection information from the connectors database.\n     * @param {module:model/String} connectorName Lowercase system name of the source application or device. Get a list of available connectors from the /v3/connectors/list endpoint.\n     * @param {module:api/ConnectorsApi~disconnectConnectorCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.disconnectConnector = function(connectorName, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'connectorName' is set\n      if (connectorName === undefined || connectorName === null) {\n        throw new Error(\"Missing the required parameter 'connectorName' when calling disconnectConnector\");\n      }\n\n\n      var pathParams = {\n        'connectorName': connectorName\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/connectors/{connectorName}/disconnect', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getConnectors operation.\n     * @callback module:api/ConnectorsApi~getConnectorsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetConnectorsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * List of Connectors\n     * A connector pulls data from other data providers using their API or a screenscraper. Returns a list of all available connectors and information about them such as their id, name, whether the user has provided access, logo url, connection instructions, and the update history.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/ConnectorsApi~getConnectorsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetConnectorsResponse}\n     */\n    this.getConnectors = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetConnectorsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/connectors/list', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getIntegrationJs operation.\n     * @callback module:api/ConnectorsApi~getIntegrationJsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get embeddable connect javascript\n     * Get embeddable connect javascript. Usage:   - Embedding in applications with popups for 3rd-party authentication windows.     Use &#x60;qmSetupInPopup&#x60; function after connecting &#x60;connect.js&#x60;.   - Embedding in applications with popups for 3rd-party authentication windows.     Requires a selector to block. It will be embedded in this block.     Use &#x60;qmSetupOnPage&#x60; function after connecting &#x60;connect.js&#x60;.   - Embedding in mobile applications without popups for 3rd-party authentication.     Use &#x60;qmSetupOnMobile&#x60; function after connecting &#x60;connect.js&#x60;.     If using in a Cordova application call  &#x60;qmSetupOnIonic&#x60; function after connecting &#x60;connect.js&#x60;.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/ConnectorsApi~getIntegrationJsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getIntegrationJs = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/x-javascript'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/integration.js', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getMobileConnectPage operation.\n     * @callback module:api/ConnectorsApi~getMobileConnectPageCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Mobile connect page\n     * This page is designed to be opened in a webview.  Instead of using popup authentication boxes, it uses redirection. You can include the user&#39;s access_token as a URL parameter like https://app.quantimo.do/api/v3/connect/mobile?access_token&#x3D;123\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/ConnectorsApi~getMobileConnectPageCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getMobileConnectPage = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['text/html'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/connect/mobile', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateConnector operation.\n     * @callback module:api/ConnectorsApi~updateConnectorCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Sync with data source\n     * The update method tells the QM Connector Framework to check with the data provider (such as Fitbit or MyFitnessPal) and retrieve any new measurements available.\n     * @param {module:model/String} connectorName Lowercase system name of the source application or device. Get a list of available connectors from the /v3/connectors/list endpoint.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/ConnectorsApi~updateConnectorCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.updateConnector = function(connectorName, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'connectorName' is set\n      if (connectorName === undefined || connectorName === null) {\n        throw new Error(\"Missing the required parameter 'connectorName' when calling updateConnector\");\n      }\n\n\n      var pathParams = {\n        'connectorName': connectorName\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/connectors/{connectorName}/update', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/GetConnectorsResponse\":37}],14:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CommonResponse', 'model/Measurement', 'model/MeasurementDelete', 'model/MeasurementSet', 'model/MeasurementUpdate', 'model/Pair', 'model/PostMeasurementsResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CommonResponse'), require('../model/Measurement'), require('../model/MeasurementDelete'), require('../model/MeasurementSet'), require('../model/MeasurementUpdate'), require('../model/Pair'), require('../model/PostMeasurementsResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.MeasurementsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.CommonResponse, root.Quantimodo.Measurement, root.Quantimodo.MeasurementDelete, root.Quantimodo.MeasurementSet, root.Quantimodo.MeasurementUpdate, root.Quantimodo.Pair, root.Quantimodo.PostMeasurementsResponse);\n  }\n}(this, function(ApiClient, CommonResponse, Measurement, MeasurementDelete, MeasurementSet, MeasurementUpdate, Pair, PostMeasurementsResponse) {\n  'use strict';\n\n  /**\n   * Measurements service.\n   * @module api/MeasurementsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new MeasurementsApi. \n   * @alias module:api/MeasurementsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the deleteMeasurement operation.\n     * @callback module:api/MeasurementsApi~deleteMeasurementCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete a measurement\n     * Delete a previously submitted measurement\n     * @param {module:model/MeasurementDelete} body The startTime and variableId of the measurement to be deleted.\n     * @param {module:api/MeasurementsApi~deleteMeasurementCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.deleteMeasurement = function(body, callback) {\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling deleteMeasurement\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/measurements/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getMeasurements operation.\n     * @callback module:api/MeasurementsApi~getMeasurementsCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Measurement>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get measurements for this user\n     * Measurements are any value that can be recorded like daily steps, a mood rating, or apples eaten.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.variableName Name of the variable you want measurements for\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {module:model/String} opts.variableCategoryName Limit results to a specific variable category\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.sourceName ID of the source you want measurements for (supports exact name match only)\n     * @param {String} opts.connectorName Ex: facebook\n     * @param {String} opts.value Value of measurement\n     * @param {module:model/String} opts.unitName Ex: Milligrams\n     * @param {String} opts.earliestMeasurementTime Excluded records with measurement times earlier than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.latestMeasurementTime Excluded records with measurement times later than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.createdAt When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.id Measurement id\n     * @param {Number} opts.groupingWidth The time (in seconds) over which measurements are grouped together\n     * @param {String} opts.groupingTimezone The time (in seconds) over which measurements are grouped together\n     * @param {Boolean} opts.doNotProcess Ex: true\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.doNotConvert Ex: 1\n     * @param {Boolean} opts.minMaxFilter Ex: 1\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/MeasurementsApi~getMeasurementsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Measurement>}\n     */\n    this.getMeasurements = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'variableName': opts['variableName'],\n        'sort': opts['sort'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'variableCategoryName': opts['variableCategoryName'],\n        'updatedAt': opts['updatedAt'],\n        'userId': opts['userId'],\n        'sourceName': opts['sourceName'],\n        'connectorName': opts['connectorName'],\n        'value': opts['value'],\n        'unitName': opts['unitName'],\n        'earliestMeasurementTime': opts['earliestMeasurementTime'],\n        'latestMeasurementTime': opts['latestMeasurementTime'],\n        'createdAt': opts['createdAt'],\n        'id': opts['id'],\n        'groupingWidth': opts['groupingWidth'],\n        'groupingTimezone': opts['groupingTimezone'],\n        'doNotProcess': opts['doNotProcess'],\n        'clientId': opts['clientId'],\n        'doNotConvert': opts['doNotConvert'],\n        'minMaxFilter': opts['minMaxFilter'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [Measurement];\n\n      return this.apiClient.callApi(\n        '/v3/measurements', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getPairs operation.\n     * @callback module:api/MeasurementsApi~getPairsCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Pair>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get pairs of measurements for correlational analysis\n     * Pairs cause measurements with effect measurements grouped over the duration of action after the onset delay.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {String} opts.effectUnitName Name for the unit effect measurements to be returned in\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.causeUnitName Name for the unit cause measurements to be returned in\n     * @param {String} opts.onsetDelay The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.\n     * @param {String} opts.durationOfAction The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.\n     * @param {String} opts.earliestMeasurementTime Excluded records with measurement times earlier than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.latestMeasurementTime Excluded records with measurement times later than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {module:api/MeasurementsApi~getPairsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Pair>}\n     */\n    this.getPairs = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'effectUnitName': opts['effectUnitName'],\n        'userId': opts['userId'],\n        'causeUnitName': opts['causeUnitName'],\n        'onsetDelay': opts['onsetDelay'],\n        'durationOfAction': opts['durationOfAction'],\n        'earliestMeasurementTime': opts['earliestMeasurementTime'],\n        'latestMeasurementTime': opts['latestMeasurementTime'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [Pair];\n\n      return this.apiClient.callApi(\n        '/v3/pairs', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the measurementExportRequest operation.\n     * @callback module:api/MeasurementsApi~measurementExportRequestCallback\n     * @param {String} error Error message, if any.\n     * @param {'Number'} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post Request for Measurements CSV\n     * Use this endpoint to schedule a CSV export containing all user measurements to be emailed to the user within 24 hours.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/MeasurementsApi~measurementExportRequestCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link 'Number'}\n     */\n    this.measurementExportRequest = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = 'Number';\n\n      return this.apiClient.callApi(\n        '/v2/measurements/exportRequest', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postMeasurements operation.\n     * @callback module:api/MeasurementsApi~postMeasurementsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/PostMeasurementsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post a new set or update existing measurements to the database\n     * You can submit or update multiple measurements in a \\&quot;measurements\\&quot; sub-array.  If the variable these measurements correspond to does not already exist in the database, it will be automatically added.\n     * @param {Array.<module:model/MeasurementSet>} body An array of measurement sets containing measurement items you want to insert.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/MeasurementsApi~postMeasurementsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/PostMeasurementsResponse}\n     */\n    this.postMeasurements = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postMeasurements\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = PostMeasurementsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/measurements/post', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the updateMeasurement operation.\n     * @callback module:api/MeasurementsApi~updateMeasurementCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update a measurement\n     * Update a previously submitted measurement\n     * @param {module:model/MeasurementUpdate} body The id as well as the new startTime, note, and/or value of the measurement to be updated\n     * @param {module:api/MeasurementsApi~updateMeasurementCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.updateMeasurement = function(body, callback) {\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling updateMeasurement\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/measurements/update', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/CommonResponse\":29,\"../model/Measurement\":46,\"../model/MeasurementDelete\":47,\"../model/MeasurementSet\":49,\"../model/MeasurementUpdate\":50,\"../model/Pair\":51,\"../model/PostMeasurementsResponse\":54}],15:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/DeviceToken'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/DeviceToken'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.NotificationsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.DeviceToken);\n  }\n}(this, function(ApiClient, DeviceToken) {\n  'use strict';\n\n  /**\n   * Notifications service.\n   * @module api/NotificationsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new NotificationsApi. \n   * @alias module:api/NotificationsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getNotificationPreferences operation.\n     * @callback module:api/NotificationsApi~getNotificationPreferencesCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get NotificationPreferences\n     * Get NotificationPreferences\n     * @param {module:api/NotificationsApi~getNotificationPreferencesCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.getNotificationPreferences = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/notificationPreferences', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postDeviceToken operation.\n     * @callback module:api/NotificationsApi~postDeviceTokenCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post DeviceTokens\n     * Post user token for Android, iOS, or web push notifications\n     * @param {module:model/DeviceToken} body The platform and token\n     * @param {module:api/NotificationsApi~postDeviceTokenCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.postDeviceToken = function(body, callback) {\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postDeviceToken\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/deviceTokens', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/DeviceToken\":34}],16:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CommonResponse', 'model/GetTrackingReminderNotificationsResponse', 'model/PostTrackingRemindersResponse', 'model/TrackingReminder', 'model/TrackingReminderDelete', 'model/TrackingReminderNotificationPost'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CommonResponse'), require('../model/GetTrackingReminderNotificationsResponse'), require('../model/PostTrackingRemindersResponse'), require('../model/TrackingReminder'), require('../model/TrackingReminderDelete'), require('../model/TrackingReminderNotificationPost'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.RemindersApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.CommonResponse, root.Quantimodo.GetTrackingReminderNotificationsResponse, root.Quantimodo.PostTrackingRemindersResponse, root.Quantimodo.TrackingReminder, root.Quantimodo.TrackingReminderDelete, root.Quantimodo.TrackingReminderNotificationPost);\n  }\n}(this, function(ApiClient, CommonResponse, GetTrackingReminderNotificationsResponse, PostTrackingRemindersResponse, TrackingReminder, TrackingReminderDelete, TrackingReminderNotificationPost) {\n  'use strict';\n\n  /**\n   * Reminders service.\n   * @module api/RemindersApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new RemindersApi. \n   * @alias module:api/RemindersApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the deleteTrackingReminder operation.\n     * @callback module:api/RemindersApi~deleteTrackingReminderCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete Tracking Reminder\n     * Stop getting notifications to record data for a variable.  Previously recorded measurements will be preserved.\n     * @param {module:model/TrackingReminderDelete} body Id of reminder to be deleted\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/RemindersApi~deleteTrackingReminderCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.deleteTrackingReminder = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling deleteTrackingReminder\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/trackingReminders/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getTrackingReminderNotifications operation.\n     * @callback module:api/RemindersApi~getTrackingReminderNotificationsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetTrackingReminderNotificationsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get specific tracking reminder notifications\n     * Specific tracking reminder notification instances that still need to be tracked.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.createdAt When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {module:model/String} opts.variableCategoryName Limit results to a specific variable category\n     * @param {String} opts.reminderTime Ex: (lt)2017-07-31 21:43:26\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.onlyPast Ex: 1\n     * @param {Boolean} opts.includeDeleted Include deleted variables\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/RemindersApi~getTrackingReminderNotificationsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetTrackingReminderNotificationsResponse}\n     */\n    this.getTrackingReminderNotifications = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'sort': opts['sort'],\n        'userId': opts['userId'],\n        'createdAt': opts['createdAt'],\n        'updatedAt': opts['updatedAt'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'variableCategoryName': opts['variableCategoryName'],\n        'reminderTime': opts['reminderTime'],\n        'clientId': opts['clientId'],\n        'onlyPast': opts['onlyPast'],\n        'includeDeleted': opts['includeDeleted'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetTrackingReminderNotificationsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/trackingReminderNotifications', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getTrackingReminders operation.\n     * @callback module:api/RemindersApi~getTrackingRemindersCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/TrackingReminder>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get repeating tracking reminder settings\n     * Users can be reminded to track certain variables at a specified frequency with a default value.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:model/String} opts.variableCategoryName Limit results to a specific variable category\n     * @param {String} opts.createdAt When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.appVersion Ex: 2.1.1.0\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/RemindersApi~getTrackingRemindersCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/TrackingReminder>}\n     */\n    this.getTrackingReminders = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n        'variableCategoryName': opts['variableCategoryName'],\n        'createdAt': opts['createdAt'],\n        'updatedAt': opts['updatedAt'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort'],\n        'clientId': opts['clientId'],\n        'appVersion': opts['appVersion'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [TrackingReminder];\n\n      return this.apiClient.callApi(\n        '/v3/trackingReminders', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postTrackingReminderNotifications operation.\n     * @callback module:api/RemindersApi~postTrackingReminderNotificationsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Snooze, skip, or track a tracking reminder notification\n     * Snooze, skip, or track a tracking reminder notification\n     * @param {Array.<module:model/TrackingReminderNotificationPost>} body Id of the tracking reminder notification to be snoozed\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/RemindersApi~postTrackingReminderNotificationsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.postTrackingReminderNotifications = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postTrackingReminderNotifications\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/trackingReminderNotifications', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postTrackingReminders operation.\n     * @callback module:api/RemindersApi~postTrackingRemindersCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/PostTrackingRemindersResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Store a Tracking Reminder\n     * This is to enable users to create reminders to track a variable with a default value at a specified frequency\n     * @param {Array.<module:model/TrackingReminder>} body TrackingReminder that should be stored\n     * @param {module:api/RemindersApi~postTrackingRemindersCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/PostTrackingRemindersResponse}\n     */\n    this.postTrackingReminders = function(body, callback) {\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postTrackingReminders\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = PostTrackingRemindersResponse;\n\n      return this.apiClient.callApi(\n        '/v3/trackingReminders', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/CommonResponse\":29,\"../model/GetTrackingReminderNotificationsResponse\":42,\"../model/PostTrackingRemindersResponse\":58,\"../model/TrackingReminder\":72,\"../model/TrackingReminderDelete\":73,\"../model/TrackingReminderNotificationPost\":76}],17:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/GetSharesResponse', 'model/ShareInvitationBody', 'model/User'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/GetSharesResponse'), require('../model/ShareInvitationBody'), require('../model/User'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.SharesApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.GetSharesResponse, root.Quantimodo.ShareInvitationBody, root.Quantimodo.User);\n  }\n}(this, function(ApiClient, GetSharesResponse, ShareInvitationBody, User) {\n  'use strict';\n\n  /**\n   * Shares service.\n   * @module api/SharesApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new SharesApi. \n   * @alias module:api/SharesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the deleteShare operation.\n     * @callback module:api/SharesApi~deleteShareCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete share\n     * Remove access to user data for a given client_id associated with a given individual, app, or study\n     * @param {String} clientIdToRevoke Client id of the individual, study, or app that the user wishes to no longer have access to their data\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.reason Ex: I hate you!\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/SharesApi~deleteShareCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.deleteShare = function(clientIdToRevoke, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'clientIdToRevoke' is set\n      if (clientIdToRevoke === undefined || clientIdToRevoke === null) {\n        throw new Error(\"Missing the required parameter 'clientIdToRevoke' when calling deleteShare\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientIdToRevoke': clientIdToRevoke,\n        'reason': opts['reason'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/v3/shares/delete', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getShares operation.\n     * @callback module:api/SharesApi~getSharesCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetSharesResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Authorized Apps, Studies, and Individuals\n     * This is a list of individuals, apps, or studies with access to your measurements.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.createdAt When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.appVersion Ex: 2.1.1.0\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {String} opts.log Username or email\n     * @param {String} opts.pwd User password\n     * @param {module:api/SharesApi~getSharesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetSharesResponse}\n     */\n    this.getShares = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n        'createdAt': opts['createdAt'],\n        'updatedAt': opts['updatedAt'],\n        'clientId': opts['clientId'],\n        'appVersion': opts['appVersion'],\n        'platform': opts['platform'],\n        'log': opts['log'],\n        'pwd': opts['pwd'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetSharesResponse;\n\n      return this.apiClient.callApi(\n        '/v3/shares', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the inviteShare operation.\n     * @callback module:api/SharesApi~inviteShareCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete share\n     * Invite someone to view your measurements\n     * @param {module:model/ShareInvitationBody} body Details about person to share with\n     * @param {Object} opts Optional parameters\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:api/SharesApi~inviteShareCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.inviteShare = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling inviteShare\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'platform': opts['platform'],\n        'clientId': opts['clientId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/v3/shares/invite', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/GetSharesResponse\":40,\"../model/ShareInvitationBody\":61,\"../model/User\":80}],18:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CommonResponse', 'model/GetStudiesResponse', 'model/JsonErrorResponse', 'model/PostStudyCreateResponse', 'model/PostStudyPublishResponse', 'model/Study', 'model/StudyCreationBody', 'model/StudyJoinResponse', 'model/Vote', 'model/VoteDelete'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CommonResponse'), require('../model/GetStudiesResponse'), require('../model/JsonErrorResponse'), require('../model/PostStudyCreateResponse'), require('../model/PostStudyPublishResponse'), require('../model/Study'), require('../model/StudyCreationBody'), require('../model/StudyJoinResponse'), require('../model/Vote'), require('../model/VoteDelete'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudiesApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.CommonResponse, root.Quantimodo.GetStudiesResponse, root.Quantimodo.JsonErrorResponse, root.Quantimodo.PostStudyCreateResponse, root.Quantimodo.PostStudyPublishResponse, root.Quantimodo.Study, root.Quantimodo.StudyCreationBody, root.Quantimodo.StudyJoinResponse, root.Quantimodo.Vote, root.Quantimodo.VoteDelete);\n  }\n}(this, function(ApiClient, CommonResponse, GetStudiesResponse, JsonErrorResponse, PostStudyCreateResponse, PostStudyPublishResponse, Study, StudyCreationBody, StudyJoinResponse, Vote, VoteDelete) {\n  'use strict';\n\n  /**\n   * Studies service.\n   * @module api/StudiesApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new StudiesApi. \n   * @alias module:api/StudiesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the createStudy operation.\n     * @callback module:api/StudiesApi~createStudyCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/PostStudyCreateResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Create a Study\n     * Create an individual, group, or population study examining the relationship between a predictor and outcome variable. You will be given a study id which you can invite participants to join and share their measurements for the specified variables.\n     * @param {module:model/StudyCreationBody} body Details about the study you want to create\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/StudiesApi~createStudyCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/PostStudyCreateResponse}\n     */\n    this.createStudy = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling createStudy\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = PostStudyCreateResponse;\n\n      return this.apiClient.callApi(\n        '/v3/study/create', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteVote operation.\n     * @callback module:api/StudiesApi~deleteVoteCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete vote\n     * Delete previously posted vote\n     * @param {module:model/VoteDelete} body The cause and effect variable names for the predictor vote to be deleted.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/StudiesApi~deleteVoteCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.deleteVote = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling deleteVote\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/votes/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getOpenStudies operation.\n     * @callback module:api/StudiesApi~getOpenStudiesCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetStudiesResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * These are open studies that anyone can join\n     * These are studies that anyone can join and share their data for the predictor and outcome variables of interest.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.includeCharts Highcharts configs that can be used if you have highcharts.js included on the page.  This only works if the id or name query parameter is also provided.\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {Boolean} opts.recalculate Recalculate instead of using cached analysis\n     * @param {String} opts.studyId Client id for the study you want\n     * @param {module:api/StudiesApi~getOpenStudiesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetStudiesResponse}\n     */\n    this.getOpenStudies = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'includeCharts': opts['includeCharts'],\n        'platform': opts['platform'],\n        'recalculate': opts['recalculate'],\n        'studyId': opts['studyId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetStudiesResponse;\n\n      return this.apiClient.callApi(\n        '/v3/studies/open', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getStudies operation.\n     * @callback module:api/StudiesApi~getStudiesCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetStudiesResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Personal or Population Studies\n     * If you have enough data, this will be a list of your personal studies, otherwise it will consist of aggregated population studies.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.includeCharts Highcharts configs that can be used if you have highcharts.js included on the page.  This only works if the id or name query parameter is also provided.\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {Boolean} opts.recalculate Recalculate instead of using cached analysis\n     * @param {String} opts.studyId Client id for the study you want\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {String} opts.correlationCoefficient Pearson correlation coefficient between cause and effect after lagging by onset delay and grouping by duration of action\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Boolean} opts.outcomesOfInterest Only include correlations for which the effect is an outcome of interest for the user\n     * @param {Number} opts.principalInvestigatorUserId These are studies created by a specific principal investigator\n     * @param {Boolean} opts.open These are studies that anyone can join\n     * @param {Boolean} opts.joined These are studies that you have joined\n     * @param {Boolean} opts.created These are studies that you have created\n     * @param {Boolean} opts.population These are studies based on the entire population of users that have shared their data\n     * @param {module:api/StudiesApi~getStudiesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetStudiesResponse}\n     */\n    this.getStudies = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'includeCharts': opts['includeCharts'],\n        'platform': opts['platform'],\n        'recalculate': opts['recalculate'],\n        'studyId': opts['studyId'],\n        'sort': opts['sort'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'correlationCoefficient': opts['correlationCoefficient'],\n        'updatedAt': opts['updatedAt'],\n        'outcomesOfInterest': opts['outcomesOfInterest'],\n        'principalInvestigatorUserId': opts['principalInvestigatorUserId'],\n        'open': opts['open'],\n        'joined': opts['joined'],\n        'created': opts['created'],\n        'population': opts['population'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetStudiesResponse;\n\n      return this.apiClient.callApi(\n        '/v3/studies', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getStudiesCreated operation.\n     * @callback module:api/StudiesApi~getStudiesCreatedCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetStudiesResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get studies you have created\n     * These are studies that you have created.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/StudiesApi~getStudiesCreatedCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetStudiesResponse}\n     */\n    this.getStudiesCreated = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'sort': opts['sort'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'userId': opts['userId'],\n        'updatedAt': opts['updatedAt'],\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetStudiesResponse;\n\n      return this.apiClient.callApi(\n        '/v3/studies/created', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getStudiesJoined operation.\n     * @callback module:api/StudiesApi~getStudiesJoinedCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/GetStudiesResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Studies You Have Joined\n     * These are studies that you are currently sharing your data with.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.correlationCoefficient Pearson correlation coefficient between cause and effect after lagging by onset delay and grouping by duration of action\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Boolean} opts.outcomesOfInterest Only include correlations for which the effect is an outcome of interest for the user\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/StudiesApi~getStudiesJoinedCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/GetStudiesResponse}\n     */\n    this.getStudiesJoined = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'sort': opts['sort'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'userId': opts['userId'],\n        'correlationCoefficient': opts['correlationCoefficient'],\n        'updatedAt': opts['updatedAt'],\n        'outcomesOfInterest': opts['outcomesOfInterest'],\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = GetStudiesResponse;\n\n      return this.apiClient.callApi(\n        '/v3/studies/joined', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getStudy operation.\n     * @callback module:api/StudiesApi~getStudyCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Study} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get Study\n     * Get Study\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.includeCharts Highcharts configs that can be used if you have highcharts.js included on the page.  This only works if the id or name query parameter is also provided.\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {Boolean} opts.recalculate Recalculate instead of using cached analysis\n     * @param {String} opts.studyId Client id for the study you want\n     * @param {module:api/StudiesApi~getStudyCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Study}\n     */\n    this.getStudy = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'includeCharts': opts['includeCharts'],\n        'platform': opts['platform'],\n        'recalculate': opts['recalculate'],\n        'studyId': opts['studyId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Study;\n\n      return this.apiClient.callApi(\n        '/v4/study', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the joinStudy operation.\n     * @callback module:api/StudiesApi~joinStudyCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/StudyJoinResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Join a Study\n     * Anonymously share measurements for specified variables\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.studyId Client id for the study you want\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/StudiesApi~joinStudyCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/StudyJoinResponse}\n     */\n    this.joinStudy = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'studyId': opts['studyId'],\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = StudyJoinResponse;\n\n      return this.apiClient.callApi(\n        '/v3/study/join', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postVote operation.\n     * @callback module:api/StudiesApi~postVoteCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post or update vote\n     * I am really good at finding correlations and even compensating for various onset delays and durations of action. However, you are much better than me at knowing if there&#39;s a way that a given factor could plausibly influence an outcome. You can help me learn and get better at my predictions by pressing the thumbs down button for relationships that you think are coincidences and thumbs up once that make logic sense.\n     * @param {module:model/Vote} body Contains the cause variable, effect variable, and vote value.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/StudiesApi~postVoteCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.postVote = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postVote\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/votes', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the publishStudy operation.\n     * @callback module:api/StudiesApi~publishStudyCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/PostStudyPublishResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Publish Your Study\n     * Make a study and all related measurements publicly visible by anyone\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.causeVariableName Name of the hypothetical predictor variable.  Ex: Sleep Duration\n     * @param {String} opts.effectVariableName Name of the hypothetical outcome variable.  Ex: Overall Mood\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.includeCharts Highcharts configs that can be used if you have highcharts.js included on the page.  This only works if the id or name query parameter is also provided.\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {Boolean} opts.recalculate Recalculate instead of using cached analysis\n     * @param {String} opts.studyId Client id for the study you want\n     * @param {module:api/StudiesApi~publishStudyCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/PostStudyPublishResponse}\n     */\n    this.publishStudy = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'causeVariableName': opts['causeVariableName'],\n        'effectVariableName': opts['effectVariableName'],\n        'userId': opts['userId'],\n        'clientId': opts['clientId'],\n        'includeCharts': opts['includeCharts'],\n        'platform': opts['platform'],\n        'recalculate': opts['recalculate'],\n        'studyId': opts['studyId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = PostStudyPublishResponse;\n\n      return this.apiClient.callApi(\n        '/v3/study/publish', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/CommonResponse\":29,\"../model/GetStudiesResponse\":41,\"../model/JsonErrorResponse\":45,\"../model/PostStudyCreateResponse\":55,\"../model/PostStudyPublishResponse\":56,\"../model/Study\":62,\"../model/StudyCreationBody\":64,\"../model/StudyJoinResponse\":67,\"../model/Vote\":86,\"../model/VoteDelete\":87}],19:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Unit', 'model/UnitCategory'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/Unit'), require('../model/UnitCategory'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.UnitsApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.Unit, root.Quantimodo.UnitCategory);\n  }\n}(this, function(ApiClient, Unit, UnitCategory) {\n  'use strict';\n\n  /**\n   * Units service.\n   * @module api/UnitsApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new UnitsApi. \n   * @alias module:api/UnitsApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the getUnitCategories operation.\n     * @callback module:api/UnitsApi~getUnitCategoriesCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/UnitCategory>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get unit categories\n     * Get a list of the categories of measurement units such as &#39;Distance&#39;, &#39;Duration&#39;, &#39;Energy&#39;, &#39;Frequency&#39;, &#39;Miscellany&#39;, &#39;Pressure&#39;, &#39;Proportion&#39;, &#39;Rating&#39;, &#39;Temperature&#39;, &#39;Volume&#39;, and &#39;Weight&#39;.\n     * @param {module:api/UnitsApi~getUnitCategoriesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/UnitCategory>}\n     */\n    this.getUnitCategories = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [UnitCategory];\n\n      return this.apiClient.callApi(\n        '/v3/unitCategories', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getUnits operation.\n     * @callback module:api/UnitsApi~getUnitsCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Unit>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get units\n     * Get a list of the available measurement units\n     * @param {module:api/UnitsApi~getUnitsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Unit>}\n     */\n    this.getUnits = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [Unit];\n\n      return this.apiClient.callApi(\n        '/v3/units', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/Unit\":78,\"../model/UnitCategory\":79}],20:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CommonResponse', 'model/PostUserSettingsResponse', 'model/User'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CommonResponse'), require('../model/PostUserSettingsResponse'), require('../model/User'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.UserApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.CommonResponse, root.Quantimodo.PostUserSettingsResponse, root.Quantimodo.User);\n  }\n}(this, function(ApiClient, CommonResponse, PostUserSettingsResponse, User) {\n  'use strict';\n\n  /**\n   * User service.\n   * @module api/UserApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new UserApi. \n   * @alias module:api/UserApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the deleteUser operation.\n     * @callback module:api/UserApi~deleteUserCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete user\n     * Delete user account. Only the client app that created a user can delete that user.\n     * @param {String} reason Ex: I hate you!\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/UserApi~deleteUserCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.deleteUser = function(reason, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'reason' is set\n      if (reason === undefined || reason === null) {\n        throw new Error(\"Missing the required parameter 'reason' when calling deleteUser\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'reason': reason,\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/user/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getUser operation.\n     * @callback module:api/UserApi~getUserCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get user info\n     * Returns user info.  If no userId is specified, returns info for currently authenticated user\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {String} opts.createdAt When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.appVersion Ex: 2.1.1.0\n     * @param {Number} opts.clientUserId Ex: 74802\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {String} opts.log Username or email\n     * @param {String} opts.pwd User password\n     * @param {Boolean} opts.includeAuthorizedClients Return list of apps, studies, and individuals with access to user data\n     * @param {module:api/UserApi~getUserCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.getUser = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n        'createdAt': opts['createdAt'],\n        'updatedAt': opts['updatedAt'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort'],\n        'clientId': opts['clientId'],\n        'appVersion': opts['appVersion'],\n        'clientUserId': opts['clientUserId'],\n        'platform': opts['platform'],\n        'log': opts['log'],\n        'pwd': opts['pwd'],\n        'includeAuthorizedClients': opts['includeAuthorizedClients'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/v3/user', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postUserSettings operation.\n     * @callback module:api/UserApi~postUserSettingsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/PostUserSettingsResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post UserSettings\n     * Post UserSettings\n     * @param {module:model/User} body User settings to update\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/UserApi~postUserSettingsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/PostUserSettingsResponse}\n     */\n    this.postUserSettings = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postUserSettings\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'clientId': opts['clientId'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = PostUserSettingsResponse;\n\n      return this.apiClient.callApi(\n        '/v3/userSettings', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/CommonResponse\":29,\"../model/PostUserSettingsResponse\":60,\"../model/User\":80}],21:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/CommonResponse', 'model/UserTag', 'model/UserVariableDelete', 'model/Variable', 'model/VariableCategory'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/CommonResponse'), require('../model/UserTag'), require('../model/UserVariableDelete'), require('../model/Variable'), require('../model/VariableCategory'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.VariablesApi = factory(root.Quantimodo.ApiClient, root.Quantimodo.CommonResponse, root.Quantimodo.UserTag, root.Quantimodo.UserVariableDelete, root.Quantimodo.Variable, root.Quantimodo.VariableCategory);\n  }\n}(this, function(ApiClient, CommonResponse, UserTag, UserVariableDelete, Variable, VariableCategory) {\n  'use strict';\n\n  /**\n   * Variables service.\n   * @module api/VariablesApi\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new VariablesApi. \n   * @alias module:api/VariablesApi\n   * @class\n   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the deleteUserTag operation.\n     * @callback module:api/VariablesApi~deleteUserTagCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete user tag or ingredient\n     * Delete previously created user tags or ingredients.\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.taggedVariableId Id of the tagged variable (i.e. Lollipop) you would like to get variables it can be tagged with (i.e. Sugar).  Converted measurements of the tagged variable are included in analysis of the tag variable (i.e. ingredient).\n     * @param {Number} opts.tagVariableId Id of the tag variable (i.e. Sugar) you would like to get variables it can be tagged to (i.e. Lollipop).  Converted measurements of the tagged variable are included in analysis of the tag variable (i.e. ingredient).\n     * @param {module:api/VariablesApi~deleteUserTagCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.deleteUserTag = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'taggedVariableId': opts['taggedVariableId'],\n        'tagVariableId': opts['tagVariableId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/userTags/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the deleteUserVariable operation.\n     * @callback module:api/VariablesApi~deleteUserVariableCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete All Measurements For Variable\n     * Users can delete all of their measurements for a variable\n     * @param {module:model/UserVariableDelete} variableId Id of the variable whose measurements should be deleted\n     * @param {module:api/VariablesApi~deleteUserVariableCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.deleteUserVariable = function(variableId, callback) {\n      var postBody = variableId;\n\n      // verify the required parameter 'variableId' is set\n      if (variableId === undefined || variableId === null) {\n        throw new Error(\"Missing the required parameter 'variableId' when calling deleteUserVariable\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/userVariables/delete', 'DELETE',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getVariableCategories operation.\n     * @callback module:api/VariablesApi~getVariableCategoriesCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/VariableCategory>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Variable categories\n     * The variable categories include Activity, Causes of Illness, Cognitive Performance, Conditions, Environment, Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique, Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work.\n     * @param {module:api/VariablesApi~getVariableCategoriesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/VariableCategory>}\n     */\n    this.getVariableCategories = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [VariableCategory];\n\n      return this.apiClient.callApi(\n        '/v3/variableCategories', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the getVariables operation.\n     * @callback module:api/VariablesApi~getVariablesCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Variable>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get variables along with related user-specific analysis settings and statistics\n     * Get variables. If the user has specified variable settings, these are provided instead of the common variable defaults.\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.includeCharts Highcharts configs that can be used if you have highcharts.js included on the page.  This only works if the id or name query parameter is also provided.\n     * @param {String} opts.numberOfRawMeasurements Filter variables by the total number of measurements that they have. This could be used of you want to filter or sort by popularity.\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:model/String} opts.variableCategoryName Limit results to a specific variable category\n     * @param {String} opts.name Name of the variable. To get results matching a substring, add % as a wildcard as the first and/or last character of a query string parameter. In order to get variables that contain &#x60;Mood&#x60;, the following query should be used: ?variableName&#x3D;%Mood%\n     * @param {String} opts.updatedAt When the record was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.sourceName ID of the source you want measurements for (supports exact name match only)\n     * @param {String} opts.earliestMeasurementTime Excluded records with measurement times earlier than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {String} opts.latestMeasurementTime Excluded records with measurement times later than this value. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n     * @param {Number} opts.id Common variable id\n     * @param {String} opts.lastSourceName Limit variables to those which measurements were last submitted by a specific source. So if you have a client application and you only want variables that were last updated by your app, you can include the name of your app here\n     * @param {Number} opts.limit The LIMIT is used to limit the number of results returned. So if youhave 1000 results, but only want to the first 10, you would set this to 10 and offset to 0. The maximum limit is 200 records. (default to 100)\n     * @param {Number} opts.offset OFFSET says to skip that many rows before beginning to return rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting to count the LIMIT rows that are returned.\n     * @param {String} opts.sort Sort by one of the listed field names. If the field name is prefixed with &#x60;-&#x60;, it will sort in descending order.\n     * @param {Boolean} opts.includePublic Include variables the user has no measurements for\n     * @param {Boolean} opts.manualTracking Only include variables tracked manually by the user\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {String} opts.upc UPC or other barcode scan result\n     * @param {String} opts.effectOrCause Provided variable is the effect or cause\n     * @param {String} opts.publicEffectOrCause Ex: \n     * @param {Boolean} opts.exactMatch Require exact match\n     * @param {Number} opts.variableCategoryId Ex: 13\n     * @param {Boolean} opts.includePrivate Include user-specific variables in results\n     * @param {String} opts.searchPhrase Ex: %Body Fat%\n     * @param {String} opts.synonyms Ex: McDonalds hotcake\n     * @param {Number} opts.taggedVariableId Id of the tagged variable (i.e. Lollipop) you would like to get variables it can be tagged with (i.e. Sugar).  Converted measurements of the tagged variable are included in analysis of the tag variable (i.e. ingredient).\n     * @param {Number} opts.tagVariableId Id of the tag variable (i.e. Sugar) you would like to get variables it can be tagged to (i.e. Lollipop).  Converted measurements of the tagged variable are included in analysis of the tag variable (i.e. ingredient).\n     * @param {Number} opts.joinVariableId Id of the variable you would like to get variables that can be joined to.  This is used to merge duplicate variables.   If joinVariableId is specified, this returns only variables eligible to be joined to the variable specified by the joinVariableId.\n     * @param {Number} opts.parentUserTagVariableId Id of the parent category variable (i.e. Fruit) you would like to get eligible child sub-type variables (i.e. Apple) for.  Child variable measurements will be included in analysis of the parent variable.  For instance, a child sub-type of the parent category Fruit could be Apple.  When Apple is tagged with the parent category Fruit, Apple measurements will be included when Fruit is analyzed.\n     * @param {Number} opts.childUserTagVariableId Id of the child sub-type variable (i.e. Apple) you would like to get eligible parent variables (i.e. Fruit) for.  Child variable measurements will be included in analysis of the parent variable.  For instance, a child sub-type of the parent category Fruit could be Apple. When Apple is tagged with the parent category Fruit, Apple measurements will be included when Fruit is analyzed.\n     * @param {Number} opts.ingredientUserTagVariableId Id of the ingredient variable (i.e. Fructose)  you would like to get eligible ingredientOf variables (i.e. Apple) for.  IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredientOf of variable Fruit could be Apple.\n     * @param {Number} opts.ingredientOfUserTagVariableId Id of the ingredientOf variable (i.e. Apple) you would like to get eligible ingredient variables (i.e. Fructose) for.  IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredientOf of variable Fruit could be Apple.\n     * @param {Boolean} opts.commonOnly Return only public and aggregated common variable data instead of user-specific variables\n     * @param {Boolean} opts.userOnly Return only user-specific variables and data, excluding common aggregated variable data\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {Boolean} opts.includeTags Return parent, child, duplicate, and ingredient variables\n     * @param {Boolean} opts.recalculate Recalculate instead of using cached analysis\n     * @param {Number} opts.variableId Ex: 13\n     * @param {Boolean} opts.concise Only return field required for variable auto-complete searches.  The smaller size allows for storing more variable results locally reducing API requests.\n     * @param {module:api/VariablesApi~getVariablesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Variable>}\n     */\n    this.getVariables = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'includeCharts': opts['includeCharts'],\n        'numberOfRawMeasurements': opts['numberOfRawMeasurements'],\n        'userId': opts['userId'],\n        'variableCategoryName': opts['variableCategoryName'],\n        'name': opts['name'],\n        'updatedAt': opts['updatedAt'],\n        'sourceName': opts['sourceName'],\n        'earliestMeasurementTime': opts['earliestMeasurementTime'],\n        'latestMeasurementTime': opts['latestMeasurementTime'],\n        'id': opts['id'],\n        'lastSourceName': opts['lastSourceName'],\n        'limit': opts['limit'],\n        'offset': opts['offset'],\n        'sort': opts['sort'],\n        'includePublic': opts['includePublic'],\n        'manualTracking': opts['manualTracking'],\n        'clientId': opts['clientId'],\n        'upc': opts['upc'],\n        'effectOrCause': opts['effectOrCause'],\n        'publicEffectOrCause': opts['publicEffectOrCause'],\n        'exactMatch': opts['exactMatch'],\n        'variableCategoryId': opts['variableCategoryId'],\n        'includePrivate': opts['includePrivate'],\n        'searchPhrase': opts['searchPhrase'],\n        'synonyms': opts['synonyms'],\n        'taggedVariableId': opts['taggedVariableId'],\n        'tagVariableId': opts['tagVariableId'],\n        'joinVariableId': opts['joinVariableId'],\n        'parentUserTagVariableId': opts['parentUserTagVariableId'],\n        'childUserTagVariableId': opts['childUserTagVariableId'],\n        'ingredientUserTagVariableId': opts['ingredientUserTagVariableId'],\n        'ingredientOfUserTagVariableId': opts['ingredientOfUserTagVariableId'],\n        'commonOnly': opts['commonOnly'],\n        'userOnly': opts['userOnly'],\n        'platform': opts['platform'],\n        'includeTags': opts['includeTags'],\n        'recalculate': opts['recalculate'],\n        'variableId': opts['variableId'],\n        'concise': opts['concise'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = [Variable];\n\n      return this.apiClient.callApi(\n        '/v3/variables', 'GET',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postUserTags operation.\n     * @callback module:api/VariablesApi~postUserTagsCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Post or update user tags or ingredients\n     * This endpoint allows users to tag foods with their ingredients.  This information will then be used to infer the user intake of the different ingredients by just entering the foods. The inferred intake levels will then be used to determine the effects of different nutrients on the user during analysis.\n     * @param {module:model/UserTag} body Contains the new user tag data\n     * @param {Object} opts Optional parameters\n     * @param {Number} opts.userId User&#39;s id\n     * @param {module:api/VariablesApi~postUserTagsCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.postUserTags = function(body, opts, callback) {\n      opts = opts || {};\n      var postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postUserTags\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'userId': opts['userId'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/userTags', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the postUserVariables operation.\n     * @callback module:api/VariablesApi~postUserVariablesCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/CommonResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Update User Settings for a Variable\n     * Users can change the parameters used in analysis of that variable such as the expected duration of action for a variable to have an effect, the estimated delay before the onset of action. In order to filter out erroneous data, they are able to set the maximum and minimum reasonable daily values for a variable.\n     * @param {Array.<module:model/Variable>} userVariables Variable user settings data\n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.includePrivate Include user-specific variables in results\n     * @param {String} opts.clientId Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n     * @param {Boolean} opts.includePublic Include variables the user has no measurements for\n     * @param {String} opts.searchPhrase Ex: %Body Fat%\n     * @param {Boolean} opts.exactMatch Require exact match\n     * @param {Boolean} opts.manualTracking Only include variables tracked manually by the user\n     * @param {module:model/String} opts.variableCategoryName Limit results to a specific variable category\n     * @param {Number} opts.variableCategoryId Ex: 13\n     * @param {String} opts.synonyms Ex: McDonalds hotcake\n     * @param {module:model/String} opts.platform Ex: chrome, android, ios, web\n     * @param {module:api/VariablesApi~postUserVariablesCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/CommonResponse}\n     */\n    this.postUserVariables = function(userVariables, opts, callback) {\n      opts = opts || {};\n      var postBody = userVariables;\n\n      // verify the required parameter 'userVariables' is set\n      if (userVariables === undefined || userVariables === null) {\n        throw new Error(\"Missing the required parameter 'userVariables' when calling postUserVariables\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'includePrivate': opts['includePrivate'],\n        'clientId': opts['clientId'],\n        'includePublic': opts['includePublic'],\n        'searchPhrase': opts['searchPhrase'],\n        'exactMatch': opts['exactMatch'],\n        'manualTracking': opts['manualTracking'],\n        'variableCategoryName': opts['variableCategoryName'],\n        'variableCategoryId': opts['variableCategoryId'],\n        'synonyms': opts['synonyms'],\n        'platform': opts['platform'],\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = CommonResponse;\n\n      return this.apiClient.callApi(\n        '/v3/variables', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the resetUserVariableSettings operation.\n     * @callback module:api/VariablesApi~resetUserVariableSettingsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Reset user settings for a variable to defaults\n     * Reset user settings for a variable to defaults\n     * @param {module:model/UserVariableDelete} variableId Id of the variable whose measurements should be deleted\n     * @param {module:api/VariablesApi~resetUserVariableSettingsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.resetUserVariableSettings = function(variableId, callback) {\n      var postBody = variableId;\n\n      // verify the required parameter 'variableId' is set\n      if (variableId === undefined || variableId === null) {\n        throw new Error(\"Missing the required parameter 'variableId' when calling resetUserVariableSettings\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var collectionQueryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['access_token', 'quantimodo_oauth2'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v3/userVariables/reset', 'POST',\n        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n\n},{\"../ApiClient\":9,\"../model/CommonResponse\":29,\"../model/UserTag\":81,\"../model/UserVariableDelete\":82,\"../model/Variable\":83,\"../model/VariableCategory\":84}],22:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AppSettings', 'model/AppSettingsResponse', 'model/AuthorizedClients', 'model/Button', 'model/Card', 'model/Chart', 'model/CommonResponse', 'model/ConnectInstructions', 'model/ConversionStep', 'model/Correlation', 'model/DataSource', 'model/DeviceToken', 'model/Explanation', 'model/ExplanationStartTracking', 'model/GetConnectorsResponse', 'model/GetCorrelationsDataResponse', 'model/GetCorrelationsResponse', 'model/GetSharesResponse', 'model/GetStudiesResponse', 'model/GetTrackingReminderNotificationsResponse', 'model/Image', 'model/InputField', 'model/JsonErrorResponse', 'model/Measurement', 'model/MeasurementDelete', 'model/MeasurementItem', 'model/MeasurementSet', 'model/MeasurementUpdate', 'model/Pair', 'model/ParticipantInstruction', 'model/PostMeasurementsDataResponse', 'model/PostMeasurementsResponse', 'model/PostStudyCreateResponse', 'model/PostStudyPublishResponse', 'model/PostTrackingRemindersDataResponse', 'model/PostTrackingRemindersResponse', 'model/PostUserSettingsDataResponse', 'model/PostUserSettingsResponse', 'model/ShareInvitationBody', 'model/Study', 'model/StudyCharts', 'model/StudyCreationBody', 'model/StudyHtml', 'model/StudyImages', 'model/StudyJoinResponse', 'model/StudyLinks', 'model/StudySharing', 'model/StudyText', 'model/StudyVotes', 'model/TrackingReminder', 'model/TrackingReminderDelete', 'model/TrackingReminderNotification', 'model/TrackingReminderNotificationAction', 'model/TrackingReminderNotificationPost', 'model/TrackingReminderNotificationTrackAllAction', 'model/Unit', 'model/UnitCategory', 'model/User', 'model/UserTag', 'model/UserVariableDelete', 'model/Variable', 'model/VariableCategory', 'model/VariableCharts', 'model/Vote', 'model/VoteDelete', 'api/AnalyticsApi', 'api/AppSettingsApi', 'api/AuthenticationApi', 'api/ConnectorsApi', 'api/MeasurementsApi', 'api/NotificationsApi', 'api/RemindersApi', 'api/SharesApi', 'api/StudiesApi', 'api/UnitsApi', 'api/UserApi', 'api/VariablesApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./model/AppSettings'), require('./model/AppSettingsResponse'), require('./model/AuthorizedClients'), require('./model/Button'), require('./model/Card'), require('./model/Chart'), require('./model/CommonResponse'), require('./model/ConnectInstructions'), require('./model/ConversionStep'), require('./model/Correlation'), require('./model/DataSource'), require('./model/DeviceToken'), require('./model/Explanation'), require('./model/ExplanationStartTracking'), require('./model/GetConnectorsResponse'), require('./model/GetCorrelationsDataResponse'), require('./model/GetCorrelationsResponse'), require('./model/GetSharesResponse'), require('./model/GetStudiesResponse'), require('./model/GetTrackingReminderNotificationsResponse'), require('./model/Image'), require('./model/InputField'), require('./model/JsonErrorResponse'), require('./model/Measurement'), require('./model/MeasurementDelete'), require('./model/MeasurementItem'), require('./model/MeasurementSet'), require('./model/MeasurementUpdate'), require('./model/Pair'), require('./model/ParticipantInstruction'), require('./model/PostMeasurementsDataResponse'), require('./model/PostMeasurementsResponse'), require('./model/PostStudyCreateResponse'), require('./model/PostStudyPublishResponse'), require('./model/PostTrackingRemindersDataResponse'), require('./model/PostTrackingRemindersResponse'), require('./model/PostUserSettingsDataResponse'), require('./model/PostUserSettingsResponse'), require('./model/ShareInvitationBody'), require('./model/Study'), require('./model/StudyCharts'), require('./model/StudyCreationBody'), require('./model/StudyHtml'), require('./model/StudyImages'), require('./model/StudyJoinResponse'), require('./model/StudyLinks'), require('./model/StudySharing'), require('./model/StudyText'), require('./model/StudyVotes'), require('./model/TrackingReminder'), require('./model/TrackingReminderDelete'), require('./model/TrackingReminderNotification'), require('./model/TrackingReminderNotificationAction'), require('./model/TrackingReminderNotificationPost'), require('./model/TrackingReminderNotificationTrackAllAction'), require('./model/Unit'), require('./model/UnitCategory'), require('./model/User'), require('./model/UserTag'), require('./model/UserVariableDelete'), require('./model/Variable'), require('./model/VariableCategory'), require('./model/VariableCharts'), require('./model/Vote'), require('./model/VoteDelete'), require('./api/AnalyticsApi'), require('./api/AppSettingsApi'), require('./api/AuthenticationApi'), require('./api/ConnectorsApi'), require('./api/MeasurementsApi'), require('./api/NotificationsApi'), require('./api/RemindersApi'), require('./api/SharesApi'), require('./api/StudiesApi'), require('./api/UnitsApi'), require('./api/UserApi'), require('./api/VariablesApi'));\n  }\n}(function(ApiClient, AppSettings, AppSettingsResponse, AuthorizedClients, Button, Card, Chart, CommonResponse, ConnectInstructions, ConversionStep, Correlation, DataSource, DeviceToken, Explanation, ExplanationStartTracking, GetConnectorsResponse, GetCorrelationsDataResponse, GetCorrelationsResponse, GetSharesResponse, GetStudiesResponse, GetTrackingReminderNotificationsResponse, Image, InputField, JsonErrorResponse, Measurement, MeasurementDelete, MeasurementItem, MeasurementSet, MeasurementUpdate, Pair, ParticipantInstruction, PostMeasurementsDataResponse, PostMeasurementsResponse, PostStudyCreateResponse, PostStudyPublishResponse, PostTrackingRemindersDataResponse, PostTrackingRemindersResponse, PostUserSettingsDataResponse, PostUserSettingsResponse, ShareInvitationBody, Study, StudyCharts, StudyCreationBody, StudyHtml, StudyImages, StudyJoinResponse, StudyLinks, StudySharing, StudyText, StudyVotes, TrackingReminder, TrackingReminderDelete, TrackingReminderNotification, TrackingReminderNotificationAction, TrackingReminderNotificationPost, TrackingReminderNotificationTrackAllAction, Unit, UnitCategory, User, UserTag, UserVariableDelete, Variable, VariableCategory, VariableCharts, Vote, VoteDelete, AnalyticsApi, AppSettingsApi, AuthenticationApi, ConnectorsApi, MeasurementsApi, NotificationsApi, RemindersApi, SharesApi, StudiesApi, UnitsApi, UserApi, VariablesApi) {\n  'use strict';\n\n  /**\n   * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk&#39;s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do)..<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var Quantimodo = require('index'); // See note below*.\n   * var xxxSvc = new Quantimodo.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new Quantimodo.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new Quantimodo.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new Quantimodo.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 5.8.112511\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The AppSettings model constructor.\n     * @property {module:model/AppSettings}\n     */\n    AppSettings: AppSettings,\n    /**\n     * The AppSettingsResponse model constructor.\n     * @property {module:model/AppSettingsResponse}\n     */\n    AppSettingsResponse: AppSettingsResponse,\n    /**\n     * The AuthorizedClients model constructor.\n     * @property {module:model/AuthorizedClients}\n     */\n    AuthorizedClients: AuthorizedClients,\n    /**\n     * The Button model constructor.\n     * @property {module:model/Button}\n     */\n    Button: Button,\n    /**\n     * The Card model constructor.\n     * @property {module:model/Card}\n     */\n    Card: Card,\n    /**\n     * The Chart model constructor.\n     * @property {module:model/Chart}\n     */\n    Chart: Chart,\n    /**\n     * The CommonResponse model constructor.\n     * @property {module:model/CommonResponse}\n     */\n    CommonResponse: CommonResponse,\n    /**\n     * The ConnectInstructions model constructor.\n     * @property {module:model/ConnectInstructions}\n     */\n    ConnectInstructions: ConnectInstructions,\n    /**\n     * The ConversionStep model constructor.\n     * @property {module:model/ConversionStep}\n     */\n    ConversionStep: ConversionStep,\n    /**\n     * The Correlation model constructor.\n     * @property {module:model/Correlation}\n     */\n    Correlation: Correlation,\n    /**\n     * The DataSource model constructor.\n     * @property {module:model/DataSource}\n     */\n    DataSource: DataSource,\n    /**\n     * The DeviceToken model constructor.\n     * @property {module:model/DeviceToken}\n     */\n    DeviceToken: DeviceToken,\n    /**\n     * The Explanation model constructor.\n     * @property {module:model/Explanation}\n     */\n    Explanation: Explanation,\n    /**\n     * The ExplanationStartTracking model constructor.\n     * @property {module:model/ExplanationStartTracking}\n     */\n    ExplanationStartTracking: ExplanationStartTracking,\n    /**\n     * The GetConnectorsResponse model constructor.\n     * @property {module:model/GetConnectorsResponse}\n     */\n    GetConnectorsResponse: GetConnectorsResponse,\n    /**\n     * The GetCorrelationsDataResponse model constructor.\n     * @property {module:model/GetCorrelationsDataResponse}\n     */\n    GetCorrelationsDataResponse: GetCorrelationsDataResponse,\n    /**\n     * The GetCorrelationsResponse model constructor.\n     * @property {module:model/GetCorrelationsResponse}\n     */\n    GetCorrelationsResponse: GetCorrelationsResponse,\n    /**\n     * The GetSharesResponse model constructor.\n     * @property {module:model/GetSharesResponse}\n     */\n    GetSharesResponse: GetSharesResponse,\n    /**\n     * The GetStudiesResponse model constructor.\n     * @property {module:model/GetStudiesResponse}\n     */\n    GetStudiesResponse: GetStudiesResponse,\n    /**\n     * The GetTrackingReminderNotificationsResponse model constructor.\n     * @property {module:model/GetTrackingReminderNotificationsResponse}\n     */\n    GetTrackingReminderNotificationsResponse: GetTrackingReminderNotificationsResponse,\n    /**\n     * The Image model constructor.\n     * @property {module:model/Image}\n     */\n    Image: Image,\n    /**\n     * The InputField model constructor.\n     * @property {module:model/InputField}\n     */\n    InputField: InputField,\n    /**\n     * The JsonErrorResponse model constructor.\n     * @property {module:model/JsonErrorResponse}\n     */\n    JsonErrorResponse: JsonErrorResponse,\n    /**\n     * The Measurement model constructor.\n     * @property {module:model/Measurement}\n     */\n    Measurement: Measurement,\n    /**\n     * The MeasurementDelete model constructor.\n     * @property {module:model/MeasurementDelete}\n     */\n    MeasurementDelete: MeasurementDelete,\n    /**\n     * The MeasurementItem model constructor.\n     * @property {module:model/MeasurementItem}\n     */\n    MeasurementItem: MeasurementItem,\n    /**\n     * The MeasurementSet model constructor.\n     * @property {module:model/MeasurementSet}\n     */\n    MeasurementSet: MeasurementSet,\n    /**\n     * The MeasurementUpdate model constructor.\n     * @property {module:model/MeasurementUpdate}\n     */\n    MeasurementUpdate: MeasurementUpdate,\n    /**\n     * The Pair model constructor.\n     * @property {module:model/Pair}\n     */\n    Pair: Pair,\n    /**\n     * The ParticipantInstruction model constructor.\n     * @property {module:model/ParticipantInstruction}\n     */\n    ParticipantInstruction: ParticipantInstruction,\n    /**\n     * The PostMeasurementsDataResponse model constructor.\n     * @property {module:model/PostMeasurementsDataResponse}\n     */\n    PostMeasurementsDataResponse: PostMeasurementsDataResponse,\n    /**\n     * The PostMeasurementsResponse model constructor.\n     * @property {module:model/PostMeasurementsResponse}\n     */\n    PostMeasurementsResponse: PostMeasurementsResponse,\n    /**\n     * The PostStudyCreateResponse model constructor.\n     * @property {module:model/PostStudyCreateResponse}\n     */\n    PostStudyCreateResponse: PostStudyCreateResponse,\n    /**\n     * The PostStudyPublishResponse model constructor.\n     * @property {module:model/PostStudyPublishResponse}\n     */\n    PostStudyPublishResponse: PostStudyPublishResponse,\n    /**\n     * The PostTrackingRemindersDataResponse model constructor.\n     * @property {module:model/PostTrackingRemindersDataResponse}\n     */\n    PostTrackingRemindersDataResponse: PostTrackingRemindersDataResponse,\n    /**\n     * The PostTrackingRemindersResponse model constructor.\n     * @property {module:model/PostTrackingRemindersResponse}\n     */\n    PostTrackingRemindersResponse: PostTrackingRemindersResponse,\n    /**\n     * The PostUserSettingsDataResponse model constructor.\n     * @property {module:model/PostUserSettingsDataResponse}\n     */\n    PostUserSettingsDataResponse: PostUserSettingsDataResponse,\n    /**\n     * The PostUserSettingsResponse model constructor.\n     * @property {module:model/PostUserSettingsResponse}\n     */\n    PostUserSettingsResponse: PostUserSettingsResponse,\n    /**\n     * The ShareInvitationBody model constructor.\n     * @property {module:model/ShareInvitationBody}\n     */\n    ShareInvitationBody: ShareInvitationBody,\n    /**\n     * The Study model constructor.\n     * @property {module:model/Study}\n     */\n    Study: Study,\n    /**\n     * The StudyCharts model constructor.\n     * @property {module:model/StudyCharts}\n     */\n    StudyCharts: StudyCharts,\n    /**\n     * The StudyCreationBody model constructor.\n     * @property {module:model/StudyCreationBody}\n     */\n    StudyCreationBody: StudyCreationBody,\n    /**\n     * The StudyHtml model constructor.\n     * @property {module:model/StudyHtml}\n     */\n    StudyHtml: StudyHtml,\n    /**\n     * The StudyImages model constructor.\n     * @property {module:model/StudyImages}\n     */\n    StudyImages: StudyImages,\n    /**\n     * The StudyJoinResponse model constructor.\n     * @property {module:model/StudyJoinResponse}\n     */\n    StudyJoinResponse: StudyJoinResponse,\n    /**\n     * The StudyLinks model constructor.\n     * @property {module:model/StudyLinks}\n     */\n    StudyLinks: StudyLinks,\n    /**\n     * The StudySharing model constructor.\n     * @property {module:model/StudySharing}\n     */\n    StudySharing: StudySharing,\n    /**\n     * The StudyText model constructor.\n     * @property {module:model/StudyText}\n     */\n    StudyText: StudyText,\n    /**\n     * The StudyVotes model constructor.\n     * @property {module:model/StudyVotes}\n     */\n    StudyVotes: StudyVotes,\n    /**\n     * The TrackingReminder model constructor.\n     * @property {module:model/TrackingReminder}\n     */\n    TrackingReminder: TrackingReminder,\n    /**\n     * The TrackingReminderDelete model constructor.\n     * @property {module:model/TrackingReminderDelete}\n     */\n    TrackingReminderDelete: TrackingReminderDelete,\n    /**\n     * The TrackingReminderNotification model constructor.\n     * @property {module:model/TrackingReminderNotification}\n     */\n    TrackingReminderNotification: TrackingReminderNotification,\n    /**\n     * The TrackingReminderNotificationAction model constructor.\n     * @property {module:model/TrackingReminderNotificationAction}\n     */\n    TrackingReminderNotificationAction: TrackingReminderNotificationAction,\n    /**\n     * The TrackingReminderNotificationPost model constructor.\n     * @property {module:model/TrackingReminderNotificationPost}\n     */\n    TrackingReminderNotificationPost: TrackingReminderNotificationPost,\n    /**\n     * The TrackingReminderNotificationTrackAllAction model constructor.\n     * @property {module:model/TrackingReminderNotificationTrackAllAction}\n     */\n    TrackingReminderNotificationTrackAllAction: TrackingReminderNotificationTrackAllAction,\n    /**\n     * The Unit model constructor.\n     * @property {module:model/Unit}\n     */\n    Unit: Unit,\n    /**\n     * The UnitCategory model constructor.\n     * @property {module:model/UnitCategory}\n     */\n    UnitCategory: UnitCategory,\n    /**\n     * The User model constructor.\n     * @property {module:model/User}\n     */\n    User: User,\n    /**\n     * The UserTag model constructor.\n     * @property {module:model/UserTag}\n     */\n    UserTag: UserTag,\n    /**\n     * The UserVariableDelete model constructor.\n     * @property {module:model/UserVariableDelete}\n     */\n    UserVariableDelete: UserVariableDelete,\n    /**\n     * The Variable model constructor.\n     * @property {module:model/Variable}\n     */\n    Variable: Variable,\n    /**\n     * The VariableCategory model constructor.\n     * @property {module:model/VariableCategory}\n     */\n    VariableCategory: VariableCategory,\n    /**\n     * The VariableCharts model constructor.\n     * @property {module:model/VariableCharts}\n     */\n    VariableCharts: VariableCharts,\n    /**\n     * The Vote model constructor.\n     * @property {module:model/Vote}\n     */\n    Vote: Vote,\n    /**\n     * The VoteDelete model constructor.\n     * @property {module:model/VoteDelete}\n     */\n    VoteDelete: VoteDelete,\n    /**\n     * The AnalyticsApi service constructor.\n     * @property {module:api/AnalyticsApi}\n     */\n    AnalyticsApi: AnalyticsApi,\n    /**\n     * The AppSettingsApi service constructor.\n     * @property {module:api/AppSettingsApi}\n     */\n    AppSettingsApi: AppSettingsApi,\n    /**\n     * The AuthenticationApi service constructor.\n     * @property {module:api/AuthenticationApi}\n     */\n    AuthenticationApi: AuthenticationApi,\n    /**\n     * The ConnectorsApi service constructor.\n     * @property {module:api/ConnectorsApi}\n     */\n    ConnectorsApi: ConnectorsApi,\n    /**\n     * The MeasurementsApi service constructor.\n     * @property {module:api/MeasurementsApi}\n     */\n    MeasurementsApi: MeasurementsApi,\n    /**\n     * The NotificationsApi service constructor.\n     * @property {module:api/NotificationsApi}\n     */\n    NotificationsApi: NotificationsApi,\n    /**\n     * The RemindersApi service constructor.\n     * @property {module:api/RemindersApi}\n     */\n    RemindersApi: RemindersApi,\n    /**\n     * The SharesApi service constructor.\n     * @property {module:api/SharesApi}\n     */\n    SharesApi: SharesApi,\n    /**\n     * The StudiesApi service constructor.\n     * @property {module:api/StudiesApi}\n     */\n    StudiesApi: StudiesApi,\n    /**\n     * The UnitsApi service constructor.\n     * @property {module:api/UnitsApi}\n     */\n    UnitsApi: UnitsApi,\n    /**\n     * The UserApi service constructor.\n     * @property {module:api/UserApi}\n     */\n    UserApi: UserApi,\n    /**\n     * The VariablesApi service constructor.\n     * @property {module:api/VariablesApi}\n     */\n    VariablesApi: VariablesApi\n  };\n\n  return exports;\n}));\n\n},{\"./ApiClient\":9,\"./api/AnalyticsApi\":10,\"./api/AppSettingsApi\":11,\"./api/AuthenticationApi\":12,\"./api/ConnectorsApi\":13,\"./api/MeasurementsApi\":14,\"./api/NotificationsApi\":15,\"./api/RemindersApi\":16,\"./api/SharesApi\":17,\"./api/StudiesApi\":18,\"./api/UnitsApi\":19,\"./api/UserApi\":20,\"./api/VariablesApi\":21,\"./model/AppSettings\":23,\"./model/AppSettingsResponse\":24,\"./model/AuthorizedClients\":25,\"./model/Button\":26,\"./model/Card\":27,\"./model/Chart\":28,\"./model/CommonResponse\":29,\"./model/ConnectInstructions\":30,\"./model/ConversionStep\":31,\"./model/Correlation\":32,\"./model/DataSource\":33,\"./model/DeviceToken\":34,\"./model/Explanation\":35,\"./model/ExplanationStartTracking\":36,\"./model/GetConnectorsResponse\":37,\"./model/GetCorrelationsDataResponse\":38,\"./model/GetCorrelationsResponse\":39,\"./model/GetSharesResponse\":40,\"./model/GetStudiesResponse\":41,\"./model/GetTrackingReminderNotificationsResponse\":42,\"./model/Image\":43,\"./model/InputField\":44,\"./model/JsonErrorResponse\":45,\"./model/Measurement\":46,\"./model/MeasurementDelete\":47,\"./model/MeasurementItem\":48,\"./model/MeasurementSet\":49,\"./model/MeasurementUpdate\":50,\"./model/Pair\":51,\"./model/ParticipantInstruction\":52,\"./model/PostMeasurementsDataResponse\":53,\"./model/PostMeasurementsResponse\":54,\"./model/PostStudyCreateResponse\":55,\"./model/PostStudyPublishResponse\":56,\"./model/PostTrackingRemindersDataResponse\":57,\"./model/PostTrackingRemindersResponse\":58,\"./model/PostUserSettingsDataResponse\":59,\"./model/PostUserSettingsResponse\":60,\"./model/ShareInvitationBody\":61,\"./model/Study\":62,\"./model/StudyCharts\":63,\"./model/StudyCreationBody\":64,\"./model/StudyHtml\":65,\"./model/StudyImages\":66,\"./model/StudyJoinResponse\":67,\"./model/StudyLinks\":68,\"./model/StudySharing\":69,\"./model/StudyText\":70,\"./model/StudyVotes\":71,\"./model/TrackingReminder\":72,\"./model/TrackingReminderDelete\":73,\"./model/TrackingReminderNotification\":74,\"./model/TrackingReminderNotificationAction\":75,\"./model/TrackingReminderNotificationPost\":76,\"./model/TrackingReminderNotificationTrackAllAction\":77,\"./model/Unit\":78,\"./model/UnitCategory\":79,\"./model/User\":80,\"./model/UserTag\":81,\"./model/UserVariableDelete\":82,\"./model/Variable\":83,\"./model/VariableCategory\":84,\"./model/VariableCharts\":85,\"./model/Vote\":86,\"./model/VoteDelete\":87}],23:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/User'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./User'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AppSettings = factory(root.Quantimodo.ApiClient, root.Quantimodo.User);\n  }\n}(this, function(ApiClient, User) {\n  'use strict';\n\n\n\n\n  /**\n   * The AppSettings model module.\n   * @module model/AppSettings\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>AppSettings</code>.\n   * @alias module:model/AppSettings\n   * @class\n   * @param clientId {String} What do you expect?\n   */\n  var exports = function(clientId) {\n    var _this = this;\n\n\n\n\n\n\n\n\n    _this['clientId'] = clientId;\n\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>AppSettings</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AppSettings} obj Optional instance to populate.\n   * @return {module:model/AppSettings} The populated <code>AppSettings</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('additionalSettings')) {\n        obj['additionalSettings'] = ApiClient.convertToType(data['additionalSettings'], Object);\n      }\n      if (data.hasOwnProperty('appDescription')) {\n        obj['appDescription'] = ApiClient.convertToType(data['appDescription'], 'String');\n      }\n      if (data.hasOwnProperty('appDesign')) {\n        obj['appDesign'] = ApiClient.convertToType(data['appDesign'], Object);\n      }\n      if (data.hasOwnProperty('appDisplayName')) {\n        obj['appDisplayName'] = ApiClient.convertToType(data['appDisplayName'], 'String');\n      }\n      if (data.hasOwnProperty('appStatus')) {\n        obj['appStatus'] = ApiClient.convertToType(data['appStatus'], Object);\n      }\n      if (data.hasOwnProperty('appType')) {\n        obj['appType'] = ApiClient.convertToType(data['appType'], 'String');\n      }\n      if (data.hasOwnProperty('buildEnabled')) {\n        obj['buildEnabled'] = ApiClient.convertToType(data['buildEnabled'], 'String');\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('clientSecret')) {\n        obj['clientSecret'] = ApiClient.convertToType(data['clientSecret'], 'String');\n      }\n      if (data.hasOwnProperty('collaborators')) {\n        obj['collaborators'] = ApiClient.convertToType(data['collaborators'], [User]);\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');\n      }\n      if (data.hasOwnProperty('users')) {\n        obj['users'] = ApiClient.convertToType(data['users'], [User]);\n      }\n      if (data.hasOwnProperty('redirectUri')) {\n        obj['redirectUri'] = ApiClient.convertToType(data['redirectUri'], 'String');\n      }\n      if (data.hasOwnProperty('companyName')) {\n        obj['companyName'] = ApiClient.convertToType(data['companyName'], 'String');\n      }\n      if (data.hasOwnProperty('homepageUrl')) {\n        obj['homepageUrl'] = ApiClient.convertToType(data['homepageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('iconUrl')) {\n        obj['iconUrl'] = ApiClient.convertToType(data['iconUrl'], 'String');\n      }\n      if (data.hasOwnProperty('longDescription')) {\n        obj['longDescription'] = ApiClient.convertToType(data['longDescription'], 'String');\n      }\n      if (data.hasOwnProperty('splashScreen')) {\n        obj['splashScreen'] = ApiClient.convertToType(data['splashScreen'], 'String');\n      }\n      if (data.hasOwnProperty('textLogo')) {\n        obj['textLogo'] = ApiClient.convertToType(data['textLogo'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * What do you expect?\n   * @member {Object} additionalSettings\n   */\n  exports.prototype['additionalSettings'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} appDescription\n   */\n  exports.prototype['appDescription'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Object} appDesign\n   */\n  exports.prototype['appDesign'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} appDisplayName\n   */\n  exports.prototype['appDisplayName'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Object} appStatus\n   */\n  exports.prototype['appStatus'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} appType\n   */\n  exports.prototype['appType'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} buildEnabled\n   */\n  exports.prototype['buildEnabled'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} clientSecret\n   */\n  exports.prototype['clientSecret'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Array.<module:model/User>} collaborators\n   */\n  exports.prototype['collaborators'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Array.<module:model/User>} users\n   */\n  exports.prototype['users'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} redirectUri\n   */\n  exports.prototype['redirectUri'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} companyName\n   */\n  exports.prototype['companyName'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} homepageUrl\n   */\n  exports.prototype['homepageUrl'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} iconUrl\n   */\n  exports.prototype['iconUrl'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} longDescription\n   */\n  exports.prototype['longDescription'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} splashScreen\n   */\n  exports.prototype['splashScreen'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} textLogo\n   */\n  exports.prototype['textLogo'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./User\":80}],24:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AppSettings'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./AppSettings'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AppSettingsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.AppSettings);\n  }\n}(this, function(ApiClient, AppSettings) {\n  'use strict';\n\n\n\n\n  /**\n   * The AppSettingsResponse model module.\n   * @module model/AppSettingsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>AppSettingsResponse</code>.\n   * @alias module:model/AppSettingsResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n  };\n\n  /**\n   * Constructs a <code>AppSettingsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AppSettingsResponse} obj Optional instance to populate.\n   * @return {module:model/AppSettingsResponse} The populated <code>AppSettingsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('appSettings')) {\n        obj['appSettings'] = AppSettings.constructFromObject(data['appSettings']);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/AppSettings} appSettings\n   */\n  exports.prototype['appSettings'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./AppSettings\":23}],25:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AppSettings'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./AppSettings'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.AuthorizedClients = factory(root.Quantimodo.ApiClient, root.Quantimodo.AppSettings);\n  }\n}(this, function(ApiClient, AppSettings) {\n  'use strict';\n\n\n\n\n  /**\n   * The AuthorizedClients model module.\n   * @module model/AuthorizedClients\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>AuthorizedClients</code>.\n   * @alias module:model/AuthorizedClients\n   * @class\n   * @param apps {Array.<module:model/AppSettings>} Applications with access to user measurements for all variables\n   * @param individuals {Array.<module:model/AppSettings>} Individuals such as physicians or family members with access to user measurements for all variables\n   * @param studies {Array.<module:model/AppSettings>} Studies with access to generally anonymous user measurements for a specific predictor and outcome variable\n   */\n  var exports = function(apps, individuals, studies) {\n    var _this = this;\n\n    _this['apps'] = apps;\n    _this['individuals'] = individuals;\n    _this['studies'] = studies;\n  };\n\n  /**\n   * Constructs a <code>AuthorizedClients</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AuthorizedClients} obj Optional instance to populate.\n   * @return {module:model/AuthorizedClients} The populated <code>AuthorizedClients</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('apps')) {\n        obj['apps'] = ApiClient.convertToType(data['apps'], [AppSettings]);\n      }\n      if (data.hasOwnProperty('individuals')) {\n        obj['individuals'] = ApiClient.convertToType(data['individuals'], [AppSettings]);\n      }\n      if (data.hasOwnProperty('studies')) {\n        obj['studies'] = ApiClient.convertToType(data['studies'], [AppSettings]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Applications with access to user measurements for all variables\n   * @member {Array.<module:model/AppSettings>} apps\n   */\n  exports.prototype['apps'] = undefined;\n  /**\n   * Individuals such as physicians or family members with access to user measurements for all variables\n   * @member {Array.<module:model/AppSettings>} individuals\n   */\n  exports.prototype['individuals'] = undefined;\n  /**\n   * Studies with access to generally anonymous user measurements for a specific predictor and outcome variable\n   * @member {Array.<module:model/AppSettings>} studies\n   */\n  exports.prototype['studies'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./AppSettings\":23}],26:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Button = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Button model module.\n   * @module model/Button\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Button</code>.\n   * @alias module:model/Button\n   * @class\n   * @param link {String} Ex: https://local.quantimo.do\n   * @param text {String} Ex: Connect\n   */\n  var exports = function(link, text) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n    _this['link'] = link;\n\n\n\n    _this['text'] = text;\n\n  };\n\n  /**\n   * Constructs a <code>Button</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Button} obj Optional instance to populate.\n   * @return {module:model/Button} The populated <code>Button</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('action')) {\n        obj['action'] = ApiClient.convertToType(data['action'], Object);\n      }\n      if (data.hasOwnProperty('additionalInformation')) {\n        obj['additionalInformation'] = ApiClient.convertToType(data['additionalInformation'], 'String');\n      }\n      if (data.hasOwnProperty('color')) {\n        obj['color'] = ApiClient.convertToType(data['color'], 'String');\n      }\n      if (data.hasOwnProperty('confirmationText')) {\n        obj['confirmationText'] = ApiClient.convertToType(data['confirmationText'], 'String');\n      }\n      if (data.hasOwnProperty('functionName')) {\n        obj['functionName'] = ApiClient.convertToType(data['functionName'], 'String');\n      }\n      if (data.hasOwnProperty('functionParameters')) {\n        obj['functionParameters'] = ApiClient.convertToType(data['functionParameters'], Object);\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'String');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = ApiClient.convertToType(data['image'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('link')) {\n        obj['link'] = ApiClient.convertToType(data['link'], 'String');\n      }\n      if (data.hasOwnProperty('successToastText')) {\n        obj['successToastText'] = ApiClient.convertToType(data['successToastText'], 'String');\n      }\n      if (data.hasOwnProperty('successAlertTitle')) {\n        obj['successAlertTitle'] = ApiClient.convertToType(data['successAlertTitle'], 'String');\n      }\n      if (data.hasOwnProperty('successAlertBody')) {\n        obj['successAlertBody'] = ApiClient.convertToType(data['successAlertBody'], 'String');\n      }\n      if (data.hasOwnProperty('text')) {\n        obj['text'] = ApiClient.convertToType(data['text'], 'String');\n      }\n      if (data.hasOwnProperty('tooltip')) {\n        obj['tooltip'] = ApiClient.convertToType(data['tooltip'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Action data\n   * @member {Object} action\n   */\n  exports.prototype['action'] = undefined;\n  /**\n   * Ex: connect\n   * @member {String} additionalInformation\n   */\n  exports.prototype['additionalInformation'] = undefined;\n  /**\n   * Ex: #f2f2f2\n   * @member {String} color\n   */\n  exports.prototype['color'] = undefined;\n  /**\n   * Text to show user before executing functionName\n   * @member {String} confirmationText\n   */\n  exports.prototype['confirmationText'] = undefined;\n  /**\n   * Name of function to call\n   * @member {String} functionName\n   */\n  exports.prototype['functionName'] = undefined;\n  /**\n   * Data to provide to functionName\n   * @member {Object} functionParameters\n   */\n  exports.prototype['functionParameters'] = undefined;\n  /**\n   * HTML element id\n   * @member {String} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: https://image.jpg\n   * @member {String} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * Ex: ion-refresh\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * Ex: https://local.quantimo.do\n   * @member {String} link\n   */\n  exports.prototype['link'] = undefined;\n  /**\n   * Text to show user after executing functionName\n   * @member {String} successToastText\n   */\n  exports.prototype['successToastText'] = undefined;\n  /**\n   * Text to show user after executing functionName\n   * @member {String} successAlertTitle\n   */\n  exports.prototype['successAlertTitle'] = undefined;\n  /**\n   * Text to show user after executing functionName\n   * @member {String} successAlertBody\n   */\n  exports.prototype['successAlertBody'] = undefined;\n  /**\n   * Ex: Connect\n   * @member {String} text\n   */\n  exports.prototype['text'] = undefined;\n  /**\n   * Ex: This is a tooltip\n   * @member {String} tooltip\n   */\n  exports.prototype['tooltip'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],27:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button', 'model/InputField'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'), require('./InputField'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Card = factory(root.Quantimodo.ApiClient, root.Quantimodo.Button, root.Quantimodo.InputField);\n  }\n}(this, function(ApiClient, Button, InputField) {\n  'use strict';\n\n\n\n\n  /**\n   * The Card model module.\n   * @module model/Card\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Card</code>.\n   * @alias module:model/Card\n   * @class\n   * @param id {String} HTML element id\n   */\n  var exports = function(id) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n    _this['id'] = id;\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Card</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Card} obj Optional instance to populate.\n   * @return {module:model/Card} The populated <code>Card</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionSheetButtons')) {\n        obj['actionSheetButtons'] = ApiClient.convertToType(data['actionSheetButtons'], [Button]);\n      }\n      if (data.hasOwnProperty('avatar')) {\n        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');\n      }\n      if (data.hasOwnProperty('backgroundColor')) {\n        obj['backgroundColor'] = ApiClient.convertToType(data['backgroundColor'], 'String');\n      }\n      if (data.hasOwnProperty('buttons')) {\n        obj['buttons'] = ApiClient.convertToType(data['buttons'], [Button]);\n      }\n      if (data.hasOwnProperty('content')) {\n        obj['content'] = ApiClient.convertToType(data['content'], 'String');\n      }\n      if (data.hasOwnProperty('headerTitle')) {\n        obj['headerTitle'] = ApiClient.convertToType(data['headerTitle'], 'String');\n      }\n      if (data.hasOwnProperty('html')) {\n        obj['html'] = ApiClient.convertToType(data['html'], 'String');\n      }\n      if (data.hasOwnProperty('htmlContent')) {\n        obj['htmlContent'] = ApiClient.convertToType(data['htmlContent'], 'String');\n      }\n      if (data.hasOwnProperty('iconButtons')) {\n        obj['iconButtons'] = ApiClient.convertToType(data['iconButtons'], [Button]);\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'String');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = ApiClient.convertToType(data['image'], 'String');\n      }\n      if (data.hasOwnProperty('inputFields')) {\n        obj['inputFields'] = ApiClient.convertToType(data['inputFields'], [InputField]);\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('link')) {\n        obj['link'] = ApiClient.convertToType(data['link'], 'String');\n      }\n      if (data.hasOwnProperty('parameters')) {\n        obj['parameters'] = ApiClient.convertToType(data['parameters'], [InputField]);\n      }\n      if (data.hasOwnProperty('sharingBody')) {\n        obj['sharingBody'] = ApiClient.convertToType(data['sharingBody'], 'String');\n      }\n      if (data.hasOwnProperty('sharingButtons')) {\n        obj['sharingButtons'] = ApiClient.convertToType(data['sharingButtons'], [Button]);\n      }\n      if (data.hasOwnProperty('sharingTitle')) {\n        obj['sharingTitle'] = ApiClient.convertToType(data['sharingTitle'], 'String');\n      }\n      if (data.hasOwnProperty('subHeader')) {\n        obj['subHeader'] = ApiClient.convertToType(data['subHeader'], 'String');\n      }\n      if (data.hasOwnProperty('subTitle')) {\n        obj['subTitle'] = ApiClient.convertToType(data['subTitle'], 'String');\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Button>} actionSheetButtons\n   */\n  exports.prototype['actionSheetButtons'] = undefined;\n  /**\n   * Smaller square image\n   * @member {String} avatar\n   */\n  exports.prototype['avatar'] = undefined;\n  /**\n   * Ex: #f2f2f2\n   * @member {String} backgroundColor\n   */\n  exports.prototype['backgroundColor'] = undefined;\n  /**\n   * @member {Array.<module:model/Button>} buttons\n   */\n  exports.prototype['buttons'] = undefined;\n  /**\n   * Ex: Content\n   * @member {String} content\n   */\n  exports.prototype['content'] = undefined;\n  /**\n   * Ex: Title\n   * @member {String} headerTitle\n   */\n  exports.prototype['headerTitle'] = undefined;\n  /**\n   * HTML for the entire card.\n   * @member {String} html\n   */\n  exports.prototype['html'] = undefined;\n  /**\n   * Ex: <div>Content</div>\n   * @member {String} htmlContent\n   */\n  exports.prototype['htmlContent'] = undefined;\n  /**\n   * @member {Array.<module:model/Button>} iconButtons\n   */\n  exports.prototype['iconButtons'] = undefined;\n  /**\n   * HTML element id\n   * @member {String} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Larger image of variable dimensions\n   * @member {String} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * @member {Array.<module:model/InputField>} inputFields\n   */\n  exports.prototype['inputFields'] = undefined;\n  /**\n   * Ex: ion-refresh\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * A link to a web page or something. Not much more to say about that.\n   * @member {String} link\n   */\n  exports.prototype['link'] = undefined;\n  /**\n   * @member {Array.<module:model/InputField>} parameters\n   */\n  exports.prototype['parameters'] = undefined;\n  /**\n   * Ex: sharingBody\n   * @member {String} sharingBody\n   */\n  exports.prototype['sharingBody'] = undefined;\n  /**\n   * @member {Array.<module:model/Button>} sharingButtons\n   */\n  exports.prototype['sharingButtons'] = undefined;\n  /**\n   * Ex: sharingTitle\n   * @member {String} sharingTitle\n   */\n  exports.prototype['sharingTitle'] = undefined;\n  /**\n   * Ex: subTitle\n   * @member {String} subHeader\n   */\n  exports.prototype['subHeader'] = undefined;\n  /**\n   * Ex: subTitle\n   * @member {String} subTitle\n   */\n  exports.prototype['subTitle'] = undefined;\n  /**\n   * Ex: Title\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Button\":26,\"./InputField\":44}],28:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Chart = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Chart model module.\n   * @module model/Chart\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Chart</code>.\n   * @alias module:model/Chart\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Chart</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Chart} obj Optional instance to populate.\n   * @return {module:model/Chart} The populated <code>Chart</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('highchartConfig')) {\n        obj['highchartConfig'] = ApiClient.convertToType(data['highchartConfig'], Object);\n      }\n      if (data.hasOwnProperty('chartId')) {\n        obj['chartId'] = ApiClient.convertToType(data['chartId'], 'String');\n      }\n      if (data.hasOwnProperty('chartTitle')) {\n        obj['chartTitle'] = ApiClient.convertToType(data['chartTitle'], 'String');\n      }\n      if (data.hasOwnProperty('explanation')) {\n        obj['explanation'] = ApiClient.convertToType(data['explanation'], 'String');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('svg')) {\n        obj['svg'] = ApiClient.convertToType(data['svg'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   *  Highcharts config that can be used if you have highcharts.js included on the page\n   * @member {Object} highchartConfig\n   */\n  exports.prototype['highchartConfig'] = undefined;\n  /**\n   * Ex: correlationScatterPlot\n   * @member {String} chartId\n   */\n  exports.prototype['chartId'] = undefined;\n  /**\n   * Ex: Overall Mood following Sleep Duration (R = -0.173)\n   * @member {String} chartTitle\n   */\n  exports.prototype['chartTitle'] = undefined;\n  /**\n   * Ex: The chart above indicates that an increase in Sleep Duration is usually followed by an decrease in Overall Mood.\n   * @member {String} explanation\n   */\n  exports.prototype['explanation'] = undefined;\n  /**\n   * Url to a static svg of the chart\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * SVG string than can be embedded directly in HTML\n   * @member {String} svg\n   */\n  exports.prototype['svg'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],29:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.CommonResponse = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The CommonResponse model module.\n   * @module model/CommonResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>CommonResponse</code>.\n   * @alias module:model/CommonResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n  };\n\n  /**\n   * Constructs a <code>CommonResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/CommonResponse} obj Optional instance to populate.\n   * @return {module:model/CommonResponse} The populated <code>CommonResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],30:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ConnectInstructions = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ConnectInstructions model module.\n   * @module model/ConnectInstructions\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>ConnectInstructions</code>.\n   * @alias module:model/ConnectInstructions\n   * @class\n   * @param url {String} URL to open to connect\n   */\n  var exports = function(url) {\n    var _this = this;\n\n\n    _this['url'] = url;\n\n  };\n\n  /**\n   * Constructs a <code>ConnectInstructions</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ConnectInstructions} obj Optional instance to populate.\n   * @return {module:model/ConnectInstructions} The populated <code>ConnectInstructions</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('parameters')) {\n        obj['parameters'] = ApiClient.convertToType(data['parameters'], [Object]);\n      }\n      if (data.hasOwnProperty('url')) {\n        obj['url'] = ApiClient.convertToType(data['url'], 'String');\n      }\n      if (data.hasOwnProperty('usePopup')) {\n        obj['usePopup'] = ApiClient.convertToType(data['usePopup'], 'Boolean');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Create a form with these fields and post the key and user submitted value to the provided connect url\n   * @member {Array.<Object>} parameters\n   */\n  exports.prototype['parameters'] = undefined;\n  /**\n   * URL to open to connect\n   * @member {String} url\n   */\n  exports.prototype['url'] = undefined;\n  /**\n   * True if should open auth window in popup\n   * @member {Boolean} usePopup\n   */\n  exports.prototype['usePopup'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],31:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ConversionStep = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ConversionStep model module.\n   * @module model/ConversionStep\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>ConversionStep</code>.\n   * @alias module:model/ConversionStep\n   * @class\n   * @param operation {module:model/ConversionStep.OperationEnum} ADD or MULTIPLY\n   * @param value {Number} This specifies the order of conversion steps starting with 0\n   */\n  var exports = function(operation, value) {\n    var _this = this;\n\n    _this['operation'] = operation;\n    _this['value'] = value;\n  };\n\n  /**\n   * Constructs a <code>ConversionStep</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ConversionStep} obj Optional instance to populate.\n   * @return {module:model/ConversionStep} The populated <code>ConversionStep</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('operation')) {\n        obj['operation'] = ApiClient.convertToType(data['operation'], 'String');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * ADD or MULTIPLY\n   * @member {module:model/ConversionStep.OperationEnum} operation\n   */\n  exports.prototype['operation'] = undefined;\n  /**\n   * This specifies the order of conversion steps starting with 0\n   * @member {Number} value\n   */\n  exports.prototype['value'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>operation</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.OperationEnum = {\n    /**\n     * value: \"ADD\"\n     * @const\n     */\n    \"ADD\": \"ADD\",\n    /**\n     * value: \"MULTIPLY\"\n     * @const\n     */\n    \"MULTIPLY\": \"MULTIPLY\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],32:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/DataSource', 'model/StudyHtml', 'model/StudyImages', 'model/StudyLinks', 'model/StudyText'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./DataSource'), require('./StudyHtml'), require('./StudyImages'), require('./StudyLinks'), require('./StudyText'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Correlation = factory(root.Quantimodo.ApiClient, root.Quantimodo.DataSource, root.Quantimodo.StudyHtml, root.Quantimodo.StudyImages, root.Quantimodo.StudyLinks, root.Quantimodo.StudyText);\n  }\n}(this, function(ApiClient, DataSource, StudyHtml, StudyImages, StudyLinks, StudyText) {\n  'use strict';\n\n\n\n\n  /**\n   * The Correlation model module.\n   * @module model/Correlation\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Correlation</code>.\n   * @alias module:model/Correlation\n   * @class\n   * @param averageDailyHighCause {Number} Ex: 4.19\n   * @param averageDailyLowCause {Number} Ex: 1.97\n   * @param averageEffect {Number} Ex: 3.0791054117396\n   * @param averageEffectFollowingHighCause {Number} Ex: 3.55\n   * @param averageEffectFollowingLowCause {Number} Ex: 2.65\n   * @param averageForwardPearsonCorrelationOverOnsetDelays {Number} Ex: 0.396\n   * @param averageReversePearsonCorrelationOverOnsetDelays {Number} Ex: 0.453667\n   * @param averageVote {Number} Ex: 0.9855\n   * @param causeChanges {Number} Ex: 164\n   * @param causeUserVariableShareUserMeasurements {Number} Ex: 1\n   * @param causeVariableName {String} Ex: Sleep Quality\n   * @param confidenceInterval {Number} Ex: 0.14344467795996\n   * @param confidenceLevel {String} Ex: high\n   * @param correlationCoefficient {Number} Ex: 0.538\n   * @param createdAt {String} Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @param criticalTValue {Number} Ex: 1.646\n   * @param direction {String} Ex: higher\n   * @param durationOfAction {Number} Ex: 604800\n   * @param durationOfActionInHours {Number} Ex: 168\n   * @param effectChanges {Number} Ex: 193\n   * @param effectSize {String} Ex: moderately positive\n   * @param effectUnit {String} Ex: /5\n   * @param effectVariableName {String} Ex: Overall Mood\n   * @param experimentEndTime {String} Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @param experimentStartTime {String} Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @param forwardSpearmanCorrelationCoefficient {Number} Ex: 0.528359\n   * @param numberOfPairs {Number} Ex: 298\n   * @param onsetDelay {Number} Ex: 0\n   * @param onsetDelayInHours {Number} Ex: 0\n   * @param onsetDelayWithStrongestPearsonCorrelation {Number} Ex: -86400\n   * @param onsetDelayWithStrongestPearsonCorrelationInHours {Number} Ex: -24\n   * @param optimalPearsonProduct {Number} Ex: 0.68582816186982\n   * @param outcomeFillingValue {Number} Ex: -1\n   * @param pearsonCorrelationWithNoOnsetDelay {Number} Ex: 0.477\n   * @param predictivePearsonCorrelation {Number} Ex: 0.538\n   * @param predictivePearsonCorrelationCoefficient {Number} Ex: 0.538\n   * @param predictorDataSources {String} Ex: RescueTime\n   * @param predictorFillingValue {Number} Ex: -1\n   * @param predictorMaximumAllowedValue {Number} Ex: 200\n   * @param predictorMinimumAllowedValue {Number} Ex: 30\n   * @param predictsHighEffectChange {Number} Ex: 17\n   * @param predictsLowEffectChange {Number} Ex: -11\n   * @param qmScore {Number} Ex: 0.528\n   * @param reversePearsonCorrelationCoefficient {Number} Ex: 0.01377184270977\n   * @param shareUserMeasurements {Boolean} Would you like to make this study publicly visible?\n   * @param significantDifference {Boolean} Ex: 1\n   * @param statisticalSignificance {Number} Ex: 0.9813\n   * @param strengthLevel {String} Ex: moderate\n   * @param strongestPearsonCorrelationCoefficient {Number} Ex: 0.613\n   * @param tValue {Number} Ex: 9.6986079652717\n   * @param updatedAt {String} Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @param userId {Number} Ex: 230\n   * @param userVote {Number} Ex: 1\n   * @param valuePredictingHighOutcome {Number} Ex: 4.14\n   * @param valuePredictingLowOutcome {Number} Ex: 3.03\n   */\n  var exports = function(averageDailyHighCause, averageDailyLowCause, averageEffect, averageEffectFollowingHighCause, averageEffectFollowingLowCause, averageForwardPearsonCorrelationOverOnsetDelays, averageReversePearsonCorrelationOverOnsetDelays, averageVote, causeChanges, causeUserVariableShareUserMeasurements, causeVariableName, confidenceInterval, confidenceLevel, correlationCoefficient, createdAt, criticalTValue, direction, durationOfAction, durationOfActionInHours, effectChanges, effectSize, effectUnit, effectVariableName, experimentEndTime, experimentStartTime, forwardSpearmanCorrelationCoefficient, numberOfPairs, onsetDelay, onsetDelayInHours, onsetDelayWithStrongestPearsonCorrelation, onsetDelayWithStrongestPearsonCorrelationInHours, optimalPearsonProduct, outcomeFillingValue, pearsonCorrelationWithNoOnsetDelay, predictivePearsonCorrelation, predictivePearsonCorrelationCoefficient, predictorDataSources, predictorFillingValue, predictorMaximumAllowedValue, predictorMinimumAllowedValue, predictsHighEffectChange, predictsLowEffectChange, qmScore, reversePearsonCorrelationCoefficient, shareUserMeasurements, significantDifference, statisticalSignificance, strengthLevel, strongestPearsonCorrelationCoefficient, tValue, updatedAt, userId, userVote, valuePredictingHighOutcome, valuePredictingLowOutcome) {\n    var _this = this;\n\n    _this['averageDailyHighCause'] = averageDailyHighCause;\n    _this['averageDailyLowCause'] = averageDailyLowCause;\n    _this['averageEffect'] = averageEffect;\n    _this['averageEffectFollowingHighCause'] = averageEffectFollowingHighCause;\n    _this['averageEffectFollowingLowCause'] = averageEffectFollowingLowCause;\n    _this['averageForwardPearsonCorrelationOverOnsetDelays'] = averageForwardPearsonCorrelationOverOnsetDelays;\n    _this['averageReversePearsonCorrelationOverOnsetDelays'] = averageReversePearsonCorrelationOverOnsetDelays;\n    _this['averageVote'] = averageVote;\n    _this['causeChanges'] = causeChanges;\n\n    _this['causeUserVariableShareUserMeasurements'] = causeUserVariableShareUserMeasurements;\n\n\n\n\n\n\n    _this['causeVariableName'] = causeVariableName;\n    _this['confidenceInterval'] = confidenceInterval;\n    _this['confidenceLevel'] = confidenceLevel;\n    _this['correlationCoefficient'] = correlationCoefficient;\n\n    _this['createdAt'] = createdAt;\n    _this['criticalTValue'] = criticalTValue;\n    _this['direction'] = direction;\n    _this['durationOfAction'] = durationOfAction;\n    _this['durationOfActionInHours'] = durationOfActionInHours;\n\n\n\n    _this['effectChanges'] = effectChanges;\n\n    _this['effectSize'] = effectSize;\n    _this['effectUnit'] = effectUnit;\n\n\n\n\n\n\n\n\n\n\n    _this['effectVariableName'] = effectVariableName;\n    _this['experimentEndTime'] = experimentEndTime;\n    _this['experimentStartTime'] = experimentStartTime;\n    _this['forwardSpearmanCorrelationCoefficient'] = forwardSpearmanCorrelationCoefficient;\n    _this['numberOfPairs'] = numberOfPairs;\n    _this['onsetDelay'] = onsetDelay;\n    _this['onsetDelayInHours'] = onsetDelayInHours;\n    _this['onsetDelayWithStrongestPearsonCorrelation'] = onsetDelayWithStrongestPearsonCorrelation;\n    _this['onsetDelayWithStrongestPearsonCorrelationInHours'] = onsetDelayWithStrongestPearsonCorrelationInHours;\n    _this['optimalPearsonProduct'] = optimalPearsonProduct;\n    _this['outcomeFillingValue'] = outcomeFillingValue;\n\n\n    _this['pearsonCorrelationWithNoOnsetDelay'] = pearsonCorrelationWithNoOnsetDelay;\n    _this['predictivePearsonCorrelation'] = predictivePearsonCorrelation;\n    _this['predictivePearsonCorrelationCoefficient'] = predictivePearsonCorrelationCoefficient;\n    _this['predictorDataSources'] = predictorDataSources;\n    _this['predictorFillingValue'] = predictorFillingValue;\n    _this['predictorMaximumAllowedValue'] = predictorMaximumAllowedValue;\n    _this['predictorMinimumAllowedValue'] = predictorMinimumAllowedValue;\n    _this['predictsHighEffectChange'] = predictsHighEffectChange;\n    _this['predictsLowEffectChange'] = predictsLowEffectChange;\n\n    _this['qmScore'] = qmScore;\n    _this['reversePearsonCorrelationCoefficient'] = reversePearsonCorrelationCoefficient;\n    _this['shareUserMeasurements'] = shareUserMeasurements;\n\n\n    _this['significantDifference'] = significantDifference;\n    _this['statisticalSignificance'] = statisticalSignificance;\n    _this['strengthLevel'] = strengthLevel;\n    _this['strongestPearsonCorrelationCoefficient'] = strongestPearsonCorrelationCoefficient;\n\n\n\n\n    _this['tValue'] = tValue;\n    _this['updatedAt'] = updatedAt;\n    _this['userId'] = userId;\n    _this['userVote'] = userVote;\n    _this['valuePredictingHighOutcome'] = valuePredictingHighOutcome;\n    _this['valuePredictingLowOutcome'] = valuePredictingLowOutcome;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Correlation</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Correlation} obj Optional instance to populate.\n   * @return {module:model/Correlation} The populated <code>Correlation</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('averageDailyHighCause')) {\n        obj['averageDailyHighCause'] = ApiClient.convertToType(data['averageDailyHighCause'], 'Number');\n      }\n      if (data.hasOwnProperty('averageDailyLowCause')) {\n        obj['averageDailyLowCause'] = ApiClient.convertToType(data['averageDailyLowCause'], 'Number');\n      }\n      if (data.hasOwnProperty('averageEffect')) {\n        obj['averageEffect'] = ApiClient.convertToType(data['averageEffect'], 'Number');\n      }\n      if (data.hasOwnProperty('averageEffectFollowingHighCause')) {\n        obj['averageEffectFollowingHighCause'] = ApiClient.convertToType(data['averageEffectFollowingHighCause'], 'Number');\n      }\n      if (data.hasOwnProperty('averageEffectFollowingLowCause')) {\n        obj['averageEffectFollowingLowCause'] = ApiClient.convertToType(data['averageEffectFollowingLowCause'], 'Number');\n      }\n      if (data.hasOwnProperty('averageForwardPearsonCorrelationOverOnsetDelays')) {\n        obj['averageForwardPearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageForwardPearsonCorrelationOverOnsetDelays'], 'Number');\n      }\n      if (data.hasOwnProperty('averageReversePearsonCorrelationOverOnsetDelays')) {\n        obj['averageReversePearsonCorrelationOverOnsetDelays'] = ApiClient.convertToType(data['averageReversePearsonCorrelationOverOnsetDelays'], 'Number');\n      }\n      if (data.hasOwnProperty('averageVote')) {\n        obj['averageVote'] = ApiClient.convertToType(data['averageVote'], 'Number');\n      }\n      if (data.hasOwnProperty('causeChanges')) {\n        obj['causeChanges'] = ApiClient.convertToType(data['causeChanges'], 'Number');\n      }\n      if (data.hasOwnProperty('causeDataSource')) {\n        obj['causeDataSource'] = DataSource.constructFromObject(data['causeDataSource']);\n      }\n      if (data.hasOwnProperty('causeUserVariableShareUserMeasurements')) {\n        obj['causeUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['causeUserVariableShareUserMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('causeVariableCategoryId')) {\n        obj['causeVariableCategoryId'] = ApiClient.convertToType(data['causeVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('causeVariableCategoryName')) {\n        obj['causeVariableCategoryName'] = ApiClient.convertToType(data['causeVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('causeVariableCombinationOperation')) {\n        obj['causeVariableCombinationOperation'] = ApiClient.convertToType(data['causeVariableCombinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('causeVariableUnitAbbreviatedName')) {\n        obj['causeVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('causeVariableId')) {\n        obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');\n      }\n      if (data.hasOwnProperty('causeVariableMostCommonConnectorId')) {\n        obj['causeVariableMostCommonConnectorId'] = ApiClient.convertToType(data['causeVariableMostCommonConnectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('causeVariableName')) {\n        obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('confidenceInterval')) {\n        obj['confidenceInterval'] = ApiClient.convertToType(data['confidenceInterval'], 'Number');\n      }\n      if (data.hasOwnProperty('confidenceLevel')) {\n        obj['confidenceLevel'] = ApiClient.convertToType(data['confidenceLevel'], 'String');\n      }\n      if (data.hasOwnProperty('correlationCoefficient')) {\n        obj['correlationCoefficient'] = ApiClient.convertToType(data['correlationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('correlationIsContradictoryToOptimalValues')) {\n        obj['correlationIsContradictoryToOptimalValues'] = ApiClient.convertToType(data['correlationIsContradictoryToOptimalValues'], 'Boolean');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('criticalTValue')) {\n        obj['criticalTValue'] = ApiClient.convertToType(data['criticalTValue'], 'Number');\n      }\n      if (data.hasOwnProperty('direction')) {\n        obj['direction'] = ApiClient.convertToType(data['direction'], 'String');\n      }\n      if (data.hasOwnProperty('durationOfAction')) {\n        obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');\n      }\n      if (data.hasOwnProperty('durationOfActionInHours')) {\n        obj['durationOfActionInHours'] = ApiClient.convertToType(data['durationOfActionInHours'], 'Number');\n      }\n      if (data.hasOwnProperty('degreesOfFreedom')) {\n        obj['degreesOfFreedom'] = ApiClient.convertToType(data['degreesOfFreedom'], 'Number');\n      }\n      if (data.hasOwnProperty('effectNumberOfProcessedDailyMeasurements')) {\n        obj['effectNumberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['effectNumberOfProcessedDailyMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('error')) {\n        obj['error'] = ApiClient.convertToType(data['error'], 'String');\n      }\n      if (data.hasOwnProperty('effectChanges')) {\n        obj['effectChanges'] = ApiClient.convertToType(data['effectChanges'], 'Number');\n      }\n      if (data.hasOwnProperty('effectDataSource')) {\n        obj['effectDataSource'] = DataSource.constructFromObject(data['effectDataSource']);\n      }\n      if (data.hasOwnProperty('effectSize')) {\n        obj['effectSize'] = ApiClient.convertToType(data['effectSize'], 'String');\n      }\n      if (data.hasOwnProperty('effectUnit')) {\n        obj['effectUnit'] = ApiClient.convertToType(data['effectUnit'], 'String');\n      }\n      if (data.hasOwnProperty('effectUserVariableShareUserMeasurements')) {\n        obj['effectUserVariableShareUserMeasurements'] = ApiClient.convertToType(data['effectUserVariableShareUserMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableCategoryId')) {\n        obj['effectVariableCategoryId'] = ApiClient.convertToType(data['effectVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableCategoryName')) {\n        obj['effectVariableCategoryName'] = ApiClient.convertToType(data['effectVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableCombinationOperation')) {\n        obj['effectVariableCombinationOperation'] = ApiClient.convertToType(data['effectVariableCombinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableCommonAlias')) {\n        obj['effectVariableCommonAlias'] = ApiClient.convertToType(data['effectVariableCommonAlias'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableUnitAbbreviatedName')) {\n        obj['effectVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableUnitId')) {\n        obj['effectVariableUnitId'] = ApiClient.convertToType(data['effectVariableUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableUnitName')) {\n        obj['effectVariableUnitName'] = ApiClient.convertToType(data['effectVariableUnitName'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableId')) {\n        obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableMostCommonConnectorId')) {\n        obj['effectVariableMostCommonConnectorId'] = ApiClient.convertToType(data['effectVariableMostCommonConnectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableName')) {\n        obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('experimentEndTime')) {\n        obj['experimentEndTime'] = ApiClient.convertToType(data['experimentEndTime'], 'String');\n      }\n      if (data.hasOwnProperty('experimentStartTime')) {\n        obj['experimentStartTime'] = ApiClient.convertToType(data['experimentStartTime'], 'String');\n      }\n      if (data.hasOwnProperty('forwardSpearmanCorrelationCoefficient')) {\n        obj['forwardSpearmanCorrelationCoefficient'] = ApiClient.convertToType(data['forwardSpearmanCorrelationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfPairs')) {\n        obj['numberOfPairs'] = ApiClient.convertToType(data['numberOfPairs'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelay')) {\n        obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelayInHours')) {\n        obj['onsetDelayInHours'] = ApiClient.convertToType(data['onsetDelayInHours'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelation')) {\n        obj['onsetDelayWithStrongestPearsonCorrelation'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelation'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelayWithStrongestPearsonCorrelationInHours')) {\n        obj['onsetDelayWithStrongestPearsonCorrelationInHours'] = ApiClient.convertToType(data['onsetDelayWithStrongestPearsonCorrelationInHours'], 'Number');\n      }\n      if (data.hasOwnProperty('optimalPearsonProduct')) {\n        obj['optimalPearsonProduct'] = ApiClient.convertToType(data['optimalPearsonProduct'], 'Number');\n      }\n      if (data.hasOwnProperty('outcomeFillingValue')) {\n        obj['outcomeFillingValue'] = ApiClient.convertToType(data['outcomeFillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('outcomeMaximumAllowedValue')) {\n        obj['outcomeMaximumAllowedValue'] = ApiClient.convertToType(data['outcomeMaximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('outcomeMinimumAllowedValue')) {\n        obj['outcomeMinimumAllowedValue'] = ApiClient.convertToType(data['outcomeMinimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('pearsonCorrelationWithNoOnsetDelay')) {\n        obj['pearsonCorrelationWithNoOnsetDelay'] = ApiClient.convertToType(data['pearsonCorrelationWithNoOnsetDelay'], 'Number');\n      }\n      if (data.hasOwnProperty('predictivePearsonCorrelation')) {\n        obj['predictivePearsonCorrelation'] = ApiClient.convertToType(data['predictivePearsonCorrelation'], 'Number');\n      }\n      if (data.hasOwnProperty('predictivePearsonCorrelationCoefficient')) {\n        obj['predictivePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['predictivePearsonCorrelationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('predictorDataSources')) {\n        obj['predictorDataSources'] = ApiClient.convertToType(data['predictorDataSources'], 'String');\n      }\n      if (data.hasOwnProperty('predictorFillingValue')) {\n        obj['predictorFillingValue'] = ApiClient.convertToType(data['predictorFillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('predictorMaximumAllowedValue')) {\n        obj['predictorMaximumAllowedValue'] = ApiClient.convertToType(data['predictorMaximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('predictorMinimumAllowedValue')) {\n        obj['predictorMinimumAllowedValue'] = ApiClient.convertToType(data['predictorMinimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('predictsHighEffectChange')) {\n        obj['predictsHighEffectChange'] = ApiClient.convertToType(data['predictsHighEffectChange'], 'Number');\n      }\n      if (data.hasOwnProperty('predictsLowEffectChange')) {\n        obj['predictsLowEffectChange'] = ApiClient.convertToType(data['predictsLowEffectChange'], 'Number');\n      }\n      if (data.hasOwnProperty('pValue')) {\n        obj['pValue'] = ApiClient.convertToType(data['pValue'], 'Number');\n      }\n      if (data.hasOwnProperty('qmScore')) {\n        obj['qmScore'] = ApiClient.convertToType(data['qmScore'], 'Number');\n      }\n      if (data.hasOwnProperty('reversePearsonCorrelationCoefficient')) {\n        obj['reversePearsonCorrelationCoefficient'] = ApiClient.convertToType(data['reversePearsonCorrelationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('shareUserMeasurements')) {\n        obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');\n      }\n      if (data.hasOwnProperty('sharingDescription')) {\n        obj['sharingDescription'] = ApiClient.convertToType(data['sharingDescription'], 'String');\n      }\n      if (data.hasOwnProperty('sharingTitle')) {\n        obj['sharingTitle'] = ApiClient.convertToType(data['sharingTitle'], 'String');\n      }\n      if (data.hasOwnProperty('significantDifference')) {\n        obj['significantDifference'] = ApiClient.convertToType(data['significantDifference'], 'Boolean');\n      }\n      if (data.hasOwnProperty('statisticalSignificance')) {\n        obj['statisticalSignificance'] = ApiClient.convertToType(data['statisticalSignificance'], 'Number');\n      }\n      if (data.hasOwnProperty('strengthLevel')) {\n        obj['strengthLevel'] = ApiClient.convertToType(data['strengthLevel'], 'String');\n      }\n      if (data.hasOwnProperty('strongestPearsonCorrelationCoefficient')) {\n        obj['strongestPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['strongestPearsonCorrelationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('studyHtml')) {\n        obj['studyHtml'] = StudyHtml.constructFromObject(data['studyHtml']);\n      }\n      if (data.hasOwnProperty('studyImages')) {\n        obj['studyImages'] = StudyImages.constructFromObject(data['studyImages']);\n      }\n      if (data.hasOwnProperty('studyLinks')) {\n        obj['studyLinks'] = StudyLinks.constructFromObject(data['studyLinks']);\n      }\n      if (data.hasOwnProperty('studyText')) {\n        obj['studyText'] = StudyText.constructFromObject(data['studyText']);\n      }\n      if (data.hasOwnProperty('tValue')) {\n        obj['tValue'] = ApiClient.convertToType(data['tValue'], 'Number');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVote')) {\n        obj['userVote'] = ApiClient.convertToType(data['userVote'], 'Number');\n      }\n      if (data.hasOwnProperty('valuePredictingHighOutcome')) {\n        obj['valuePredictingHighOutcome'] = ApiClient.convertToType(data['valuePredictingHighOutcome'], 'Number');\n      }\n      if (data.hasOwnProperty('valuePredictingLowOutcome')) {\n        obj['valuePredictingLowOutcome'] = ApiClient.convertToType(data['valuePredictingLowOutcome'], 'Number');\n      }\n      if (data.hasOwnProperty('outcomeDataSources')) {\n        obj['outcomeDataSources'] = ApiClient.convertToType(data['outcomeDataSources'], 'String');\n      }\n      if (data.hasOwnProperty('principalInvestigator')) {\n        obj['principalInvestigator'] = ApiClient.convertToType(data['principalInvestigator'], 'String');\n      }\n      if (data.hasOwnProperty('reverseCorrelation')) {\n        obj['reverseCorrelation'] = ApiClient.convertToType(data['reverseCorrelation'], 'Number');\n      }\n      if (data.hasOwnProperty('averagePearsonCorrelationCoefficientOverOnsetDelays')) {\n        obj['averagePearsonCorrelationCoefficientOverOnsetDelays'] = ApiClient.convertToType(data['averagePearsonCorrelationCoefficientOverOnsetDelays'], 'String');\n      }\n      if (data.hasOwnProperty('causeNumberOfRawMeasurements')) {\n        obj['causeNumberOfRawMeasurements'] = ApiClient.convertToType(data['causeNumberOfRawMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('correlationsOverDurationsOfAction')) {\n        obj['correlationsOverDurationsOfAction'] = ApiClient.convertToType(data['correlationsOverDurationsOfAction'], 'String');\n      }\n      if (data.hasOwnProperty('correlationsOverDurationsOfActionChartConfig')) {\n        obj['correlationsOverDurationsOfActionChartConfig'] = ApiClient.convertToType(data['correlationsOverDurationsOfActionChartConfig'], 'String');\n      }\n      if (data.hasOwnProperty('correlationsOverOnsetDelaysChartConfig')) {\n        obj['correlationsOverOnsetDelaysChartConfig'] = ApiClient.convertToType(data['correlationsOverOnsetDelaysChartConfig'], 'String');\n      }\n      if (data.hasOwnProperty('numberOfUsers')) {\n        obj['numberOfUsers'] = ApiClient.convertToType(data['numberOfUsers'], 'Number');\n      }\n      if (data.hasOwnProperty('rawCauseMeasurementSignificance')) {\n        obj['rawCauseMeasurementSignificance'] = ApiClient.convertToType(data['rawCauseMeasurementSignificance'], 'Number');\n      }\n      if (data.hasOwnProperty('rawEffectMeasurementSignificance')) {\n        obj['rawEffectMeasurementSignificance'] = ApiClient.convertToType(data['rawEffectMeasurementSignificance'], 'Number');\n      }\n      if (data.hasOwnProperty('reversePairsCount')) {\n        obj['reversePairsCount'] = ApiClient.convertToType(data['reversePairsCount'], 'String');\n      }\n      if (data.hasOwnProperty('voteStatisticalSignificance')) {\n        obj['voteStatisticalSignificance'] = ApiClient.convertToType(data['voteStatisticalSignificance'], 'Number');\n      }\n      if (data.hasOwnProperty('aggregateQMScore')) {\n        obj['aggregateQMScore'] = ApiClient.convertToType(data['aggregateQMScore'], 'Number');\n      }\n      if (data.hasOwnProperty('forwardPearsonCorrelationCoefficient')) {\n        obj['forwardPearsonCorrelationCoefficient'] = ApiClient.convertToType(data['forwardPearsonCorrelationCoefficient'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfCorrelations')) {\n        obj['numberOfCorrelations'] = ApiClient.convertToType(data['numberOfCorrelations'], 'Number');\n      }\n      if (data.hasOwnProperty('vote')) {\n        obj['vote'] = ApiClient.convertToType(data['vote'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: 4.19\n   * @member {Number} averageDailyHighCause\n   */\n  exports.prototype['averageDailyHighCause'] = undefined;\n  /**\n   * Ex: 1.97\n   * @member {Number} averageDailyLowCause\n   */\n  exports.prototype['averageDailyLowCause'] = undefined;\n  /**\n   * Ex: 3.0791054117396\n   * @member {Number} averageEffect\n   */\n  exports.prototype['averageEffect'] = undefined;\n  /**\n   * Ex: 3.55\n   * @member {Number} averageEffectFollowingHighCause\n   */\n  exports.prototype['averageEffectFollowingHighCause'] = undefined;\n  /**\n   * Ex: 2.65\n   * @member {Number} averageEffectFollowingLowCause\n   */\n  exports.prototype['averageEffectFollowingLowCause'] = undefined;\n  /**\n   * Ex: 0.396\n   * @member {Number} averageForwardPearsonCorrelationOverOnsetDelays\n   */\n  exports.prototype['averageForwardPearsonCorrelationOverOnsetDelays'] = undefined;\n  /**\n   * Ex: 0.453667\n   * @member {Number} averageReversePearsonCorrelationOverOnsetDelays\n   */\n  exports.prototype['averageReversePearsonCorrelationOverOnsetDelays'] = undefined;\n  /**\n   * Ex: 0.9855\n   * @member {Number} averageVote\n   */\n  exports.prototype['averageVote'] = undefined;\n  /**\n   * Ex: 164\n   * @member {Number} causeChanges\n   */\n  exports.prototype['causeChanges'] = undefined;\n  /**\n   * @member {module:model/DataSource} causeDataSource\n   */\n  exports.prototype['causeDataSource'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} causeUserVariableShareUserMeasurements\n   */\n  exports.prototype['causeUserVariableShareUserMeasurements'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} causeVariableCategoryId\n   */\n  exports.prototype['causeVariableCategoryId'] = undefined;\n  /**\n   * Ex: Sleep\n   * @member {String} causeVariableCategoryName\n   */\n  exports.prototype['causeVariableCategoryName'] = undefined;\n  /**\n   * Ex: MEAN\n   * @member {String} causeVariableCombinationOperation\n   */\n  exports.prototype['causeVariableCombinationOperation'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} causeVariableUnitAbbreviatedName\n   */\n  exports.prototype['causeVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 1448\n   * @member {Number} causeVariableId\n   */\n  exports.prototype['causeVariableId'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} causeVariableMostCommonConnectorId\n   */\n  exports.prototype['causeVariableMostCommonConnectorId'] = undefined;\n  /**\n   * Ex: Sleep Quality\n   * @member {String} causeVariableName\n   */\n  exports.prototype['causeVariableName'] = undefined;\n  /**\n   * Ex: 0.14344467795996\n   * @member {Number} confidenceInterval\n   */\n  exports.prototype['confidenceInterval'] = undefined;\n  /**\n   * Ex: high\n   * @member {String} confidenceLevel\n   */\n  exports.prototype['confidenceLevel'] = undefined;\n  /**\n   * Ex: 0.538\n   * @member {Number} correlationCoefficient\n   */\n  exports.prototype['correlationCoefficient'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} correlationIsContradictoryToOptimalValues\n   */\n  exports.prototype['correlationIsContradictoryToOptimalValues'] = undefined;\n  /**\n   * Ex: 2016-12-28 20:47:30 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Ex: 1.646\n   * @member {Number} criticalTValue\n   */\n  exports.prototype['criticalTValue'] = undefined;\n  /**\n   * Ex: higher\n   * @member {String} direction\n   */\n  exports.prototype['direction'] = undefined;\n  /**\n   * Ex: 604800\n   * @member {Number} durationOfAction\n   */\n  exports.prototype['durationOfAction'] = undefined;\n  /**\n   * Ex: 168\n   * @member {Number} durationOfActionInHours\n   */\n  exports.prototype['durationOfActionInHours'] = undefined;\n  /**\n   * Ex: 200\n   * @member {Number} degreesOfFreedom\n   */\n  exports.prototype['degreesOfFreedom'] = undefined;\n  /**\n   * Ex: 145\n   * @member {Number} effectNumberOfProcessedDailyMeasurements\n   */\n  exports.prototype['effectNumberOfProcessedDailyMeasurements'] = undefined;\n  /**\n   * Ex: optimalPearsonProduct is not defined\n   * @member {String} error\n   */\n  exports.prototype['error'] = undefined;\n  /**\n   * Ex: 193\n   * @member {Number} effectChanges\n   */\n  exports.prototype['effectChanges'] = undefined;\n  /**\n   * @member {module:model/DataSource} effectDataSource\n   */\n  exports.prototype['effectDataSource'] = undefined;\n  /**\n   * Ex: moderately positive\n   * @member {String} effectSize\n   */\n  exports.prototype['effectSize'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} effectUnit\n   */\n  exports.prototype['effectUnit'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} effectUserVariableShareUserMeasurements\n   */\n  exports.prototype['effectUserVariableShareUserMeasurements'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} effectVariableCategoryId\n   */\n  exports.prototype['effectVariableCategoryId'] = undefined;\n  /**\n   * Ex: Emotions\n   * @member {String} effectVariableCategoryName\n   */\n  exports.prototype['effectVariableCategoryName'] = undefined;\n  /**\n   * Ex: MEAN\n   * @member {String} effectVariableCombinationOperation\n   */\n  exports.prototype['effectVariableCombinationOperation'] = undefined;\n  /**\n   * Ex: Mood_(psychology)\n   * @member {String} effectVariableCommonAlias\n   */\n  exports.prototype['effectVariableCommonAlias'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} effectVariableUnitAbbreviatedName\n   */\n  exports.prototype['effectVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} effectVariableUnitId\n   */\n  exports.prototype['effectVariableUnitId'] = undefined;\n  /**\n   * Ex: 1 to 5 Rating\n   * @member {String} effectVariableUnitName\n   */\n  exports.prototype['effectVariableUnitName'] = undefined;\n  /**\n   * Ex: 1398\n   * @member {Number} effectVariableId\n   */\n  exports.prototype['effectVariableId'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} effectVariableMostCommonConnectorId\n   */\n  exports.prototype['effectVariableMostCommonConnectorId'] = undefined;\n  /**\n   * Ex: Overall Mood\n   * @member {String} effectVariableName\n   */\n  exports.prototype['effectVariableName'] = undefined;\n  /**\n   * Ex: 2014-07-30 12:50:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} experimentEndTime\n   */\n  exports.prototype['experimentEndTime'] = undefined;\n  /**\n   * Ex: 2012-05-06 21:15:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} experimentStartTime\n   */\n  exports.prototype['experimentStartTime'] = undefined;\n  /**\n   * Ex: 0.528359\n   * @member {Number} forwardSpearmanCorrelationCoefficient\n   */\n  exports.prototype['forwardSpearmanCorrelationCoefficient'] = undefined;\n  /**\n   * Ex: 298\n   * @member {Number} numberOfPairs\n   */\n  exports.prototype['numberOfPairs'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} onsetDelay\n   */\n  exports.prototype['onsetDelay'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} onsetDelayInHours\n   */\n  exports.prototype['onsetDelayInHours'] = undefined;\n  /**\n   * Ex: -86400\n   * @member {Number} onsetDelayWithStrongestPearsonCorrelation\n   */\n  exports.prototype['onsetDelayWithStrongestPearsonCorrelation'] = undefined;\n  /**\n   * Ex: -24\n   * @member {Number} onsetDelayWithStrongestPearsonCorrelationInHours\n   */\n  exports.prototype['onsetDelayWithStrongestPearsonCorrelationInHours'] = undefined;\n  /**\n   * Ex: 0.68582816186982\n   * @member {Number} optimalPearsonProduct\n   */\n  exports.prototype['optimalPearsonProduct'] = undefined;\n  /**\n   * Ex: -1\n   * @member {Number} outcomeFillingValue\n   */\n  exports.prototype['outcomeFillingValue'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} outcomeMaximumAllowedValue\n   */\n  exports.prototype['outcomeMaximumAllowedValue'] = undefined;\n  /**\n   * Ex: 0.1\n   * @member {Number} outcomeMinimumAllowedValue\n   */\n  exports.prototype['outcomeMinimumAllowedValue'] = undefined;\n  /**\n   * Ex: 0.477\n   * @member {Number} pearsonCorrelationWithNoOnsetDelay\n   */\n  exports.prototype['pearsonCorrelationWithNoOnsetDelay'] = undefined;\n  /**\n   * Ex: 0.538\n   * @member {Number} predictivePearsonCorrelation\n   */\n  exports.prototype['predictivePearsonCorrelation'] = undefined;\n  /**\n   * Ex: 0.538\n   * @member {Number} predictivePearsonCorrelationCoefficient\n   */\n  exports.prototype['predictivePearsonCorrelationCoefficient'] = undefined;\n  /**\n   * Ex: RescueTime\n   * @member {String} predictorDataSources\n   */\n  exports.prototype['predictorDataSources'] = undefined;\n  /**\n   * Ex: -1\n   * @member {Number} predictorFillingValue\n   */\n  exports.prototype['predictorFillingValue'] = undefined;\n  /**\n   * Ex: 200\n   * @member {Number} predictorMaximumAllowedValue\n   */\n  exports.prototype['predictorMaximumAllowedValue'] = undefined;\n  /**\n   * Ex: 30\n   * @member {Number} predictorMinimumAllowedValue\n   */\n  exports.prototype['predictorMinimumAllowedValue'] = undefined;\n  /**\n   * Ex: 17\n   * @member {Number} predictsHighEffectChange\n   */\n  exports.prototype['predictsHighEffectChange'] = undefined;\n  /**\n   * Ex: -11\n   * @member {Number} predictsLowEffectChange\n   */\n  exports.prototype['predictsLowEffectChange'] = undefined;\n  /**\n   * Ex: 0.39628900511586\n   * @member {Number} pValue\n   */\n  exports.prototype['pValue'] = undefined;\n  /**\n   * Ex: 0.528\n   * @member {Number} qmScore\n   */\n  exports.prototype['qmScore'] = undefined;\n  /**\n   * Ex: 0.01377184270977\n   * @member {Number} reversePearsonCorrelationCoefficient\n   */\n  exports.prototype['reversePearsonCorrelationCoefficient'] = undefined;\n  /**\n   * Would you like to make this study publicly visible?\n   * @member {Boolean} shareUserMeasurements\n   */\n  exports.prototype['shareUserMeasurements'] = undefined;\n  /**\n   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} sharingDescription\n   */\n  exports.prototype['sharingDescription'] = undefined;\n  /**\n   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} sharingTitle\n   */\n  exports.prototype['sharingTitle'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} significantDifference\n   */\n  exports.prototype['significantDifference'] = undefined;\n  /**\n   * Ex: 0.9813\n   * @member {Number} statisticalSignificance\n   */\n  exports.prototype['statisticalSignificance'] = undefined;\n  /**\n   * Ex: moderate\n   * @member {String} strengthLevel\n   */\n  exports.prototype['strengthLevel'] = undefined;\n  /**\n   * Ex: 0.613\n   * @member {Number} strongestPearsonCorrelationCoefficient\n   */\n  exports.prototype['strongestPearsonCorrelationCoefficient'] = undefined;\n  /**\n   * @member {module:model/StudyHtml} studyHtml\n   */\n  exports.prototype['studyHtml'] = undefined;\n  /**\n   * @member {module:model/StudyImages} studyImages\n   */\n  exports.prototype['studyImages'] = undefined;\n  /**\n   * @member {module:model/StudyLinks} studyLinks\n   */\n  exports.prototype['studyLinks'] = undefined;\n  /**\n   * @member {module:model/StudyText} studyText\n   */\n  exports.prototype['studyText'] = undefined;\n  /**\n   * Ex: 9.6986079652717\n   * @member {Number} tValue\n   */\n  exports.prototype['tValue'] = undefined;\n  /**\n   * Ex: 2017-05-06 15:40:38 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * Ex: 230\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} userVote\n   */\n  exports.prototype['userVote'] = undefined;\n  /**\n   * Ex: 4.14\n   * @member {Number} valuePredictingHighOutcome\n   */\n  exports.prototype['valuePredictingHighOutcome'] = undefined;\n  /**\n   * Ex: 3.03\n   * @member {Number} valuePredictingLowOutcome\n   */\n  exports.prototype['valuePredictingLowOutcome'] = undefined;\n  /**\n   * original name of the cause.\n   * @member {String} outcomeDataSources\n   */\n  exports.prototype['outcomeDataSources'] = undefined;\n  /**\n   * Mike Sinn\n   * @member {String} principalInvestigator\n   */\n  exports.prototype['principalInvestigator'] = undefined;\n  /**\n   * Correlation when cause and effect are reversed. For any causal relationship, the forward correlation should exceed the reverse correlation.\n   * @member {Number} reverseCorrelation\n   */\n  exports.prototype['reverseCorrelation'] = undefined;\n  /**\n   * Ex: \n   * @member {String} averagePearsonCorrelationCoefficientOverOnsetDelays\n   */\n  exports.prototype['averagePearsonCorrelationCoefficientOverOnsetDelays'] = undefined;\n  /**\n   * Ex: 14764\n   * @member {Number} causeNumberOfRawMeasurements\n   */\n  exports.prototype['causeNumberOfRawMeasurements'] = undefined;\n  /**\n   * Ex: \n   * @member {String} correlationsOverDurationsOfAction\n   */\n  exports.prototype['correlationsOverDurationsOfAction'] = undefined;\n  /**\n   * Ex: \n   * @member {String} correlationsOverDurationsOfActionChartConfig\n   */\n  exports.prototype['correlationsOverDurationsOfActionChartConfig'] = undefined;\n  /**\n   * Ex: \n   * @member {String} correlationsOverOnsetDelaysChartConfig\n   */\n  exports.prototype['correlationsOverOnsetDelaysChartConfig'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} numberOfUsers\n   */\n  exports.prototype['numberOfUsers'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} rawCauseMeasurementSignificance\n   */\n  exports.prototype['rawCauseMeasurementSignificance'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} rawEffectMeasurementSignificance\n   */\n  exports.prototype['rawEffectMeasurementSignificance'] = undefined;\n  /**\n   * Ex: 1\n   * @member {String} reversePairsCount\n   */\n  exports.prototype['reversePairsCount'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} voteStatisticalSignificance\n   */\n  exports.prototype['voteStatisticalSignificance'] = undefined;\n  /**\n   * Ex: 0.011598441286655\n   * @member {Number} aggregateQMScore\n   */\n  exports.prototype['aggregateQMScore'] = undefined;\n  /**\n   * Ex: 0.0333\n   * @member {Number} forwardPearsonCorrelationCoefficient\n   */\n  exports.prototype['forwardPearsonCorrelationCoefficient'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} numberOfCorrelations\n   */\n  exports.prototype['numberOfCorrelations'] = undefined;\n  /**\n   * Ex: 1 or 0\n   * @member {Number} vote\n   */\n  exports.prototype['vote'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./DataSource\":33,\"./StudyHtml\":65,\"./StudyImages\":66,\"./StudyLinks\":68,\"./StudyText\":70}],33:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button', 'model/Card', 'model/ConnectInstructions'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'), require('./Card'), require('./ConnectInstructions'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.DataSource = factory(root.Quantimodo.ApiClient, root.Quantimodo.Button, root.Quantimodo.Card, root.Quantimodo.ConnectInstructions);\n  }\n}(this, function(ApiClient, Button, Card, ConnectInstructions) {\n  'use strict';\n\n\n\n\n  /**\n   * The DataSource model module.\n   * @module model/DataSource\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>DataSource</code>.\n   * @alias module:model/DataSource\n   * @class\n   * @param affiliate {Boolean} Ex: true\n   * @param connectorClientId {String} Ex: ba7d0c12432650e23b3ce924ae2d21e2ff59e7e4e28650759633700af7ed0a30\n   * @param defaultVariableCategoryName {String} Ex: Foods\n   * @param displayName {String} Ex: QuantiModo\n   * @param enabled {Number} Ex: 0\n   * @param getItUrl {String} Ex: https://quantimo.do\n   * @param id {Number} Ex: 72\n   * @param image {String} Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\n   * @param imageHtml {String} Ex: <a href=\\\"https://quantimo.do\\\"><img id=\\\"quantimodo_image\\\" title=\\\"QuantiModo\\\" src=\\\"https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\\\" alt=\\\"QuantiModo\\\"></a>\n   * @param linkedDisplayNameHtml {String} Ex: <a href=\\\"https://quantimo.do\\\">QuantiModo</a>\n   * @param longDescription {String} Ex: QuantiModo is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  QuantiModo then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.\n   * @param name {String} Ex: quantimodo\n   * @param shortDescription {String} Ex: Tracks anything\n   */\n  var exports = function(affiliate, connectorClientId, defaultVariableCategoryName, displayName, enabled, getItUrl, id, image, imageHtml, linkedDisplayNameHtml, longDescription, name, shortDescription) {\n    var _this = this;\n\n    _this['affiliate'] = affiliate;\n\n\n\n\n\n\n\n\n\n\n\n    _this['connectorClientId'] = connectorClientId;\n    _this['defaultVariableCategoryName'] = defaultVariableCategoryName;\n    _this['displayName'] = displayName;\n    _this['enabled'] = enabled;\n    _this['getItUrl'] = getItUrl;\n    _this['id'] = id;\n    _this['image'] = image;\n    _this['imageHtml'] = imageHtml;\n\n\n    _this['linkedDisplayNameHtml'] = linkedDisplayNameHtml;\n    _this['longDescription'] = longDescription;\n\n\n    _this['name'] = name;\n\n\n\n    _this['shortDescription'] = shortDescription;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>DataSource</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/DataSource} obj Optional instance to populate.\n   * @return {module:model/DataSource} The populated <code>DataSource</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('affiliate')) {\n        obj['affiliate'] = ApiClient.convertToType(data['affiliate'], 'Boolean');\n      }\n      if (data.hasOwnProperty('backgroundColor')) {\n        obj['backgroundColor'] = ApiClient.convertToType(data['backgroundColor'], 'String');\n      }\n      if (data.hasOwnProperty('buttons')) {\n        obj['buttons'] = ApiClient.convertToType(data['buttons'], [Button]);\n      }\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('connected')) {\n        obj['connected'] = ApiClient.convertToType(data['connected'], 'Boolean');\n      }\n      if (data.hasOwnProperty('connectError')) {\n        obj['connectError'] = ApiClient.convertToType(data['connectError'], 'String');\n      }\n      if (data.hasOwnProperty('connectInstructions')) {\n        obj['connectInstructions'] = ConnectInstructions.constructFromObject(data['connectInstructions']);\n      }\n      if (data.hasOwnProperty('connectorId')) {\n        obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('connectStatus')) {\n        obj['connectStatus'] = ApiClient.convertToType(data['connectStatus'], 'String');\n      }\n      if (data.hasOwnProperty('count')) {\n        obj['count'] = ApiClient.convertToType(data['count'], 'Number');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('connectorClientId')) {\n        obj['connectorClientId'] = ApiClient.convertToType(data['connectorClientId'], 'String');\n      }\n      if (data.hasOwnProperty('defaultVariableCategoryName')) {\n        obj['defaultVariableCategoryName'] = ApiClient.convertToType(data['defaultVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('enabled')) {\n        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Number');\n      }\n      if (data.hasOwnProperty('getItUrl')) {\n        obj['getItUrl'] = ApiClient.convertToType(data['getItUrl'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = ApiClient.convertToType(data['image'], 'String');\n      }\n      if (data.hasOwnProperty('imageHtml')) {\n        obj['imageHtml'] = ApiClient.convertToType(data['imageHtml'], 'String');\n      }\n      if (data.hasOwnProperty('lastSuccessfulUpdatedAt')) {\n        obj['lastSuccessfulUpdatedAt'] = ApiClient.convertToType(data['lastSuccessfulUpdatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('lastUpdate')) {\n        obj['lastUpdate'] = ApiClient.convertToType(data['lastUpdate'], 'Number');\n      }\n      if (data.hasOwnProperty('linkedDisplayNameHtml')) {\n        obj['linkedDisplayNameHtml'] = ApiClient.convertToType(data['linkedDisplayNameHtml'], 'String');\n      }\n      if (data.hasOwnProperty('longDescription')) {\n        obj['longDescription'] = ApiClient.convertToType(data['longDescription'], 'String');\n      }\n      if (data.hasOwnProperty('message')) {\n        obj['message'] = ApiClient.convertToType(data['message'], 'String');\n      }\n      if (data.hasOwnProperty('mobileConnectMethod')) {\n        obj['mobileConnectMethod'] = ApiClient.convertToType(data['mobileConnectMethod'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('platforms')) {\n        obj['platforms'] = ApiClient.convertToType(data['platforms'], ['String']);\n      }\n      if (data.hasOwnProperty('premium')) {\n        obj['premium'] = ApiClient.convertToType(data['premium'], 'Boolean');\n      }\n      if (data.hasOwnProperty('scopes')) {\n        obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);\n      }\n      if (data.hasOwnProperty('shortDescription')) {\n        obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');\n      }\n      if (data.hasOwnProperty('spreadsheetUploadLink')) {\n        obj['spreadsheetUploadLink'] = ApiClient.convertToType(data['spreadsheetUploadLink'], 'String');\n      }\n      if (data.hasOwnProperty('totalMeasurementsInLastUpdate')) {\n        obj['totalMeasurementsInLastUpdate'] = ApiClient.convertToType(data['totalMeasurementsInLastUpdate'], 'Number');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('updateRequestedAt')) {\n        obj['updateRequestedAt'] = ApiClient.convertToType(data['updateRequestedAt'], 'String');\n      }\n      if (data.hasOwnProperty('updateStatus')) {\n        obj['updateStatus'] = ApiClient.convertToType(data['updateStatus'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: true\n   * @member {Boolean} affiliate\n   */\n  exports.prototype['affiliate'] = undefined;\n  /**\n   * Background color HEX code that matches the icon\n   * @member {String} backgroundColor\n   */\n  exports.prototype['backgroundColor'] = undefined;\n  /**\n   * @member {Array.<module:model/Button>} buttons\n   */\n  exports.prototype['buttons'] = undefined;\n  /**\n   * Card containing instructions, image, text, link and relevant import buttons\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * True if the authenticated user has this connector enabled\n   * @member {Boolean} connected\n   */\n  exports.prototype['connected'] = undefined;\n  /**\n   * Ex: Your token is expired. Please re-connect\n   * @member {String} connectError\n   */\n  exports.prototype['connectError'] = undefined;\n  /**\n   * URL and parameters used when connecting to a service\n   * @member {module:model/ConnectInstructions} connectInstructions\n   */\n  exports.prototype['connectInstructions'] = undefined;\n  /**\n   * Ex: 8\n   * @member {Number} connectorId\n   */\n  exports.prototype['connectorId'] = undefined;\n  /**\n   * Ex: CONNECTED\n   * @member {String} connectStatus\n   */\n  exports.prototype['connectStatus'] = undefined;\n  /**\n   * Number of measurements from this source or number of users who have measurements from this source\n   * @member {Number} count\n   */\n  exports.prototype['count'] = undefined;\n  /**\n   * Ex: 2000-01-01 00:00:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Ex: ba7d0c12432650e23b3ce924ae2d21e2ff59e7e4e28650759633700af7ed0a30\n   * @member {String} connectorClientId\n   */\n  exports.prototype['connectorClientId'] = undefined;\n  /**\n   * Ex: Foods\n   * @member {String} defaultVariableCategoryName\n   */\n  exports.prototype['defaultVariableCategoryName'] = undefined;\n  /**\n   * Ex: QuantiModo\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} enabled\n   */\n  exports.prototype['enabled'] = undefined;\n  /**\n   * Ex: https://quantimo.do\n   * @member {String} getItUrl\n   */\n  exports.prototype['getItUrl'] = undefined;\n  /**\n   * Ex: 72\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\n   * @member {String} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * Ex: <a href=\\\"https://quantimo.do\\\"><img id=\\\"quantimodo_image\\\" title=\\\"QuantiModo\\\" src=\\\"https://quantimodo.quantimo.do/ionic/Modo/www/img/logos/quantimodo-logo-qm-rainbow-200-200.png\\\" alt=\\\"QuantiModo\\\"></a>\n   * @member {String} imageHtml\n   */\n  exports.prototype['imageHtml'] = undefined;\n  /**\n   * Ex: 2017-07-31 10:10:34 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} lastSuccessfulUpdatedAt\n   */\n  exports.prototype['lastSuccessfulUpdatedAt'] = undefined;\n  /**\n   * Epoch timestamp of last sync\n   * @member {Number} lastUpdate\n   */\n  exports.prototype['lastUpdate'] = undefined;\n  /**\n   * Ex: <a href=\\\"https://quantimo.do\\\">QuantiModo</a>\n   * @member {String} linkedDisplayNameHtml\n   */\n  exports.prototype['linkedDisplayNameHtml'] = undefined;\n  /**\n   * Ex: QuantiModo is a Chrome extension, Android app, iOS app, and web app that allows you to easily track mood, symptoms, or any outcome you want to optimize in a fraction of a second.  You can also import your data from over 30 other apps and devices like Fitbit, Rescuetime, Jawbone Up, Withings, Facebook, Github, Google Calendar, Runkeeper, MoodPanda, Slice, Google Fit, and more.  QuantiModo then analyzes your data to identify which hidden factors are most likely to be influencing your mood or symptoms and their optimal daily values.\n   * @member {String} longDescription\n   */\n  exports.prototype['longDescription'] = undefined;\n  /**\n   * Ex: Got 412 new measurements on 2017-07-31 10:10:34\n   * @member {String} message\n   */\n  exports.prototype['message'] = undefined;\n  /**\n   * Mobile connect method: webview, cordova, google, spreadsheet, or ip\n   * @member {String} mobileConnectMethod\n   */\n  exports.prototype['mobileConnectMethod'] = undefined;\n  /**\n   * Ex: quantimodo\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Platforms (chrome, android, ios, web) that you can connect on.\n   * @member {Array.<String>} platforms\n   */\n  exports.prototype['platforms'] = undefined;\n  /**\n   * True if connection requires upgrade\n   * @member {Boolean} premium\n   */\n  exports.prototype['premium'] = undefined;\n  /**\n   * Required connector scopes\n   * @member {Array.<String>} scopes\n   */\n  exports.prototype['scopes'] = undefined;\n  /**\n   * Ex: Tracks anything\n   * @member {String} shortDescription\n   */\n  exports.prototype['shortDescription'] = undefined;\n  /**\n   * URL to POST a spreadsheet to (if available for this data source)\n   * @member {String} spreadsheetUploadLink\n   */\n  exports.prototype['spreadsheetUploadLink'] = undefined;\n  /**\n   * Number of measurements obtained during latest update\n   * @member {Number} totalMeasurementsInLastUpdate\n   */\n  exports.prototype['totalMeasurementsInLastUpdate'] = undefined;\n  /**\n   * Ex: 2017-07-31 10:10:34 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * Ex: 2017-07-18 05:16:31 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} updateRequestedAt\n   */\n  exports.prototype['updateRequestedAt'] = undefined;\n  /**\n   * Ex: UPDATED\n   * @member {String} updateStatus\n   */\n  exports.prototype['updateStatus'] = undefined;\n  /**\n   * Ex: 230\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Button\":26,\"./Card\":27,\"./ConnectInstructions\":30}],34:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.DeviceToken = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The DeviceToken model module.\n   * @module model/DeviceToken\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>DeviceToken</code>.\n   * @alias module:model/DeviceToken\n   * @class\n   * @param platform {String} ios, android, or web\n   * @param deviceToken {String} The device token\n   */\n  var exports = function(platform, deviceToken) {\n    var _this = this;\n\n\n    _this['platform'] = platform;\n    _this['deviceToken'] = deviceToken;\n  };\n\n  /**\n   * Constructs a <code>DeviceToken</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/DeviceToken} obj Optional instance to populate.\n   * @return {module:model/DeviceToken} The populated <code>DeviceToken</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('platform')) {\n        obj['platform'] = ApiClient.convertToType(data['platform'], 'String');\n      }\n      if (data.hasOwnProperty('deviceToken')) {\n        obj['deviceToken'] = ApiClient.convertToType(data['deviceToken'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Client id\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * ios, android, or web\n   * @member {String} platform\n   */\n  exports.prototype['platform'] = undefined;\n  /**\n   * The device token\n   * @member {String} deviceToken\n   */\n  exports.prototype['deviceToken'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],35:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ExplanationStartTracking', 'model/Image'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./ExplanationStartTracking'), require('./Image'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Explanation = factory(root.Quantimodo.ApiClient, root.Quantimodo.ExplanationStartTracking, root.Quantimodo.Image);\n  }\n}(this, function(ApiClient, ExplanationStartTracking, Image) {\n  'use strict';\n\n\n\n\n  /**\n   * The Explanation model module.\n   * @module model/Explanation\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Explanation</code>.\n   * @alias module:model/Explanation\n   * @class\n   * @param description {String} Ex: These factors are most predictive of Overall Mood based on your own data.\n   * @param image {module:model/Image} \n   * @param ionIcon {String} Ex: ion-ios-person\n   * @param startTracking {module:model/ExplanationStartTracking} \n   * @param title {String} Ex: Top Predictors of Overall Mood\n   */\n  var exports = function(description, image, ionIcon, startTracking, title) {\n    var _this = this;\n\n    _this['description'] = description;\n    _this['image'] = image;\n    _this['ionIcon'] = ionIcon;\n    _this['startTracking'] = startTracking;\n    _this['title'] = title;\n\n  };\n\n  /**\n   * Constructs a <code>Explanation</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Explanation} obj Optional instance to populate.\n   * @return {module:model/Explanation} The populated <code>Explanation</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = Image.constructFromObject(data['image']);\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('startTracking')) {\n        obj['startTracking'] = ExplanationStartTracking.constructFromObject(data['startTracking']);\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n      if (data.hasOwnProperty('html')) {\n        obj['html'] = ApiClient.convertToType(data['html'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: These factors are most predictive of Overall Mood based on your own data.\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * @member {module:model/Image} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * Ex: ion-ios-person\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * @member {module:model/ExplanationStartTracking} startTracking\n   */\n  exports.prototype['startTracking'] = undefined;\n  /**\n   * Ex: Top Predictors of Overall Mood\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n  /**\n   * Embeddable list of study summaries with explanation at the top\n   * @member {String} html\n   */\n  exports.prototype['html'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./ExplanationStartTracking\":36,\"./Image\":43}],36:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ExplanationStartTracking = factory(root.Quantimodo.ApiClient, root.Quantimodo.Button);\n  }\n}(this, function(ApiClient, Button) {\n  'use strict';\n\n\n\n\n  /**\n   * The ExplanationStartTracking model module.\n   * @module model/ExplanationStartTracking\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>ExplanationStartTracking</code>.\n   * @alias module:model/ExplanationStartTracking\n   * @class\n   * @param button {module:model/Button} \n   * @param description {String} Ex: The more data I have the more accurate your results will be so track regularly!\n   * @param title {String} Ex: Improve Accuracy\n   */\n  var exports = function(button, description, title) {\n    var _this = this;\n\n    _this['button'] = button;\n    _this['description'] = description;\n    _this['title'] = title;\n  };\n\n  /**\n   * Constructs a <code>ExplanationStartTracking</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ExplanationStartTracking} obj Optional instance to populate.\n   * @return {module:model/ExplanationStartTracking} The populated <code>ExplanationStartTracking</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('button')) {\n        obj['button'] = Button.constructFromObject(data['button']);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Button} button\n   */\n  exports.prototype['button'] = undefined;\n  /**\n   * Ex: The more data I have the more accurate your results will be so track regularly!\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Ex: Improve Accuracy\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Button\":26}],37:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/DataSource'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./DataSource'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetConnectorsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.DataSource);\n  }\n}(this, function(ApiClient, DataSource) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetConnectorsResponse model module.\n   * @module model/GetConnectorsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetConnectorsResponse</code>.\n   * @alias module:model/GetConnectorsResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n  };\n\n  /**\n   * Constructs a <code>GetConnectorsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetConnectorsResponse} obj Optional instance to populate.\n   * @return {module:model/GetConnectorsResponse} The populated <code>GetConnectorsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('connectors')) {\n        obj['connectors'] = ApiClient.convertToType(data['connectors'], [DataSource]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/DataSource>} connectors\n   */\n  exports.prototype['connectors'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./DataSource\":33}],38:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Correlation', 'model/Explanation'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Correlation'), require('./Explanation'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetCorrelationsDataResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.Correlation, root.Quantimodo.Explanation);\n  }\n}(this, function(ApiClient, Correlation, Explanation) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetCorrelationsDataResponse model module.\n   * @module model/GetCorrelationsDataResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetCorrelationsDataResponse</code>.\n   * @alias module:model/GetCorrelationsDataResponse\n   * @class\n   * @param correlations {Array.<module:model/Correlation>} \n   * @param explanation {module:model/Explanation} \n   */\n  var exports = function(correlations, explanation) {\n    var _this = this;\n\n    _this['correlations'] = correlations;\n    _this['explanation'] = explanation;\n\n\n  };\n\n  /**\n   * Constructs a <code>GetCorrelationsDataResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetCorrelationsDataResponse} obj Optional instance to populate.\n   * @return {module:model/GetCorrelationsDataResponse} The populated <code>GetCorrelationsDataResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('correlations')) {\n        obj['correlations'] = ApiClient.convertToType(data['correlations'], [Correlation]);\n      }\n      if (data.hasOwnProperty('explanation')) {\n        obj['explanation'] = Explanation.constructFromObject(data['explanation']);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Correlation>} correlations\n   */\n  exports.prototype['correlations'] = undefined;\n  /**\n   * @member {module:model/Explanation} explanation\n   */\n  exports.prototype['explanation'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Correlation\":32,\"./Explanation\":35}],39:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/GetCorrelationsDataResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./GetCorrelationsDataResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetCorrelationsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.GetCorrelationsDataResponse);\n  }\n}(this, function(ApiClient, GetCorrelationsDataResponse) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetCorrelationsResponse model module.\n   * @module model/GetCorrelationsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetCorrelationsResponse</code>.\n   * @alias module:model/GetCorrelationsResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n\n  };\n\n  /**\n   * Constructs a <code>GetCorrelationsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetCorrelationsResponse} obj Optional instance to populate.\n   * @return {module:model/GetCorrelationsResponse} The populated <code>GetCorrelationsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('data')) {\n        obj['data'] = GetCorrelationsDataResponse.constructFromObject(data['data']);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n      if (data.hasOwnProperty('avatar')) {\n        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/GetCorrelationsDataResponse} data\n   */\n  exports.prototype['data'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n  /**\n   * Square icon png url\n   * @member {String} avatar\n   */\n  exports.prototype['avatar'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./GetCorrelationsDataResponse\":38}],40:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AuthorizedClients'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./AuthorizedClients'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetSharesResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.AuthorizedClients);\n  }\n}(this, function(ApiClient, AuthorizedClients) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetSharesResponse model module.\n   * @module model/GetSharesResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetSharesResponse</code>.\n   * @alias module:model/GetSharesResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n  };\n\n  /**\n   * Constructs a <code>GetSharesResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetSharesResponse} obj Optional instance to populate.\n   * @return {module:model/GetSharesResponse} The populated <code>GetSharesResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('authorizedClients')) {\n        obj['authorizedClients'] = AuthorizedClients.constructFromObject(data['authorizedClients']);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/AuthorizedClients} authorizedClients\n   */\n  exports.prototype['authorizedClients'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./AuthorizedClients\":25}],41:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ExplanationStartTracking', 'model/Image', 'model/Study'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./ExplanationStartTracking'), require('./Image'), require('./Study'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetStudiesResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.ExplanationStartTracking, root.Quantimodo.Image, root.Quantimodo.Study);\n  }\n}(this, function(ApiClient, ExplanationStartTracking, Image, Study) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetStudiesResponse model module.\n   * @module model/GetStudiesResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetStudiesResponse</code>.\n   * @alias module:model/GetStudiesResponse\n   * @class\n   * @param description {String} Ex: These factors are most predictive of Overall Mood based on your own data.\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>GetStudiesResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetStudiesResponse} obj Optional instance to populate.\n   * @return {module:model/GetStudiesResponse} The populated <code>GetStudiesResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('studies')) {\n        obj['studies'] = ApiClient.convertToType(data['studies'], [Study]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = Image.constructFromObject(data['image']);\n      }\n      if (data.hasOwnProperty('avatar')) {\n        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('startTracking')) {\n        obj['startTracking'] = ExplanationStartTracking.constructFromObject(data['startTracking']);\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n      if (data.hasOwnProperty('html')) {\n        obj['html'] = ApiClient.convertToType(data['html'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Study>} studies\n   */\n  exports.prototype['studies'] = undefined;\n  /**\n   * Ex: These factors are most predictive of Overall Mood based on your own data.\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n  /**\n   * @member {module:model/Image} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * Square icon png url\n   * @member {String} avatar\n   */\n  exports.prototype['avatar'] = undefined;\n  /**\n   * Ex: ion-ios-person\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * @member {module:model/ExplanationStartTracking} startTracking\n   */\n  exports.prototype['startTracking'] = undefined;\n  /**\n   * Ex: Top Predictors of Overall Mood\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n  /**\n   * Embeddable list of study summaries with explanation at the top\n   * @member {String} html\n   */\n  exports.prototype['html'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./ExplanationStartTracking\":36,\"./Image\":43,\"./Study\":62}],42:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/TrackingReminderNotification'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./TrackingReminderNotification'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.GetTrackingReminderNotificationsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.TrackingReminderNotification);\n  }\n}(this, function(ApiClient, TrackingReminderNotification) {\n  'use strict';\n\n\n\n\n  /**\n   * The GetTrackingReminderNotificationsResponse model module.\n   * @module model/GetTrackingReminderNotificationsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>GetTrackingReminderNotificationsResponse</code>.\n   * @alias module:model/GetTrackingReminderNotificationsResponse\n   * @class\n   * @param description {String} Can be used as body of help info popup\n   * @param summary {String} Can be used as title in help info popup\n   */\n  var exports = function(description, summary) {\n    var _this = this;\n\n\n    _this['description'] = description;\n    _this['summary'] = summary;\n  };\n\n  /**\n   * Constructs a <code>GetTrackingReminderNotificationsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/GetTrackingReminderNotificationsResponse} obj Optional instance to populate.\n   * @return {module:model/GetTrackingReminderNotificationsResponse} The populated <code>GetTrackingReminderNotificationsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('data')) {\n        obj['data'] = ApiClient.convertToType(data['data'], [TrackingReminderNotification]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/TrackingReminderNotification>} data\n   */\n  exports.prototype['data'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./TrackingReminderNotification\":74}],43:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Image = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Image model module.\n   * @module model/Image\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Image</code>.\n   * @alias module:model/Image\n   * @class\n   * @param height {String} Ex: 240\n   * @param imageUrl {String} Ex: https://www.filepicker.io/api/file/TjmeNWS5Q2SFmtJlUGLf\n   * @param width {String} Ex: 224\n   */\n  var exports = function(height, imageUrl, width) {\n    var _this = this;\n\n    _this['height'] = height;\n    _this['imageUrl'] = imageUrl;\n    _this['width'] = width;\n  };\n\n  /**\n   * Constructs a <code>Image</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Image} obj Optional instance to populate.\n   * @return {module:model/Image} The populated <code>Image</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('height')) {\n        obj['height'] = ApiClient.convertToType(data['height'], 'String');\n      }\n      if (data.hasOwnProperty('imageUrl')) {\n        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('width')) {\n        obj['width'] = ApiClient.convertToType(data['width'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: 240\n   * @member {String} height\n   */\n  exports.prototype['height'] = undefined;\n  /**\n   * Ex: https://www.filepicker.io/api/file/TjmeNWS5Q2SFmtJlUGLf\n   * @member {String} imageUrl\n   */\n  exports.prototype['imageUrl'] = undefined;\n  /**\n   * Ex: 224\n   * @member {String} width\n   */\n  exports.prototype['width'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],44:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.InputField = factory(root.Quantimodo.ApiClient, root.Quantimodo.Button);\n  }\n}(this, function(ApiClient, Button) {\n  'use strict';\n\n\n\n\n  /**\n   * The InputField model module.\n   * @module model/InputField\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>InputField</code>.\n   * @alias module:model/InputField\n   * @class\n   * @param displayName {String} What do you expect?\n   * @param type {module:model/InputField.TypeEnum} Ex: Title\n   */\n  var exports = function(displayName, type) {\n    var _this = this;\n\n    _this['displayName'] = displayName;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['type'] = type;\n\n\n  };\n\n  /**\n   * Constructs a <code>InputField</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/InputField} obj Optional instance to populate.\n   * @return {module:model/InputField} The populated <code>InputField</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('helpText')) {\n        obj['helpText'] = ApiClient.convertToType(data['helpText'], 'String');\n      }\n      if (data.hasOwnProperty('hint')) {\n        obj['hint'] = ApiClient.convertToType(data['hint'], 'String');\n      }\n      if (data.hasOwnProperty('icon')) {\n        obj['icon'] = ApiClient.convertToType(data['icon'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'String');\n      }\n      if (data.hasOwnProperty('image')) {\n        obj['image'] = ApiClient.convertToType(data['image'], 'String');\n      }\n      if (data.hasOwnProperty('key')) {\n        obj['key'] = ApiClient.convertToType(data['key'], 'String');\n      }\n      if (data.hasOwnProperty('labelLeft')) {\n        obj['labelLeft'] = ApiClient.convertToType(data['labelLeft'], 'String');\n      }\n      if (data.hasOwnProperty('labelRight')) {\n        obj['labelRight'] = ApiClient.convertToType(data['labelRight'], 'String');\n      }\n      if (data.hasOwnProperty('link')) {\n        obj['link'] = ApiClient.convertToType(data['link'], 'String');\n      }\n      if (data.hasOwnProperty('maxLength')) {\n        obj['maxLength'] = ApiClient.convertToType(data['maxLength'], 'Number');\n      }\n      if (data.hasOwnProperty('maxValue')) {\n        obj['maxValue'] = ApiClient.convertToType(data['maxValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minLength')) {\n        obj['minLength'] = ApiClient.convertToType(data['minLength'], 'Number');\n      }\n      if (data.hasOwnProperty('minValue')) {\n        obj['minValue'] = ApiClient.convertToType(data['minValue'], 'Number');\n      }\n      if (data.hasOwnProperty('options')) {\n        obj['options'] = ApiClient.convertToType(data['options'], ['String']);\n      }\n      if (data.hasOwnProperty('placeholder')) {\n        obj['placeholder'] = ApiClient.convertToType(data['placeholder'], 'String');\n      }\n      if (data.hasOwnProperty('postUrl')) {\n        obj['postUrl'] = ApiClient.convertToType(data['postUrl'], 'String');\n      }\n      if (data.hasOwnProperty('required')) {\n        obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');\n      }\n      if (data.hasOwnProperty('show')) {\n        obj['show'] = ApiClient.convertToType(data['show'], 'Boolean');\n      }\n      if (data.hasOwnProperty('submitButton')) {\n        obj['submitButton'] = Button.constructFromObject(data['submitButton']);\n      }\n      if (data.hasOwnProperty('type')) {\n        obj['type'] = ApiClient.convertToType(data['type'], 'String');\n      }\n      if (data.hasOwnProperty('validationPattern')) {\n        obj['validationPattern'] = ApiClient.convertToType(data['validationPattern'], 'String');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * What do you expect?\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} helpText\n   */\n  exports.prototype['helpText'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} hint\n   */\n  exports.prototype['hint'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} icon\n   */\n  exports.prototype['icon'] = undefined;\n  /**\n   * HTML element id\n   * @member {String} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} image\n   */\n  exports.prototype['image'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} key\n   */\n  exports.prototype['key'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} labelLeft\n   */\n  exports.prototype['labelLeft'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} labelRight\n   */\n  exports.prototype['labelRight'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} link\n   */\n  exports.prototype['link'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Number} maxLength\n   */\n  exports.prototype['maxLength'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Number} maxValue\n   */\n  exports.prototype['maxValue'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Number} minLength\n   */\n  exports.prototype['minLength'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Number} minValue\n   */\n  exports.prototype['minValue'] = undefined;\n  /**\n   * Selector list options\n   * @member {Array.<String>} options\n   */\n  exports.prototype['options'] = undefined;\n  /**\n   * Ex: Title\n   * @member {String} placeholder\n   */\n  exports.prototype['placeholder'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} postUrl\n   */\n  exports.prototype['postUrl'] = undefined;\n  /**\n   * What do you expect?\n   * @member {Boolean} required\n   */\n  exports.prototype['required'] = undefined;\n  /**\n   * Ex: Title\n   * @member {Boolean} show\n   */\n  exports.prototype['show'] = undefined;\n  /**\n   * @member {module:model/Button} submitButton\n   */\n  exports.prototype['submitButton'] = undefined;\n  /**\n   * Ex: Title\n   * @member {module:model/InputField.TypeEnum} type\n   */\n  exports.prototype['type'] = undefined;\n  /**\n   * See http://html5pattern.com/ for examples\n   * @member {String} validationPattern\n   */\n  exports.prototype['validationPattern'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} value\n   */\n  exports.prototype['value'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>type</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.TypeEnum = {\n    /**\n     * value: \"check_box\"\n     * @const\n     */\n    \"check_box\": \"check_box\",\n    /**\n     * value: \"date\"\n     * @const\n     */\n    \"date\": \"date\",\n    /**\n     * value: \"email\"\n     * @const\n     */\n    \"email\": \"email\",\n    /**\n     * value: \"number\"\n     * @const\n     */\n    \"number\": \"number\",\n    /**\n     * value: \"postal_code\"\n     * @const\n     */\n    \"postal_code\": \"postal_code\",\n    /**\n     * value: \"select_option\"\n     * @const\n     */\n    \"select_option\": \"select_option\",\n    /**\n     * value: \"string\"\n     * @const\n     */\n    \"string\": \"string\",\n    /**\n     * value: \"switch\"\n     * @const\n     */\n    \"switch\": \"switch\",\n    /**\n     * value: \"text_area\"\n     * @const\n     */\n    \"text_area\": \"text_area\",\n    /**\n     * value: \"unit\"\n     * @const\n     */\n    \"unit\": \"unit\",\n    /**\n     * value: \"variable_category\"\n     * @const\n     */\n    \"variable_category\": \"variable_category\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Button\":26}],45:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.JsonErrorResponse = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The JsonErrorResponse model module.\n   * @module model/JsonErrorResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>JsonErrorResponse</code>.\n   * @alias module:model/JsonErrorResponse\n   * @class\n   * @param status {String} Status: \\\"ok\\\" or \\\"error\\\"\n   */\n  var exports = function(status) {\n    var _this = this;\n\n\n    _this['status'] = status;\n\n\n  };\n\n  /**\n   * Constructs a <code>JsonErrorResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/JsonErrorResponse} obj Optional instance to populate.\n   * @return {module:model/JsonErrorResponse} The populated <code>JsonErrorResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('message')) {\n        obj['message'] = ApiClient.convertToType(data['message'], 'String');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Error message\n   * @member {String} message\n   */\n  exports.prototype['message'] = undefined;\n  /**\n   * Status: \\\"ok\\\" or \\\"error\\\"\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],46:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Card'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Card'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Measurement = factory(root.Quantimodo.ApiClient, root.Quantimodo.Card);\n  }\n}(this, function(ApiClient, Card) {\n  'use strict';\n\n\n\n\n  /**\n   * The Measurement model module.\n   * @module model/Measurement\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Measurement</code>.\n   * @alias module:model/Measurement\n   * @class\n   * @param sourceName {String} Application or device used to record the measurement values\n   * @param startTimeString {String} Start Time for the measurement event in UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @param unitAbbreviatedName {String} Abbreviated name for the unit of measurement\n   * @param value {Number} Converted measurement value in requested unit\n   * @param variableName {String} Name of the variable for which we are creating the measurement records\n   */\n  var exports = function(sourceName, startTimeString, unitAbbreviatedName, value, variableName) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['sourceName'] = sourceName;\n\n\n    _this['startTimeString'] = startTimeString;\n\n    _this['unitAbbreviatedName'] = unitAbbreviatedName;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['value'] = value;\n\n\n\n\n\n    _this['variableName'] = variableName;\n\n  };\n\n  /**\n   * Constructs a <code>Measurement</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Measurement} obj Optional instance to populate.\n   * @return {module:model/Measurement} The populated <code>Measurement</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('connectorId')) {\n        obj['connectorId'] = ApiClient.convertToType(data['connectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('displayValueAndUnitString')) {\n        obj['displayValueAndUnitString'] = ApiClient.convertToType(data['displayValueAndUnitString'], 'String');\n      }\n      if (data.hasOwnProperty('iconIcon')) {\n        obj['iconIcon'] = ApiClient.convertToType(data['iconIcon'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('inputType')) {\n        obj['inputType'] = ApiClient.convertToType(data['inputType'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Boolean');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('note')) {\n        obj['note'] = ApiClient.convertToType(data['note'], 'String');\n      }\n      if (data.hasOwnProperty('noteObject')) {\n        obj['noteObject'] = ApiClient.convertToType(data['noteObject'], Object);\n      }\n      if (data.hasOwnProperty('noteHtml')) {\n        obj['noteHtml'] = ApiClient.convertToType(data['noteHtml'], Object);\n      }\n      if (data.hasOwnProperty('originalUnitId')) {\n        obj['originalUnitId'] = ApiClient.convertToType(data['originalUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('originalValue')) {\n        obj['originalValue'] = ApiClient.convertToType(data['originalValue'], 'Number');\n      }\n      if (data.hasOwnProperty('pngPath')) {\n        obj['pngPath'] = ApiClient.convertToType(data['pngPath'], 'String');\n      }\n      if (data.hasOwnProperty('pngUrl')) {\n        obj['pngUrl'] = ApiClient.convertToType(data['pngUrl'], 'String');\n      }\n      if (data.hasOwnProperty('productUrl')) {\n        obj['productUrl'] = ApiClient.convertToType(data['productUrl'], 'String');\n      }\n      if (data.hasOwnProperty('sourceName')) {\n        obj['sourceName'] = ApiClient.convertToType(data['sourceName'], 'String');\n      }\n      if (data.hasOwnProperty('startDate')) {\n        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');\n      }\n      if (data.hasOwnProperty('startTimeEpoch')) {\n        obj['startTimeEpoch'] = ApiClient.convertToType(data['startTimeEpoch'], 'Number');\n      }\n      if (data.hasOwnProperty('startTimeString')) {\n        obj['startTimeString'] = ApiClient.convertToType(data['startTimeString'], 'String');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('unitCategoryId')) {\n        obj['unitCategoryId'] = ApiClient.convertToType(data['unitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitCategoryName')) {\n        obj['unitCategoryName'] = ApiClient.convertToType(data['unitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('unitId')) {\n        obj['unitId'] = ApiClient.convertToType(data['unitId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitName')) {\n        obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('url')) {\n        obj['url'] = ApiClient.convertToType(data['url'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitAbbreviatedName')) {\n        obj['userVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['userVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryId')) {\n        obj['userVariableUnitCategoryId'] = ApiClient.convertToType(data['userVariableUnitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryName')) {\n        obj['userVariableUnitCategoryName'] = ApiClient.convertToType(data['userVariableUnitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitId')) {\n        obj['userVariableUnitId'] = ApiClient.convertToType(data['userVariableUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitName')) {\n        obj['userVariableUnitName'] = ApiClient.convertToType(data['userVariableUnitName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryId')) {\n        obj['userVariableVariableCategoryId'] = ApiClient.convertToType(data['userVariableVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryName')) {\n        obj['userVariableVariableCategoryName'] = ApiClient.convertToType(data['userVariableVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('valence')) {\n        obj['valence'] = ApiClient.convertToType(data['valence'], 'String');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'Number');\n      }\n      if (data.hasOwnProperty('variableCategoryId')) {\n        obj['variableCategoryId'] = ApiClient.convertToType(data['variableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableCategoryImageUrl')) {\n        obj['variableCategoryImageUrl'] = ApiClient.convertToType(data['variableCategoryImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableDescription')) {\n        obj['variableDescription'] = ApiClient.convertToType(data['variableDescription'], 'String');\n      }\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableName')) {\n        obj['variableName'] = ApiClient.convertToType(data['variableName'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Card containing image, text, link and relevant buttons\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * Ex: quantimodo\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * Ex: 13\n   * @member {Number} connectorId\n   */\n  exports.prototype['connectorId'] = undefined;\n  /**\n   * Ex: 2017-07-30 21:08:36\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Examples: 3/5, $10, or 1 count\n   * @member {String} displayValueAndUnitString\n   */\n  exports.prototype['displayValueAndUnitString'] = undefined;\n  /**\n   * Ex: ion-sad-outline\n   * @member {String} iconIcon\n   */\n  exports.prototype['iconIcon'] = undefined;\n  /**\n   * Ex: 1051466127\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: value\n   * @member {String} inputType\n   */\n  exports.prototype['inputType'] = undefined;\n  /**\n   * Ex: ion-ios-medkit-outline\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Note of measurement\n   * @member {String} note\n   */\n  exports.prototype['note'] = undefined;\n  /**\n   * Additional meta data for the measurement\n   * @member {Object} noteObject\n   */\n  exports.prototype['noteObject'] = undefined;\n  /**\n   * Embeddable HTML with message hyperlinked with associated url\n   * @member {Object} noteHtml\n   */\n  exports.prototype['noteHtml'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} originalUnitId\n   */\n  exports.prototype['originalUnitId'] = undefined;\n  /**\n   * Original value as originally submitted\n   * @member {Number} originalValue\n   */\n  exports.prototype['originalValue'] = undefined;\n  /**\n   * Ex: img/variable_categories/treatments.png\n   * @member {String} pngPath\n   */\n  exports.prototype['pngPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.png\n   * @member {String} pngUrl\n   */\n  exports.prototype['pngUrl'] = undefined;\n  /**\n   * Link to associated product for purchase\n   * @member {String} productUrl\n   */\n  exports.prototype['productUrl'] = undefined;\n  /**\n   * Application or device used to record the measurement values\n   * @member {String} sourceName\n   */\n  exports.prototype['sourceName'] = undefined;\n  /**\n   * Ex: 2014-08-27\n   * @member {String} startDate\n   */\n  exports.prototype['startDate'] = undefined;\n  /**\n   * Seconds between the start of the event measured and 1970 (Unix timestamp)\n   * @member {Number} startTimeEpoch\n   */\n  exports.prototype['startTimeEpoch'] = undefined;\n  /**\n   * Start Time for the measurement event in UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} startTimeString\n   */\n  exports.prototype['startTimeString'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.svg\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * Abbreviated name for the unit of measurement\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} unitCategoryId\n   */\n  exports.prototype['unitCategoryId'] = undefined;\n  /**\n   * Ex: Miscellany\n   * @member {String} unitCategoryName\n   */\n  exports.prototype['unitCategoryName'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} unitId\n   */\n  exports.prototype['unitId'] = undefined;\n  /**\n   * Ex: Count\n   * @member {String} unitName\n   */\n  exports.prototype['unitName'] = undefined;\n  /**\n   * Ex: 2017-07-30 21:08:36\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * Link to associated Facebook like or Github commit, for instance\n   * @member {String} url\n   */\n  exports.prototype['url'] = undefined;\n  /**\n   * Ex: count\n   * @member {String} userVariableUnitAbbreviatedName\n   */\n  exports.prototype['userVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} userVariableUnitCategoryId\n   */\n  exports.prototype['userVariableUnitCategoryId'] = undefined;\n  /**\n   * Ex: Miscellany\n   * @member {String} userVariableUnitCategoryName\n   */\n  exports.prototype['userVariableUnitCategoryName'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} userVariableUnitId\n   */\n  exports.prototype['userVariableUnitId'] = undefined;\n  /**\n   * Ex: Count\n   * @member {String} userVariableUnitName\n   */\n  exports.prototype['userVariableUnitName'] = undefined;\n  /**\n   * Ex: 13\n   * @member {Number} userVariableVariableCategoryId\n   */\n  exports.prototype['userVariableVariableCategoryId'] = undefined;\n  /**\n   * Ex: Treatments\n   * @member {String} userVariableVariableCategoryName\n   */\n  exports.prototype['userVariableVariableCategoryName'] = undefined;\n  /**\n   * Ex: negative\n   * @member {String} valence\n   */\n  exports.prototype['valence'] = undefined;\n  /**\n   * Converted measurement value in requested unit\n   * @member {Number} value\n   */\n  exports.prototype['value'] = undefined;\n  /**\n   * Ex: 13\n   * @member {Number} variableCategoryId\n   */\n  exports.prototype['variableCategoryId'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Healthcare/pill-96.png\n   * @member {String} variableCategoryImageUrl\n   */\n  exports.prototype['variableCategoryImageUrl'] = undefined;\n  /**\n   * Ex: Treatments\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * Ex: negative\n   * @member {String} variableDescription\n   */\n  exports.prototype['variableDescription'] = undefined;\n  /**\n   * Ex: 5956846\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n  /**\n   * Name of the variable for which we are creating the measurement records\n   * @member {String} variableName\n   */\n  exports.prototype['variableName'] = undefined;\n  /**\n   * Ex: Trader Joe's Bedtime Tea\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Card\":27}],47:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.MeasurementDelete = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The MeasurementDelete model module.\n   * @module model/MeasurementDelete\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>MeasurementDelete</code>.\n   * @alias module:model/MeasurementDelete\n   * @class\n   * @param clientId {String} Your app's client id\n   */\n  var exports = function(clientId) {\n    var _this = this;\n\n\n\n\n    _this['clientId'] = clientId;\n  };\n\n  /**\n   * Constructs a <code>MeasurementDelete</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/MeasurementDelete} obj Optional instance to populate.\n   * @return {module:model/MeasurementDelete} The populated <code>MeasurementDelete</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('startTime')) {\n        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');\n      }\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n      if (data.hasOwnProperty('connectorName')) {\n        obj['connectorName'] = ApiClient.convertToType(data['connectorName'], 'String');\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Start time of the measurement to be deleted\n   * @member {Number} startTime\n   */\n  exports.prototype['startTime'] = undefined;\n  /**\n   * Variable id of the measurement to be deleted\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n  /**\n   * Name of the connector for which measurements should be deleted\n   * @member {String} connectorName\n   */\n  exports.prototype['connectorName'] = undefined;\n  /**\n   * Your app's client id\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],48:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.MeasurementItem = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The MeasurementItem model module.\n   * @module model/MeasurementItem\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>MeasurementItem</code>.\n   * @alias module:model/MeasurementItem\n   * @class\n   * @param timestamp {Number} Timestamp for the measurement event in epoch time (unixtime)\n   * @param value {Number} Measurement value\n   */\n  var exports = function(timestamp, value) {\n    var _this = this;\n\n\n    _this['timestamp'] = timestamp;\n    _this['value'] = value;\n  };\n\n  /**\n   * Constructs a <code>MeasurementItem</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/MeasurementItem} obj Optional instance to populate.\n   * @return {module:model/MeasurementItem} The populated <code>MeasurementItem</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('note')) {\n        obj['note'] = ApiClient.convertToType(data['note'], 'String');\n      }\n      if (data.hasOwnProperty('timestamp')) {\n        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Optional note to include with the measurement\n   * @member {String} note\n   */\n  exports.prototype['note'] = undefined;\n  /**\n   * Timestamp for the measurement event in epoch time (unixtime)\n   * @member {Number} timestamp\n   */\n  exports.prototype['timestamp'] = undefined;\n  /**\n   * Measurement value\n   * @member {Number} value\n   */\n  exports.prototype['value'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],49:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/MeasurementItem'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./MeasurementItem'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.MeasurementSet = factory(root.Quantimodo.ApiClient, root.Quantimodo.MeasurementItem);\n  }\n}(this, function(ApiClient, MeasurementItem) {\n  'use strict';\n\n\n\n\n  /**\n   * The MeasurementSet model module.\n   * @module model/MeasurementSet\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>MeasurementSet</code>.\n   * @alias module:model/MeasurementSet\n   * @class\n   * @param measurementItems {Array.<module:model/MeasurementItem>} Array of timestamps, values, and optional notes\n   * @param sourceName {String} Name of the application or device used to record the measurement values\n   * @param unitAbbreviatedName {String} Unit of measurement\n   * @param variableName {String} ORIGINAL name of the variable for which we are creating the measurement records\n   */\n  var exports = function(measurementItems, sourceName, unitAbbreviatedName, variableName) {\n    var _this = this;\n\n\n    _this['measurementItems'] = measurementItems;\n    _this['sourceName'] = sourceName;\n    _this['unitAbbreviatedName'] = unitAbbreviatedName;\n\n    _this['variableName'] = variableName;\n\n  };\n\n  /**\n   * Constructs a <code>MeasurementSet</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/MeasurementSet} obj Optional instance to populate.\n   * @return {module:model/MeasurementSet} The populated <code>MeasurementSet</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('combinationOperation')) {\n        obj['combinationOperation'] = ApiClient.convertToType(data['combinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('measurementItems')) {\n        obj['measurementItems'] = ApiClient.convertToType(data['measurementItems'], [MeasurementItem]);\n      }\n      if (data.hasOwnProperty('sourceName')) {\n        obj['sourceName'] = ApiClient.convertToType(data['sourceName'], 'String');\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableName')) {\n        obj['variableName'] = ApiClient.convertToType(data['variableName'], 'String');\n      }\n      if (data.hasOwnProperty('upc')) {\n        obj['upc'] = ApiClient.convertToType(data['upc'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Way to aggregate measurements over time. Options are \\\"MEAN\\\" or \\\"SUM\\\". SUM should be used for things like minutes of exercise.  If you use MEAN for exercise, then a person might exercise more minutes in one day but add separate measurements that were smaller.  So when we are doing correlational analysis, we would think that the person exercised less that day even though they exercised more.  Conversely, we must use MEAN for things such as ratings which cannot be SUMMED.\n   * @member {module:model/MeasurementSet.CombinationOperationEnum} combinationOperation\n   */\n  exports.prototype['combinationOperation'] = undefined;\n  /**\n   * Array of timestamps, values, and optional notes\n   * @member {Array.<module:model/MeasurementItem>} measurementItems\n   */\n  exports.prototype['measurementItems'] = undefined;\n  /**\n   * Name of the application or device used to record the measurement values\n   * @member {String} sourceName\n   */\n  exports.prototype['sourceName'] = undefined;\n  /**\n   * Unit of measurement\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Variable category name\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * ORIGINAL name of the variable for which we are creating the measurement records\n   * @member {String} variableName\n   */\n  exports.prototype['variableName'] = undefined;\n  /**\n   * UPC or other barcode scan result\n   * @member {String} upc\n   */\n  exports.prototype['upc'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>combinationOperation</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CombinationOperationEnum = {\n    /**\n     * value: \"MEAN\"\n     * @const\n     */\n    \"MEAN\": \"MEAN\",\n    /**\n     * value: \"SUM\"\n     * @const\n     */\n    \"SUM\": \"SUM\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./MeasurementItem\":48}],50:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.MeasurementUpdate = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The MeasurementUpdate model module.\n   * @module model/MeasurementUpdate\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>MeasurementUpdate</code>.\n   * @alias module:model/MeasurementUpdate\n   * @class\n   * @param id {Number} Variable id of the measurement to be updated\n   */\n  var exports = function(id) {\n    var _this = this;\n\n    _this['id'] = id;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>MeasurementUpdate</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/MeasurementUpdate} obj Optional instance to populate.\n   * @return {module:model/MeasurementUpdate} The populated <code>MeasurementUpdate</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('note')) {\n        obj['note'] = ApiClient.convertToType(data['note'], 'String');\n      }\n      if (data.hasOwnProperty('startTime')) {\n        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Variable id of the measurement to be updated\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * The new note for the measurement (optional)\n   * @member {String} note\n   */\n  exports.prototype['note'] = undefined;\n  /**\n   * The new timestamp for the the event in epoch seconds (optional)\n   * @member {Number} startTime\n   */\n  exports.prototype['startTime'] = undefined;\n  /**\n   * The new value of for the measurement (optional)\n   * @member {Number} value\n   */\n  exports.prototype['value'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],51:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Pair = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Pair model module.\n   * @module model/Pair\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Pair</code>.\n   * @alias module:model/Pair\n   * @class\n   * @param causeMeasurement {Number} Ex: 101341.66666667\n   * @param causeMeasurementValue {Number} Ex: 101341.66666667\n   * @param causeVariableUnitAbbreviatedName {String} Ex: mg\n   * @param effectMeasurement {Number} Ex: 7.98\n   * @param effectMeasurementValue {Number} Ex: 7.98\n   * @param effectVariableUnitAbbreviatedName {String} Ex: %\n   * @param timestamp {Number} Ex: 1464937200\n   */\n  var exports = function(causeMeasurement, causeMeasurementValue, causeVariableUnitAbbreviatedName, effectMeasurement, effectMeasurementValue, effectVariableUnitAbbreviatedName, timestamp) {\n    var _this = this;\n\n    _this['causeMeasurement'] = causeMeasurement;\n    _this['causeMeasurementValue'] = causeMeasurementValue;\n    _this['causeVariableUnitAbbreviatedName'] = causeVariableUnitAbbreviatedName;\n    _this['effectMeasurement'] = effectMeasurement;\n    _this['effectMeasurementValue'] = effectMeasurementValue;\n    _this['effectVariableUnitAbbreviatedName'] = effectVariableUnitAbbreviatedName;\n\n\n\n    _this['timestamp'] = timestamp;\n  };\n\n  /**\n   * Constructs a <code>Pair</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Pair} obj Optional instance to populate.\n   * @return {module:model/Pair} The populated <code>Pair</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('causeMeasurement')) {\n        obj['causeMeasurement'] = ApiClient.convertToType(data['causeMeasurement'], 'Number');\n      }\n      if (data.hasOwnProperty('causeMeasurementValue')) {\n        obj['causeMeasurementValue'] = ApiClient.convertToType(data['causeMeasurementValue'], 'Number');\n      }\n      if (data.hasOwnProperty('causeVariableUnitAbbreviatedName')) {\n        obj['causeVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('effectMeasurement')) {\n        obj['effectMeasurement'] = ApiClient.convertToType(data['effectMeasurement'], 'Number');\n      }\n      if (data.hasOwnProperty('effectMeasurementValue')) {\n        obj['effectMeasurementValue'] = ApiClient.convertToType(data['effectMeasurementValue'], 'Number');\n      }\n      if (data.hasOwnProperty('effectVariableUnitAbbreviatedName')) {\n        obj['effectVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('eventAt')) {\n        obj['eventAt'] = ApiClient.convertToType(data['eventAt'], 'String');\n      }\n      if (data.hasOwnProperty('eventAtUnixTime')) {\n        obj['eventAtUnixTime'] = ApiClient.convertToType(data['eventAtUnixTime'], 'Number');\n      }\n      if (data.hasOwnProperty('startTimeString')) {\n        obj['startTimeString'] = ApiClient.convertToType(data['startTimeString'], 'String');\n      }\n      if (data.hasOwnProperty('timestamp')) {\n        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: 101341.66666667\n   * @member {Number} causeMeasurement\n   */\n  exports.prototype['causeMeasurement'] = undefined;\n  /**\n   * Ex: 101341.66666667\n   * @member {Number} causeMeasurementValue\n   */\n  exports.prototype['causeMeasurementValue'] = undefined;\n  /**\n   * Ex: mg\n   * @member {String} causeVariableUnitAbbreviatedName\n   */\n  exports.prototype['causeVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 7.98\n   * @member {Number} effectMeasurement\n   */\n  exports.prototype['effectMeasurement'] = undefined;\n  /**\n   * Ex: 7.98\n   * @member {Number} effectMeasurementValue\n   */\n  exports.prototype['effectMeasurementValue'] = undefined;\n  /**\n   * Ex: %\n   * @member {String} effectVariableUnitAbbreviatedName\n   */\n  exports.prototype['effectVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 2015-08-06 15:49:02 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} eventAt\n   */\n  exports.prototype['eventAt'] = undefined;\n  /**\n   * Ex: 1438876142\n   * @member {Number} eventAtUnixTime\n   */\n  exports.prototype['eventAtUnixTime'] = undefined;\n  /**\n   * Ex: 2015-08-06 15:49:02 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} startTimeString\n   */\n  exports.prototype['startTimeString'] = undefined;\n  /**\n   * Ex: 1464937200\n   * @member {Number} timestamp\n   */\n  exports.prototype['timestamp'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],52:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ParticipantInstruction = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ParticipantInstruction model module.\n   * @module model/ParticipantInstruction\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>ParticipantInstruction</code>.\n   * @alias module:model/ParticipantInstruction\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>ParticipantInstruction</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ParticipantInstruction} obj Optional instance to populate.\n   * @return {module:model/ParticipantInstruction} The populated <code>ParticipantInstruction</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('instructionsForCauseVariable')) {\n        obj['instructionsForCauseVariable'] = ApiClient.convertToType(data['instructionsForCauseVariable'], 'String');\n      }\n      if (data.hasOwnProperty('instructionsForEffectVariable')) {\n        obj['instructionsForEffectVariable'] = ApiClient.convertToType(data['instructionsForEffectVariable'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: <a href=\\\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\\\">Obtain Fitbit</a> and use it to record your Sleep Duration. Once you have a <a href=\\\"https://www.amazon.com/Fitbit-Charge-Heart-Fitness-Wristband/dp/B01K9S260E/ref=as_li_ss_tl?ie=UTF8&qid=1493518902&sr=8-3&keywords=fitbit&th=1&linkCode=ll1&tag=quant08-20&linkId=b357b0833de73b0c4e935fd7c13a079e\\\">Fitbit</a> account, <a href=\\\"https://quantimodo.quantimo.do/ionic/Modo/www/#/app/import\\\">connect your  Fitbit account at QuantiModo</a> to automatically import and analyze your data.\n   * @member {String} instructionsForCauseVariable\n   */\n  exports.prototype['instructionsForCauseVariable'] = undefined;\n  /**\n   * Ex: <a href=\\\"https://quantimo.do\\\">Obtain QuantiModo</a> and use it to record your Overall Mood. Once you have a <a href=\\\"https://quantimo.do\\\">QuantiModo</a> account, <a href=\\\"https://quantimodo.quantimo.do/ionic/Modo/www/#/app/import\\\">connect your  QuantiModo account at QuantiModo</a> to automatically import and analyze your data.\n   * @member {String} instructionsForEffectVariable\n   */\n  exports.prototype['instructionsForEffectVariable'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],53:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Variable'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Variable'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostMeasurementsDataResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.Variable);\n  }\n}(this, function(ApiClient, Variable) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostMeasurementsDataResponse model module.\n   * @module model/PostMeasurementsDataResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostMeasurementsDataResponse</code>.\n   * @alias module:model/PostMeasurementsDataResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>PostMeasurementsDataResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostMeasurementsDataResponse} obj Optional instance to populate.\n   * @return {module:model/PostMeasurementsDataResponse} The populated <code>PostMeasurementsDataResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('userVariables')) {\n        obj['userVariables'] = ApiClient.convertToType(data['userVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Variable>} userVariables\n   */\n  exports.prototype['userVariables'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Variable\":83}],54:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/PostMeasurementsDataResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./PostMeasurementsDataResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostMeasurementsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.PostMeasurementsDataResponse);\n  }\n}(this, function(ApiClient, PostMeasurementsDataResponse) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostMeasurementsResponse model module.\n   * @module model/PostMeasurementsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostMeasurementsResponse</code>.\n   * @alias module:model/PostMeasurementsResponse\n   * @class\n   * @param status {Number} Status code\n   * @param success {Boolean} \n   */\n  var exports = function(status, success) {\n    var _this = this;\n\n\n\n    _this['status'] = status;\n    _this['success'] = success;\n\n\n  };\n\n  /**\n   * Constructs a <code>PostMeasurementsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostMeasurementsResponse} obj Optional instance to populate.\n   * @return {module:model/PostMeasurementsResponse} The populated <code>PostMeasurementsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('data')) {\n        obj['data'] = PostMeasurementsDataResponse.constructFromObject(data['data']);\n      }\n      if (data.hasOwnProperty('message')) {\n        obj['message'] = ApiClient.convertToType(data['message'], 'String');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'Number');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/PostMeasurementsDataResponse} data\n   */\n  exports.prototype['data'] = undefined;\n  /**\n   * Message\n   * @member {String} message\n   */\n  exports.prototype['message'] = undefined;\n  /**\n   * Status code\n   * @member {Number} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./PostMeasurementsDataResponse\":53}],55:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Study'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Study'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostStudyCreateResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.Study);\n  }\n}(this, function(ApiClient, Study) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostStudyCreateResponse model module.\n   * @module model/PostStudyCreateResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostStudyCreateResponse</code>.\n   * @alias module:model/PostStudyCreateResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>PostStudyCreateResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostStudyCreateResponse} obj Optional instance to populate.\n   * @return {module:model/PostStudyCreateResponse} The populated <code>PostStudyCreateResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('study')) {\n        obj['study'] = Study.constructFromObject(data['study']);\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Study} study\n   */\n  exports.prototype['study'] = undefined;\n  /**\n   * Ex: ok\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Study\":62}],56:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostStudyPublishResponse = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostStudyPublishResponse model module.\n   * @module model/PostStudyPublishResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostStudyPublishResponse</code>.\n   * @alias module:model/PostStudyPublishResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>PostStudyPublishResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostStudyPublishResponse} obj Optional instance to populate.\n   * @return {module:model/PostStudyPublishResponse} The populated <code>PostStudyPublishResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: ok\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],57:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/TrackingReminder', 'model/TrackingReminderNotification', 'model/Variable'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./TrackingReminder'), require('./TrackingReminderNotification'), require('./Variable'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostTrackingRemindersDataResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.TrackingReminder, root.Quantimodo.TrackingReminderNotification, root.Quantimodo.Variable);\n  }\n}(this, function(ApiClient, TrackingReminder, TrackingReminderNotification, Variable) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostTrackingRemindersDataResponse model module.\n   * @module model/PostTrackingRemindersDataResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostTrackingRemindersDataResponse</code>.\n   * @alias module:model/PostTrackingRemindersDataResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>PostTrackingRemindersDataResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostTrackingRemindersDataResponse} obj Optional instance to populate.\n   * @return {module:model/PostTrackingRemindersDataResponse} The populated <code>PostTrackingRemindersDataResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('trackingReminderNotifications')) {\n        obj['trackingReminderNotifications'] = ApiClient.convertToType(data['trackingReminderNotifications'], [TrackingReminderNotification]);\n      }\n      if (data.hasOwnProperty('trackingReminders')) {\n        obj['trackingReminders'] = ApiClient.convertToType(data['trackingReminders'], [TrackingReminder]);\n      }\n      if (data.hasOwnProperty('userVariables')) {\n        obj['userVariables'] = ApiClient.convertToType(data['userVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/TrackingReminderNotification>} trackingReminderNotifications\n   */\n  exports.prototype['trackingReminderNotifications'] = undefined;\n  /**\n   * @member {Array.<module:model/TrackingReminder>} trackingReminders\n   */\n  exports.prototype['trackingReminders'] = undefined;\n  /**\n   * @member {Array.<module:model/Variable>} userVariables\n   */\n  exports.prototype['userVariables'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./TrackingReminder\":72,\"./TrackingReminderNotification\":74,\"./Variable\":83}],58:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/PostTrackingRemindersDataResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./PostTrackingRemindersDataResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostTrackingRemindersResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.PostTrackingRemindersDataResponse);\n  }\n}(this, function(ApiClient, PostTrackingRemindersDataResponse) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostTrackingRemindersResponse model module.\n   * @module model/PostTrackingRemindersResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostTrackingRemindersResponse</code>.\n   * @alias module:model/PostTrackingRemindersResponse\n   * @class\n   * @param status {Number} Status code\n   * @param success {Boolean} \n   */\n  var exports = function(status, success) {\n    var _this = this;\n\n\n\n    _this['status'] = status;\n    _this['success'] = success;\n\n\n  };\n\n  /**\n   * Constructs a <code>PostTrackingRemindersResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostTrackingRemindersResponse} obj Optional instance to populate.\n   * @return {module:model/PostTrackingRemindersResponse} The populated <code>PostTrackingRemindersResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('data')) {\n        obj['data'] = PostTrackingRemindersDataResponse.constructFromObject(data['data']);\n      }\n      if (data.hasOwnProperty('message')) {\n        obj['message'] = ApiClient.convertToType(data['message'], 'String');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'Number');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/PostTrackingRemindersDataResponse} data\n   */\n  exports.prototype['data'] = undefined;\n  /**\n   * Message\n   * @member {String} message\n   */\n  exports.prototype['message'] = undefined;\n  /**\n   * Status code\n   * @member {Number} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./PostTrackingRemindersDataResponse\":57}],59:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostUserSettingsDataResponse = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostUserSettingsDataResponse model module.\n   * @module model/PostUserSettingsDataResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostUserSettingsDataResponse</code>.\n   * @alias module:model/PostUserSettingsDataResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>PostUserSettingsDataResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostUserSettingsDataResponse} obj Optional instance to populate.\n   * @return {module:model/PostUserSettingsDataResponse} The populated <code>PostUserSettingsDataResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('purchaseId')) {\n        obj['purchaseId'] = ApiClient.convertToType(data['purchaseId'], 'Number');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: 1\n   * @member {Number} purchaseId\n   */\n  exports.prototype['purchaseId'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],60:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/PostUserSettingsDataResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./PostUserSettingsDataResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.PostUserSettingsResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.PostUserSettingsDataResponse);\n  }\n}(this, function(ApiClient, PostUserSettingsDataResponse) {\n  'use strict';\n\n\n\n\n  /**\n   * The PostUserSettingsResponse model module.\n   * @module model/PostUserSettingsResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>PostUserSettingsResponse</code>.\n   * @alias module:model/PostUserSettingsResponse\n   * @class\n   * @param status {Number} Status code\n   * @param success {Boolean} \n   */\n  var exports = function(status, success) {\n    var _this = this;\n\n\n\n    _this['status'] = status;\n    _this['success'] = success;\n\n\n  };\n\n  /**\n   * Constructs a <code>PostUserSettingsResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PostUserSettingsResponse} obj Optional instance to populate.\n   * @return {module:model/PostUserSettingsResponse} The populated <code>PostUserSettingsResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('data')) {\n        obj['data'] = PostUserSettingsDataResponse.constructFromObject(data['data']);\n      }\n      if (data.hasOwnProperty('message')) {\n        obj['message'] = ApiClient.convertToType(data['message'], 'String');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'Number');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/PostUserSettingsDataResponse} data\n   */\n  exports.prototype['data'] = undefined;\n  /**\n   * Message\n   * @member {String} message\n   */\n  exports.prototype['message'] = undefined;\n  /**\n   * Status code\n   * @member {Number} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./PostUserSettingsDataResponse\":59}],61:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.ShareInvitationBody = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ShareInvitationBody model module.\n   * @module model/ShareInvitationBody\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>ShareInvitationBody</code>.\n   * @alias module:model/ShareInvitationBody\n   * @class\n   * @param emailAddress {String} Enter the email address of the friend, family member, or health-care provider that you would like to give access to your measurements\n   */\n  var exports = function(emailAddress) {\n    var _this = this;\n\n    _this['emailAddress'] = emailAddress;\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>ShareInvitationBody</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ShareInvitationBody} obj Optional instance to populate.\n   * @return {module:model/ShareInvitationBody} The populated <code>ShareInvitationBody</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('emailAddress')) {\n        obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('emailSubject')) {\n        obj['emailSubject'] = ApiClient.convertToType(data['emailSubject'], 'String');\n      }\n      if (data.hasOwnProperty('emailBody')) {\n        obj['emailBody'] = ApiClient.convertToType(data['emailBody'], 'String');\n      }\n      if (data.hasOwnProperty('scopes')) {\n        obj['scopes'] = ApiClient.convertToType(data['scopes'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Enter the email address of the friend, family member, or health-care provider that you would like to give access to your measurements\n   * @member {String} emailAddress\n   */\n  exports.prototype['emailAddress'] = undefined;\n  /**\n   * Name of the individual that the user wishes to have access to their measurements\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Ex: I would like to share my measurements with you!\n   * @member {String} emailSubject\n   */\n  exports.prototype['emailSubject'] = undefined;\n  /**\n   * Ex: I would like to share my data with you so you can help me identify find discover hidden causes of and new treatments for my illness.\n   * @member {String} emailBody\n   */\n  exports.prototype['emailBody'] = undefined;\n  /**\n   * Space separated list of scopes to grant to the recipient (i.e. readmeasurements, writemeasurements, measurements:read\n   * @member {String} scopes\n   */\n  exports.prototype['scopes'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],62:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Card', 'model/Correlation', 'model/ParticipantInstruction', 'model/StudyCharts', 'model/StudyHtml', 'model/StudyImages', 'model/StudyLinks', 'model/StudySharing', 'model/StudyText', 'model/StudyVotes', 'model/Variable'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Card'), require('./Correlation'), require('./ParticipantInstruction'), require('./StudyCharts'), require('./StudyHtml'), require('./StudyImages'), require('./StudyLinks'), require('./StudySharing'), require('./StudyText'), require('./StudyVotes'), require('./Variable'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Study = factory(root.Quantimodo.ApiClient, root.Quantimodo.Card, root.Quantimodo.Correlation, root.Quantimodo.ParticipantInstruction, root.Quantimodo.StudyCharts, root.Quantimodo.StudyHtml, root.Quantimodo.StudyImages, root.Quantimodo.StudyLinks, root.Quantimodo.StudySharing, root.Quantimodo.StudyText, root.Quantimodo.StudyVotes, root.Quantimodo.Variable);\n  }\n}(this, function(ApiClient, Card, Correlation, ParticipantInstruction, StudyCharts, StudyHtml, StudyImages, StudyLinks, StudySharing, StudyText, StudyVotes, Variable) {\n  'use strict';\n\n\n\n\n  /**\n   * The Study model module.\n   * @module model/Study\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Study</code>.\n   * A study analyzes the relationship between a predictor variable like gluten-intake and an outcome of interest such as overall mood.\n   * @alias module:model/Study\n   * @class\n   * @param type {String} Ex: population, cohort, or individual\n   */\n  var exports = function(type) {\n    var _this = this;\n\n    _this['type'] = type;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Study</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Study} obj Optional instance to populate.\n   * @return {module:model/Study} The populated <code>Study</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('type')) {\n        obj['type'] = ApiClient.convertToType(data['type'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');\n      }\n      if (data.hasOwnProperty('studyId')) {\n        obj['studyId'] = ApiClient.convertToType(data['studyId'], 'String');\n      }\n      if (data.hasOwnProperty('causeVariable')) {\n        obj['causeVariable'] = Variable.constructFromObject(data['causeVariable']);\n      }\n      if (data.hasOwnProperty('causeVariableName')) {\n        obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('studyCharts')) {\n        obj['studyCharts'] = StudyCharts.constructFromObject(data['studyCharts']);\n      }\n      if (data.hasOwnProperty('effectVariable')) {\n        obj['effectVariable'] = Variable.constructFromObject(data['effectVariable']);\n      }\n      if (data.hasOwnProperty('effectVariableName')) {\n        obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('participantInstructions')) {\n        obj['participantInstructions'] = ParticipantInstruction.constructFromObject(data['participantInstructions']);\n      }\n      if (data.hasOwnProperty('statistics')) {\n        obj['statistics'] = Correlation.constructFromObject(data['statistics']);\n      }\n      if (data.hasOwnProperty('studyCard')) {\n        obj['studyCard'] = Card.constructFromObject(data['studyCard']);\n      }\n      if (data.hasOwnProperty('studyHtml')) {\n        obj['studyHtml'] = StudyHtml.constructFromObject(data['studyHtml']);\n      }\n      if (data.hasOwnProperty('studyImages')) {\n        obj['studyImages'] = StudyImages.constructFromObject(data['studyImages']);\n      }\n      if (data.hasOwnProperty('studyLinks')) {\n        obj['studyLinks'] = StudyLinks.constructFromObject(data['studyLinks']);\n      }\n      if (data.hasOwnProperty('studySharing')) {\n        obj['studySharing'] = StudySharing.constructFromObject(data['studySharing']);\n      }\n      if (data.hasOwnProperty('studyText')) {\n        obj['studyText'] = StudyText.constructFromObject(data['studyText']);\n      }\n      if (data.hasOwnProperty('studyVotes')) {\n        obj['studyVotes'] = StudyVotes.constructFromObject(data['studyVotes']);\n      }\n      if (data.hasOwnProperty('joined')) {\n        obj['joined'] = ApiClient.convertToType(data['joined'], 'Boolean');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: population, cohort, or individual\n   * @member {String} type\n   */\n  exports.prototype['type'] = undefined;\n  /**\n   * The user id of the principal investigator or subject if an individual studies\n   * @member {String} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * ID of the cohort study which is necessary to allow participants to join\n   * @member {String} studyId\n   */\n  exports.prototype['studyId'] = undefined;\n  /**\n   * @member {module:model/Variable} causeVariable\n   */\n  exports.prototype['causeVariable'] = undefined;\n  /**\n   * Ex: Sleep Quality\n   * @member {String} causeVariableName\n   */\n  exports.prototype['causeVariableName'] = undefined;\n  /**\n   * @member {module:model/StudyCharts} studyCharts\n   */\n  exports.prototype['studyCharts'] = undefined;\n  /**\n   * @member {module:model/Variable} effectVariable\n   */\n  exports.prototype['effectVariable'] = undefined;\n  /**\n   * Ex: Overall Mood\n   * @member {String} effectVariableName\n   */\n  exports.prototype['effectVariableName'] = undefined;\n  /**\n   * @member {module:model/ParticipantInstruction} participantInstructions\n   */\n  exports.prototype['participantInstructions'] = undefined;\n  /**\n   * @member {module:model/Correlation} statistics\n   */\n  exports.prototype['statistics'] = undefined;\n  /**\n   * Contains a summary, images, sharing buttons, and links\n   * @member {module:model/Card} studyCard\n   */\n  exports.prototype['studyCard'] = undefined;\n  /**\n   * @member {module:model/StudyHtml} studyHtml\n   */\n  exports.prototype['studyHtml'] = undefined;\n  /**\n   * @member {module:model/StudyImages} studyImages\n   */\n  exports.prototype['studyImages'] = undefined;\n  /**\n   * @member {module:model/StudyLinks} studyLinks\n   */\n  exports.prototype['studyLinks'] = undefined;\n  /**\n   * @member {module:model/StudySharing} studySharing\n   */\n  exports.prototype['studySharing'] = undefined;\n  /**\n   * @member {module:model/StudyText} studyText\n   */\n  exports.prototype['studyText'] = undefined;\n  /**\n   * @member {module:model/StudyVotes} studyVotes\n   */\n  exports.prototype['studyVotes'] = undefined;\n  /**\n   * True if you are sharing your data with this study\n   * @member {Boolean} joined\n   */\n  exports.prototype['joined'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Card\":27,\"./Correlation\":32,\"./ParticipantInstruction\":52,\"./StudyCharts\":63,\"./StudyHtml\":65,\"./StudyImages\":66,\"./StudyLinks\":68,\"./StudySharing\":69,\"./StudyText\":70,\"./StudyVotes\":71,\"./Variable\":83}],63:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Chart'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Chart'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyCharts = factory(root.Quantimodo.ApiClient, root.Quantimodo.Chart);\n  }\n}(this, function(ApiClient, Chart) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyCharts model module.\n   * @module model/StudyCharts\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyCharts</code>.\n   * An object with various chart properties each property contain and svg and Highcharts configuration\n   * @alias module:model/StudyCharts\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>StudyCharts</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyCharts} obj Optional instance to populate.\n   * @return {module:model/StudyCharts} The populated <code>StudyCharts</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('populationTraitScatterPlot')) {\n        obj['populationTraitScatterPlot'] = Chart.constructFromObject(data['populationTraitScatterPlot']);\n      }\n      if (data.hasOwnProperty('outcomeDistributionColumnChart')) {\n        obj['outcomeDistributionColumnChart'] = Chart.constructFromObject(data['outcomeDistributionColumnChart']);\n      }\n      if (data.hasOwnProperty('predictorDistributionColumnChart')) {\n        obj['predictorDistributionColumnChart'] = Chart.constructFromObject(data['predictorDistributionColumnChart']);\n      }\n      if (data.hasOwnProperty('correlationScatterPlot')) {\n        obj['correlationScatterPlot'] = Chart.constructFromObject(data['correlationScatterPlot']);\n      }\n      if (data.hasOwnProperty('pairsOverTimeLineChart')) {\n        obj['pairsOverTimeLineChart'] = Chart.constructFromObject(data['pairsOverTimeLineChart']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Chart} populationTraitScatterPlot\n   */\n  exports.prototype['populationTraitScatterPlot'] = undefined;\n  /**\n   * @member {module:model/Chart} outcomeDistributionColumnChart\n   */\n  exports.prototype['outcomeDistributionColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} predictorDistributionColumnChart\n   */\n  exports.prototype['predictorDistributionColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} correlationScatterPlot\n   */\n  exports.prototype['correlationScatterPlot'] = undefined;\n  /**\n   * @member {module:model/Chart} pairsOverTimeLineChart\n   */\n  exports.prototype['pairsOverTimeLineChart'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Chart\":28}],64:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyCreationBody = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyCreationBody model module.\n   * @module model/StudyCreationBody\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyCreationBody</code>.\n   * @alias module:model/StudyCreationBody\n   * @class\n   * @param causeVariableName {String} Name of predictor variable\n   * @param effectVariableName {String} Name of the outcome variable\n   * @param type {module:model/StudyCreationBody.TypeEnum} Individual studies are based on data of a single user. Group studies are based on data from a specific group of individuals who have joined.  Global studies are based on aggregated and anonymously shared data from all users.\n   */\n  var exports = function(causeVariableName, effectVariableName, type) {\n    var _this = this;\n\n    _this['causeVariableName'] = causeVariableName;\n    _this['effectVariableName'] = effectVariableName;\n\n    _this['type'] = type;\n  };\n\n  /**\n   * Constructs a <code>StudyCreationBody</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyCreationBody} obj Optional instance to populate.\n   * @return {module:model/StudyCreationBody} The populated <code>StudyCreationBody</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('causeVariableName')) {\n        obj['causeVariableName'] = ApiClient.convertToType(data['causeVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableName')) {\n        obj['effectVariableName'] = ApiClient.convertToType(data['effectVariableName'], 'String');\n      }\n      if (data.hasOwnProperty('studyTitle')) {\n        obj['studyTitle'] = ApiClient.convertToType(data['studyTitle'], 'String');\n      }\n      if (data.hasOwnProperty('type')) {\n        obj['type'] = ApiClient.convertToType(data['type'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Name of predictor variable\n   * @member {String} causeVariableName\n   */\n  exports.prototype['causeVariableName'] = undefined;\n  /**\n   * Name of the outcome variable\n   * @member {String} effectVariableName\n   */\n  exports.prototype['effectVariableName'] = undefined;\n  /**\n   * Title of your study (optional)\n   * @member {String} studyTitle\n   */\n  exports.prototype['studyTitle'] = undefined;\n  /**\n   * Individual studies are based on data of a single user. Group studies are based on data from a specific group of individuals who have joined.  Global studies are based on aggregated and anonymously shared data from all users.\n   * @member {module:model/StudyCreationBody.TypeEnum} type\n   */\n  exports.prototype['type'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>type</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.TypeEnum = {\n    /**\n     * value: \"individual\"\n     * @const\n     */\n    \"individual\": \"individual\",\n    /**\n     * value: \"group\"\n     * @const\n     */\n    \"group\": \"group\",\n    /**\n     * value: \"global\"\n     * @const\n     */\n    \"global\": \"global\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],65:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyHtml = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyHtml model module.\n   * @module model/StudyHtml\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyHtml</code>.\n   * @alias module:model/StudyHtml\n   * @class\n   * @param chartHtml {String} Embeddable chart html\n   * @param fullStudyHtml {String} Embeddable study text html including charts.  Modifiable css classes are study-title, study-section-header, study-section-body\n   */\n  var exports = function(chartHtml, fullStudyHtml) {\n    var _this = this;\n\n    _this['chartHtml'] = chartHtml;\n\n\n    _this['fullStudyHtml'] = fullStudyHtml;\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>StudyHtml</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyHtml} obj Optional instance to populate.\n   * @return {module:model/StudyHtml} The populated <code>StudyHtml</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('chartHtml')) {\n        obj['chartHtml'] = ApiClient.convertToType(data['chartHtml'], 'String');\n      }\n      if (data.hasOwnProperty('downloadButtonsHtml')) {\n        obj['downloadButtonsHtml'] = ApiClient.convertToType(data['downloadButtonsHtml'], 'String');\n      }\n      if (data.hasOwnProperty('fullPageWithHead')) {\n        obj['fullPageWithHead'] = ApiClient.convertToType(data['fullPageWithHead'], 'String');\n      }\n      if (data.hasOwnProperty('fullStudyHtml')) {\n        obj['fullStudyHtml'] = ApiClient.convertToType(data['fullStudyHtml'], 'String');\n      }\n      if (data.hasOwnProperty('fullStudyHtmlWithCssStyles')) {\n        obj['fullStudyHtmlWithCssStyles'] = ApiClient.convertToType(data['fullStudyHtmlWithCssStyles'], 'String');\n      }\n      if (data.hasOwnProperty('participantInstructionsHtml')) {\n        obj['participantInstructionsHtml'] = ApiClient.convertToType(data['participantInstructionsHtml'], 'String');\n      }\n      if (data.hasOwnProperty('statisticsTableHtml')) {\n        obj['statisticsTableHtml'] = ApiClient.convertToType(data['statisticsTableHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studyAbstractHtml')) {\n        obj['studyAbstractHtml'] = ApiClient.convertToType(data['studyAbstractHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studyHeaderHtml')) {\n        obj['studyHeaderHtml'] = ApiClient.convertToType(data['studyHeaderHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studyImageHtml')) {\n        obj['studyImageHtml'] = ApiClient.convertToType(data['studyImageHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studyMetaHtml')) {\n        obj['studyMetaHtml'] = ApiClient.convertToType(data['studyMetaHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studyTextHtml')) {\n        obj['studyTextHtml'] = ApiClient.convertToType(data['studyTextHtml'], 'String');\n      }\n      if (data.hasOwnProperty('socialSharingButtonHtml')) {\n        obj['socialSharingButtonHtml'] = ApiClient.convertToType(data['socialSharingButtonHtml'], 'String');\n      }\n      if (data.hasOwnProperty('studySummaryBoxHtml')) {\n        obj['studySummaryBoxHtml'] = ApiClient.convertToType(data['studySummaryBoxHtml'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Embeddable chart html\n   * @member {String} chartHtml\n   */\n  exports.prototype['chartHtml'] = undefined;\n  /**\n   * Play Store, App Store, Chrome Web Store\n   * @member {String} downloadButtonsHtml\n   */\n  exports.prototype['downloadButtonsHtml'] = undefined;\n  /**\n   * Embeddable study including HTML head section charts.  Modifiable css classes are study-title, study-section-header, study-section-body\n   * @member {String} fullPageWithHead\n   */\n  exports.prototype['fullPageWithHead'] = undefined;\n  /**\n   * Embeddable study text html including charts.  Modifiable css classes are study-title, study-section-header, study-section-body\n   * @member {String} fullStudyHtml\n   */\n  exports.prototype['fullStudyHtml'] = undefined;\n  /**\n   * Embeddable study html including charts and css styling\n   * @member {String} fullStudyHtmlWithCssStyles\n   */\n  exports.prototype['fullStudyHtmlWithCssStyles'] = undefined;\n  /**\n   * Instructions for study participation\n   * @member {String} participantInstructionsHtml\n   */\n  exports.prototype['participantInstructionsHtml'] = undefined;\n  /**\n   * Embeddable table with statistics\n   * @member {String} statisticsTableHtml\n   */\n  exports.prototype['statisticsTableHtml'] = undefined;\n  /**\n   * Text summary\n   * @member {String} studyAbstractHtml\n   */\n  exports.prototype['studyAbstractHtml'] = undefined;\n  /**\n   * Title, study image, abstract with CSS styling\n   * @member {String} studyHeaderHtml\n   */\n  exports.prototype['studyHeaderHtml'] = undefined;\n  /**\n   * PNG image\n   * @member {String} studyImageHtml\n   */\n  exports.prototype['studyImageHtml'] = undefined;\n  /**\n   * Facebook, Twitter, Google+\n   * @member {String} studyMetaHtml\n   */\n  exports.prototype['studyMetaHtml'] = undefined;\n  /**\n   * Formatted study text sections\n   * @member {String} studyTextHtml\n   */\n  exports.prototype['studyTextHtml'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} socialSharingButtonHtml\n   */\n  exports.prototype['socialSharingButtonHtml'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} studySummaryBoxHtml\n   */\n  exports.prototype['studySummaryBoxHtml'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],66:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyImages = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyImages model module.\n   * @module model/StudyImages\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyImages</code>.\n   * @alias module:model/StudyImages\n   * @class\n   * @param gaugeImage {String} Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship.png\n   * @param gaugeImageSquare {String} Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png\n   * @param imageUrl {String} Ex: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-moderately-positive-relationship_sleep_emotions_logo_background.png\n   */\n  var exports = function(gaugeImage, gaugeImageSquare, imageUrl) {\n    var _this = this;\n\n\n\n\n\n    _this['gaugeImage'] = gaugeImage;\n    _this['gaugeImageSquare'] = gaugeImageSquare;\n\n    _this['imageUrl'] = imageUrl;\n\n\n  };\n\n  /**\n   * Constructs a <code>StudyImages</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyImages} obj Optional instance to populate.\n   * @return {module:model/StudyImages} The populated <code>StudyImages</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('causeVariableImageUrl')) {\n        obj['causeVariableImageUrl'] = ApiClient.convertToType(data['causeVariableImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('causeVariableIonIcon')) {\n        obj['causeVariableIonIcon'] = ApiClient.convertToType(data['causeVariableIonIcon'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableImageUrl')) {\n        obj['effectVariableImageUrl'] = ApiClient.convertToType(data['effectVariableImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableIonIcon')) {\n        obj['effectVariableIonIcon'] = ApiClient.convertToType(data['effectVariableIonIcon'], 'String');\n      }\n      if (data.hasOwnProperty('gaugeImage')) {\n        obj['gaugeImage'] = ApiClient.convertToType(data['gaugeImage'], 'String');\n      }\n      if (data.hasOwnProperty('gaugeImageSquare')) {\n        obj['gaugeImageSquare'] = ApiClient.convertToType(data['gaugeImageSquare'], 'String');\n      }\n      if (data.hasOwnProperty('gaugeSharingImageUrl')) {\n        obj['gaugeSharingImageUrl'] = ApiClient.convertToType(data['gaugeSharingImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('imageUrl')) {\n        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('robotSharingImageUrl')) {\n        obj['robotSharingImageUrl'] = ApiClient.convertToType(data['robotSharingImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('avatar')) {\n        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png\n   * @member {String} causeVariableImageUrl\n   */\n  exports.prototype['causeVariableImageUrl'] = undefined;\n  /**\n   * Ex: ion-ios-cloudy-night-outline\n   * @member {String} causeVariableIonIcon\n   */\n  exports.prototype['causeVariableIonIcon'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png\n   * @member {String} effectVariableImageUrl\n   */\n  exports.prototype['effectVariableImageUrl'] = undefined;\n  /**\n   * Ex: ion-happy-outline\n   * @member {String} effectVariableIonIcon\n   */\n  exports.prototype['effectVariableIonIcon'] = undefined;\n  /**\n   * Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship.png\n   * @member {String} gaugeImage\n   */\n  exports.prototype['gaugeImage'] = undefined;\n  /**\n   * Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png\n   * @member {String} gaugeImageSquare\n   */\n  exports.prototype['gaugeImageSquare'] = undefined;\n  /**\n   * Image with gauge and category images\n   * @member {String} gaugeSharingImageUrl\n   */\n  exports.prototype['gaugeSharingImageUrl'] = undefined;\n  /**\n   * Ex: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-moderately-positive-relationship_sleep_emotions_logo_background.png\n   * @member {String} imageUrl\n   */\n  exports.prototype['imageUrl'] = undefined;\n  /**\n   * Image with robot and category images\n   * @member {String} robotSharingImageUrl\n   */\n  exports.prototype['robotSharingImageUrl'] = undefined;\n  /**\n   * Avatar of the principal investigator\n   * @member {String} avatar\n   */\n  exports.prototype['avatar'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],67:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Study', 'model/TrackingReminder', 'model/TrackingReminderNotification'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Study'), require('./TrackingReminder'), require('./TrackingReminderNotification'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyJoinResponse = factory(root.Quantimodo.ApiClient, root.Quantimodo.Study, root.Quantimodo.TrackingReminder, root.Quantimodo.TrackingReminderNotification);\n  }\n}(this, function(ApiClient, Study, TrackingReminder, TrackingReminderNotification) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyJoinResponse model module.\n   * @module model/StudyJoinResponse\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyJoinResponse</code>.\n   * @alias module:model/StudyJoinResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>StudyJoinResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyJoinResponse} obj Optional instance to populate.\n   * @return {module:model/StudyJoinResponse} The populated <code>StudyJoinResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('study')) {\n        obj['study'] = Study.constructFromObject(data['study']);\n      }\n      if (data.hasOwnProperty('trackingReminders')) {\n        obj['trackingReminders'] = ApiClient.convertToType(data['trackingReminders'], [TrackingReminder]);\n      }\n      if (data.hasOwnProperty('trackingReminderNotifications')) {\n        obj['trackingReminderNotifications'] = ApiClient.convertToType(data['trackingReminderNotifications'], [TrackingReminderNotification]);\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('success')) {\n        obj['success'] = ApiClient.convertToType(data['success'], 'Boolean');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('summary')) {\n        obj['summary'] = ApiClient.convertToType(data['summary'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Study} study\n   */\n  exports.prototype['study'] = undefined;\n  /**\n   * @member {Array.<module:model/TrackingReminder>} trackingReminders\n   */\n  exports.prototype['trackingReminders'] = undefined;\n  /**\n   * @member {Array.<module:model/TrackingReminderNotification>} trackingReminderNotifications\n   */\n  exports.prototype['trackingReminderNotifications'] = undefined;\n  /**\n   * Ex: ok\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} success\n   */\n  exports.prototype['success'] = undefined;\n  /**\n   * Can be used as body of help info popup\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Can be used as title in help info popup\n   * @member {String} summary\n   */\n  exports.prototype['summary'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Study\":62,\"./TrackingReminder\":72,\"./TrackingReminderNotification\":74}],68:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyLinks = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyLinks model module.\n   * @module model/StudyLinks\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyLinks</code>.\n   * @alias module:model/StudyLinks\n   * @class\n   * @param studyLinkEmail {String} Ex: mailto:?subject=N1%20Study%3A%20Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!\n   * @param studyLinkFacebook {String} Ex: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230\n   * @param studyLinkGoogle {String} Ex: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230\n   * @param studyLinkStatic {String} Ex: https://local.quantimo.do/api/v2/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230\n   * @param studyLinkDynamic {String} Ex: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230\n   * @param studyLinkTwitter {String} Ex: https://twitter.com/home?status=Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%20%40quantimodo\n   */\n  var exports = function(studyLinkEmail, studyLinkFacebook, studyLinkGoogle, studyLinkStatic, studyLinkDynamic, studyLinkTwitter) {\n    var _this = this;\n\n\n    _this['studyLinkEmail'] = studyLinkEmail;\n    _this['studyLinkFacebook'] = studyLinkFacebook;\n    _this['studyLinkGoogle'] = studyLinkGoogle;\n    _this['studyLinkStatic'] = studyLinkStatic;\n    _this['studyLinkDynamic'] = studyLinkDynamic;\n    _this['studyLinkTwitter'] = studyLinkTwitter;\n  };\n\n  /**\n   * Constructs a <code>StudyLinks</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyLinks} obj Optional instance to populate.\n   * @return {module:model/StudyLinks} The populated <code>StudyLinks</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('studyJoinLink')) {\n        obj['studyJoinLink'] = ApiClient.convertToType(data['studyJoinLink'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkEmail')) {\n        obj['studyLinkEmail'] = ApiClient.convertToType(data['studyLinkEmail'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkFacebook')) {\n        obj['studyLinkFacebook'] = ApiClient.convertToType(data['studyLinkFacebook'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkGoogle')) {\n        obj['studyLinkGoogle'] = ApiClient.convertToType(data['studyLinkGoogle'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkStatic')) {\n        obj['studyLinkStatic'] = ApiClient.convertToType(data['studyLinkStatic'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkDynamic')) {\n        obj['studyLinkDynamic'] = ApiClient.convertToType(data['studyLinkDynamic'], 'String');\n      }\n      if (data.hasOwnProperty('studyLinkTwitter')) {\n        obj['studyLinkTwitter'] = ApiClient.convertToType(data['studyLinkTwitter'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Share this link with potential study participants\n   * @member {String} studyJoinLink\n   */\n  exports.prototype['studyJoinLink'] = undefined;\n  /**\n   * Ex: mailto:?subject=N1%20Study%3A%20Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood&body=Check%20out%20my%20study%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%0A%0AHave%20a%20great%20day!\n   * @member {String} studyLinkEmail\n   */\n  exports.prototype['studyLinkEmail'] = undefined;\n  /**\n   * Ex: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230\n   * @member {String} studyLinkFacebook\n   */\n  exports.prototype['studyLinkFacebook'] = undefined;\n  /**\n   * Ex: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230\n   * @member {String} studyLinkGoogle\n   */\n  exports.prototype['studyLinkGoogle'] = undefined;\n  /**\n   * Ex: https://local.quantimo.do/api/v2/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230\n   * @member {String} studyLinkStatic\n   */\n  exports.prototype['studyLinkStatic'] = undefined;\n  /**\n   * Ex: https://local.quantimo.do/ionic/Modo/www/index.html#/app/study?causeVariableName=Sleep%20Quality&effectVariableName=Overall%20Mood&userId=230\n   * @member {String} studyLinkDynamic\n   */\n  exports.prototype['studyLinkDynamic'] = undefined;\n  /**\n   * Ex: https://twitter.com/home?status=Sleep%20Quality%20Predicts%20Higher%20Overall%20Mood%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fstudy%3FcauseVariableName%3DSleep%2520Quality%26effectVariableName%3DOverall%2520Mood%26userId%3D230%20%40quantimodo\n   * @member {String} studyLinkTwitter\n   */\n  exports.prototype['studyLinkTwitter'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],69:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudySharing = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudySharing model module.\n   * @module model/StudySharing\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudySharing</code>.\n   * @alias module:model/StudySharing\n   * @class\n   * @param shareUserMeasurements {Boolean} Would you like to make this study publicly visible?\n   * @param sharingDescription {String} Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   * @param sharingTitle {String} Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   */\n  var exports = function(shareUserMeasurements, sharingDescription, sharingTitle) {\n    var _this = this;\n\n    _this['shareUserMeasurements'] = shareUserMeasurements;\n    _this['sharingDescription'] = sharingDescription;\n    _this['sharingTitle'] = sharingTitle;\n  };\n\n  /**\n   * Constructs a <code>StudySharing</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudySharing} obj Optional instance to populate.\n   * @return {module:model/StudySharing} The populated <code>StudySharing</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('shareUserMeasurements')) {\n        obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');\n      }\n      if (data.hasOwnProperty('sharingDescription')) {\n        obj['sharingDescription'] = ApiClient.convertToType(data['sharingDescription'], 'String');\n      }\n      if (data.hasOwnProperty('sharingTitle')) {\n        obj['sharingTitle'] = ApiClient.convertToType(data['sharingTitle'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Would you like to make this study publicly visible?\n   * @member {Boolean} shareUserMeasurements\n   */\n  exports.prototype['shareUserMeasurements'] = undefined;\n  /**\n   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} sharingDescription\n   */\n  exports.prototype['sharingDescription'] = undefined;\n  /**\n   * Ex: N1 Study: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} sharingTitle\n   */\n  exports.prototype['sharingTitle'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],70:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyText = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyText model module.\n   * @module model/StudyText\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyText</code>.\n   * @alias module:model/StudyText\n   * @class\n   * @param studyAbstract {String} Ex: Aggregated data from 21 suggests with a low degree of confidence (p=0.097) that Very Distracting Time (Work) has a moderately positive predictive relationship (R=0.354) with Video Activities  (Activity).  The highest quartile of Video Activities measurements were observed following an average 2.03h Very Distracting Timeper day.  The lowest quartile of Video Activities  measurements were observed following an average 1.04h Very Distracting Timeper day.\n   * @param studyDesign {String} Ex: This study is based on data donated by  21 QuantiModo users. Thus, the study design is equivalent to the aggregation of 21 separate n=1 observational natural experiments.\n   * @param studyLimitations {String} Ex: As with any human experiment, it was impossible to control for all potentially confounding variables.             Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.             However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great             confidence rule out non-existent relationships. For instance, if we discover no relationship between mood             and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship.             <br>             <br>             We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship.             The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.             The list of the criteria is as follows:             <br>             1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.             <br>             2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.             <br>             3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.             <br>             4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).             <br>             5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.             <br>             6. Plausibility: A plausible mechanism between cause and effect is helpful.             <br>             7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.             <br>             8. Experiment: \\\"Occasionally it is possible to appeal to experimental evidence\\\".             <br>             9. Analogy: The effect of similar factors may be considered.             <br>             <br>              The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  146 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Very Distracting Time values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,             one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely             that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will             naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.\n   * @param studyObjective {String} Ex: The objective of this study is to determine the nature of the relationship (if any) between the Very Distracting Time and the Video Activities. Additionally, we attempt to determine the Very Distracting Time values most likely to produce optimal Video Activities values.\n   * @param studyResults {String} Ex: This analysis suggests that higher Very Distracting Time (Work) generally predicts negative Video Activities (p = 0.097). Video Activities is, on average, 36%  higher after around 2.03 Very Distracting Time.  After an onset delay of 168 hours, Video Activities is, on average, 16%  lower than its average over the 168 hours following around 1.04 Very Distracting Time.  146 data points were used in this analysis.  The value for Very Distracting Time changed 2984 times, effectively running 1492 separate natural experiments. The top quartile outcome values are preceded by an average 2.03 h of Very Distracting Time.  The bottom quartile outcome values are preceded by an average 1.04 h of Very Distracting Time.  Forward Pearson Correlation Coefficient was 0.354 (p=0.097, 95% CI -0.437 to 1.144 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0.208 (P=0.097, 95% CI -0.583 to 0.998, onset delay = -0 hours, duration of action = -168 hours). When the Very Distracting Time value is closer to 2.03 h than 1.04 h, the Video Activities value which follows is, on average, 36% percent higher than its typical value.  When the Very Distracting Time value is closer to 1.04 h than 2.03 h, the Video Activities value which follows is 0% lower than its typical value.  Video Activities is 5 h (67% higher) on average after days with around 5 h Very Distracting Time\n   * @param studyTitle {String} Ex: N1 Study: Very Distracting Time Predicts Negative Video Activities\n   */\n  var exports = function(studyAbstract, studyDesign, studyLimitations, studyObjective, studyResults, studyTitle) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['studyAbstract'] = studyAbstract;\n    _this['studyDesign'] = studyDesign;\n    _this['studyLimitations'] = studyLimitations;\n    _this['studyObjective'] = studyObjective;\n    _this['studyResults'] = studyResults;\n    _this['studyTitle'] = studyTitle;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>StudyText</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyText} obj Optional instance to populate.\n   * @return {module:model/StudyText} The populated <code>StudyText</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('averageEffectFollowingHighCauseExplanation')) {\n        obj['averageEffectFollowingHighCauseExplanation'] = ApiClient.convertToType(data['averageEffectFollowingHighCauseExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('averageEffectFollowingLowCauseExplanation')) {\n        obj['averageEffectFollowingLowCauseExplanation'] = ApiClient.convertToType(data['averageEffectFollowingLowCauseExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('valuePredictingHighOutcomeExplanation')) {\n        obj['valuePredictingHighOutcomeExplanation'] = ApiClient.convertToType(data['valuePredictingHighOutcomeExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('valuePredictingLowOutcomeExplanation')) {\n        obj['valuePredictingLowOutcomeExplanation'] = ApiClient.convertToType(data['valuePredictingLowOutcomeExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('dataAnalysis')) {\n        obj['dataAnalysis'] = ApiClient.convertToType(data['dataAnalysis'], 'String');\n      }\n      if (data.hasOwnProperty('dataSources')) {\n        obj['dataSources'] = ApiClient.convertToType(data['dataSources'], 'String');\n      }\n      if (data.hasOwnProperty('dataSourcesParagraphForCause')) {\n        obj['dataSourcesParagraphForCause'] = ApiClient.convertToType(data['dataSourcesParagraphForCause'], 'String');\n      }\n      if (data.hasOwnProperty('dataSourcesParagraphForEffect')) {\n        obj['dataSourcesParagraphForEffect'] = ApiClient.convertToType(data['dataSourcesParagraphForEffect'], 'String');\n      }\n      if (data.hasOwnProperty('lastCauseDailyValueSentenceExtended')) {\n        obj['lastCauseDailyValueSentenceExtended'] = ApiClient.convertToType(data['lastCauseDailyValueSentenceExtended'], 'String');\n      }\n      if (data.hasOwnProperty('lastCauseAndOptimalValueSentence')) {\n        obj['lastCauseAndOptimalValueSentence'] = ApiClient.convertToType(data['lastCauseAndOptimalValueSentence'], 'String');\n      }\n      if (data.hasOwnProperty('lastCauseDailyValueSentence')) {\n        obj['lastCauseDailyValueSentence'] = ApiClient.convertToType(data['lastCauseDailyValueSentence'], 'String');\n      }\n      if (data.hasOwnProperty('optimalDailyValueSentence')) {\n        obj['optimalDailyValueSentence'] = ApiClient.convertToType(data['optimalDailyValueSentence'], 'String');\n      }\n      if (data.hasOwnProperty('participantInstructions')) {\n        obj['participantInstructions'] = ApiClient.convertToType(data['participantInstructions'], 'String');\n      }\n      if (data.hasOwnProperty('predictorExplanation')) {\n        obj['predictorExplanation'] = ApiClient.convertToType(data['predictorExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('significanceExplanation')) {\n        obj['significanceExplanation'] = ApiClient.convertToType(data['significanceExplanation'], 'String');\n      }\n      if (data.hasOwnProperty('studyAbstract')) {\n        obj['studyAbstract'] = ApiClient.convertToType(data['studyAbstract'], 'String');\n      }\n      if (data.hasOwnProperty('studyDesign')) {\n        obj['studyDesign'] = ApiClient.convertToType(data['studyDesign'], 'String');\n      }\n      if (data.hasOwnProperty('studyLimitations')) {\n        obj['studyLimitations'] = ApiClient.convertToType(data['studyLimitations'], 'String');\n      }\n      if (data.hasOwnProperty('studyObjective')) {\n        obj['studyObjective'] = ApiClient.convertToType(data['studyObjective'], 'String');\n      }\n      if (data.hasOwnProperty('studyResults')) {\n        obj['studyResults'] = ApiClient.convertToType(data['studyResults'], 'String');\n      }\n      if (data.hasOwnProperty('studyTitle')) {\n        obj['studyTitle'] = ApiClient.convertToType(data['studyTitle'], 'String');\n      }\n      if (data.hasOwnProperty('studyInvitation')) {\n        obj['studyInvitation'] = ApiClient.convertToType(data['studyInvitation'], 'String');\n      }\n      if (data.hasOwnProperty('studyQuestion')) {\n        obj['studyQuestion'] = ApiClient.convertToType(data['studyQuestion'], 'String');\n      }\n      if (data.hasOwnProperty('studyBackground')) {\n        obj['studyBackground'] = ApiClient.convertToType(data['studyBackground'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: Overall Mood is 3.55/5 (15% higher) on average after days with around 4.19/5 Sleep Quality\n   * @member {String} averageEffectFollowingHighCauseExplanation\n   */\n  exports.prototype['averageEffectFollowingHighCauseExplanation'] = undefined;\n  /**\n   * Ex: Overall Mood is 2.65/5 (14% lower) on average after days with around 1.97/5 Sleep Quality\n   * @member {String} averageEffectFollowingLowCauseExplanation\n   */\n  exports.prototype['averageEffectFollowingLowCauseExplanation'] = undefined;\n  /**\n   * Ex: Overall Mood, on average, 17% higher after around 4.14/5 Sleep Quality\n   * @member {String} valuePredictingHighOutcomeExplanation\n   */\n  exports.prototype['valuePredictingHighOutcomeExplanation'] = undefined;\n  /**\n   * Ex: Overall Mood, on average, 11% lower after around 3.03/5 Sleep Quality\n   * @member {String} valuePredictingLowOutcomeExplanation\n   */\n  exports.prototype['valuePredictingLowOutcomeExplanation'] = undefined;\n  /**\n   * Ex: It was assumed that 0 hours would pass before a change in Very Distracting Time would produce an observable change in Video Activities.  It was assumed that Very Distracting Time could produce an observable change in Video Activities for as much as 7 days after the stimulus event.\n   * @member {String} dataAnalysis\n   */\n  exports.prototype['dataAnalysis'] = undefined;\n  /**\n   * Ex: Very Distracting Time data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.<br>Video Activities data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.\n   * @member {String} dataSources\n   */\n  exports.prototype['dataSources'] = undefined;\n  /**\n   * Ex: Very Distracting Time data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.<br>Video Activities data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.\n   * @member {String} dataSourcesParagraphForCause\n   */\n  exports.prototype['dataSourcesParagraphForCause'] = undefined;\n  /**\n   * Ex: Very Distracting Time data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.<br>Video Activities data was primarily collected using <a href=\\\"https://www.rescuetime.com/rp/quantimodo/plans\\\">RescueTime</a>. Detailed reports show which applications and websites you spent time on. Activities are automatically grouped into pre-defined categories with built-in productivity scores covering thousands of websites and applications. You can customize categories and productivity scores to meet your needs.\n   * @member {String} dataSourcesParagraphForEffect\n   */\n  exports.prototype['dataSourcesParagraphForEffect'] = undefined;\n  /**\n   * Ex: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} lastCauseDailyValueSentenceExtended\n   */\n  exports.prototype['lastCauseDailyValueSentenceExtended'] = undefined;\n  /**\n   * Ex: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} lastCauseAndOptimalValueSentence\n   */\n  exports.prototype['lastCauseAndOptimalValueSentence'] = undefined;\n  /**\n   * Ex: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} lastCauseDailyValueSentence\n   */\n  exports.prototype['lastCauseDailyValueSentence'] = undefined;\n  /**\n   * Ex: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} optimalDailyValueSentence\n   */\n  exports.prototype['optimalDailyValueSentence'] = undefined;\n  /**\n   * Instructions for study participation\n   * @member {String} participantInstructions\n   */\n  exports.prototype['participantInstructions'] = undefined;\n  /**\n   * Ex: Sleep Quality Predicts Higher Overall Mood\n   * @member {String} predictorExplanation\n   */\n  exports.prototype['predictorExplanation'] = undefined;\n  /**\n   * Ex: Using a two-tailed t-test with alpha = 0.05, it was determined that the change in Video Activities is statistically significant at 95% confidence interval.\n   * @member {String} significanceExplanation\n   */\n  exports.prototype['significanceExplanation'] = undefined;\n  /**\n   * Ex: Aggregated data from 21 suggests with a low degree of confidence (p=0.097) that Very Distracting Time (Work) has a moderately positive predictive relationship (R=0.354) with Video Activities  (Activity).  The highest quartile of Video Activities measurements were observed following an average 2.03h Very Distracting Timeper day.  The lowest quartile of Video Activities  measurements were observed following an average 1.04h Very Distracting Timeper day.\n   * @member {String} studyAbstract\n   */\n  exports.prototype['studyAbstract'] = undefined;\n  /**\n   * Ex: This study is based on data donated by  21 QuantiModo users. Thus, the study design is equivalent to the aggregation of 21 separate n=1 observational natural experiments.\n   * @member {String} studyDesign\n   */\n  exports.prototype['studyDesign'] = undefined;\n  /**\n   * Ex: As with any human experiment, it was impossible to control for all potentially confounding variables.             Correlation does not necessarily imply correlation.  We can never know for sure if one factor is definitely the cause of an outcome.             However, lack of correlation definitely implies the lack of a causal relationship.  Hence, we can with great             confidence rule out non-existent relationships. For instance, if we discover no relationship between mood             and an antidepressant this information is just as or even more valuable than the discovery that there is a relationship.             <br>             <br>             We can also take advantage of several characteristics of time series data from many subjects  to infer the likelihood of a causal relationship if we do find a correlational relationship.             The criteria for causation are a group of minimal conditions necessary to provide adequate evidence of a causal relationship between an incidence and a possible consequence.             The list of the criteria is as follows:             <br>             1. Strength (effect size): A small association does not mean that there is not a causal effect, though the larger the association, the more likely that it is causal.             <br>             2. Consistency (reproducibility): Consistent findings observed by different persons in different places with different samples strengthens the likelihood of an effect.             <br>             3. Specificity: Causation is likely if a very specific population at a specific site and disease with no other likely explanation. The more specific an association between a factor and an effect is, the bigger the probability of a causal relationship.             <br>             4. Temporality: The effect has to occur after the cause (and if there is an expected delay between the cause and expected effect, then the effect must occur after that delay).             <br>             5. Biological gradient: Greater exposure should generally lead to greater incidence of the effect. However, in some cases, the mere presence of the factor can trigger the effect. In other cases, an inverse proportion is observed: greater exposure leads to lower incidence.             <br>             6. Plausibility: A plausible mechanism between cause and effect is helpful.             <br>             7. Coherence: Coherence between epidemiological and laboratory findings increases the likelihood of an effect.             <br>             8. Experiment: \\\"Occasionally it is possible to appeal to experimental evidence\\\".             <br>             9. Analogy: The effect of similar factors may be considered.             <br>             <br>              The confidence in a causal relationship is bolstered by the fact that time-precedence was taken into account in all calculations. Furthermore, in accordance with the law of large numbers (LLN), the predictive power and accuracy of these results will continually grow over time.  146 paired data points were used in this analysis.   Assuming that the relationship is merely coincidental, as the participant independently modifies their Very Distracting Time values, the observed strength of the relationship will decline until it is below the threshold of significance.  To it another way, in the case that we do find a spurious correlation, suggesting that banana intake improves mood for instance,             one will likely increase their banana intake.  Due to the fact that this correlation is spurious, it is unlikely             that you will see a continued and persistent corresponding increase in mood.  So over time, the spurious correlation will             naturally dissipate.Furthermore, it will be very enlightening to aggregate this data with the data from other participants  with similar genetic, diseasomic, environmentomic, and demographic profiles.\n   * @member {String} studyLimitations\n   */\n  exports.prototype['studyLimitations'] = undefined;\n  /**\n   * Ex: The objective of this study is to determine the nature of the relationship (if any) between the Very Distracting Time and the Video Activities. Additionally, we attempt to determine the Very Distracting Time values most likely to produce optimal Video Activities values.\n   * @member {String} studyObjective\n   */\n  exports.prototype['studyObjective'] = undefined;\n  /**\n   * Ex: This analysis suggests that higher Very Distracting Time (Work) generally predicts negative Video Activities (p = 0.097). Video Activities is, on average, 36%  higher after around 2.03 Very Distracting Time.  After an onset delay of 168 hours, Video Activities is, on average, 16%  lower than its average over the 168 hours following around 1.04 Very Distracting Time.  146 data points were used in this analysis.  The value for Very Distracting Time changed 2984 times, effectively running 1492 separate natural experiments. The top quartile outcome values are preceded by an average 2.03 h of Very Distracting Time.  The bottom quartile outcome values are preceded by an average 1.04 h of Very Distracting Time.  Forward Pearson Correlation Coefficient was 0.354 (p=0.097, 95% CI -0.437 to 1.144 onset delay = 0 hours, duration of action = 168 hours) .  The Reverse Pearson Correlation Coefficient was 0.208 (P=0.097, 95% CI -0.583 to 0.998, onset delay = -0 hours, duration of action = -168 hours). When the Very Distracting Time value is closer to 2.03 h than 1.04 h, the Video Activities value which follows is, on average, 36% percent higher than its typical value.  When the Very Distracting Time value is closer to 1.04 h than 2.03 h, the Video Activities value which follows is 0% lower than its typical value.  Video Activities is 5 h (67% higher) on average after days with around 5 h Very Distracting Time\n   * @member {String} studyResults\n   */\n  exports.prototype['studyResults'] = undefined;\n  /**\n   * Ex: N1 Study: Very Distracting Time Predicts Negative Video Activities\n   * @member {String} studyTitle\n   */\n  exports.prototype['studyTitle'] = undefined;\n  /**\n   * Help us determine if Remeron affects Overall Mood!\n   * @member {String} studyInvitation\n   */\n  exports.prototype['studyInvitation'] = undefined;\n  /**\n   * Does Remeron affect Overall Mood?\n   * @member {String} studyQuestion\n   */\n  exports.prototype['studyQuestion'] = undefined;\n  /**\n   * In order to reduce suffering through the advancement of human knowledge...\n   * @member {String} studyBackground\n   */\n  exports.prototype['studyBackground'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],71:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.StudyVotes = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The StudyVotes model module.\n   * @module model/StudyVotes\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>StudyVotes</code>.\n   * @alias module:model/StudyVotes\n   * @class\n   * @param averageVote {Number} Average of all user votes with 1 representing an up-vote and 0 representing a down-vote. Ex: 0.9855\n   * @param userVote {Number} 1 if the current user has up-voted the study and 0 if they down-voted it. Null means no vote. Ex: 1 or 0 or null\n   */\n  var exports = function(averageVote, userVote) {\n    var _this = this;\n\n    _this['averageVote'] = averageVote;\n    _this['userVote'] = userVote;\n  };\n\n  /**\n   * Constructs a <code>StudyVotes</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/StudyVotes} obj Optional instance to populate.\n   * @return {module:model/StudyVotes} The populated <code>StudyVotes</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('averageVote')) {\n        obj['averageVote'] = ApiClient.convertToType(data['averageVote'], 'Number');\n      }\n      if (data.hasOwnProperty('userVote')) {\n        obj['userVote'] = ApiClient.convertToType(data['userVote'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Average of all user votes with 1 representing an up-vote and 0 representing a down-vote. Ex: 0.9855\n   * @member {Number} averageVote\n   */\n  exports.prototype['averageVote'] = undefined;\n  /**\n   * 1 if the current user has up-voted the study and 0 if they down-voted it. Null means no vote. Ex: 1 or 0 or null\n   * @member {Number} userVote\n   */\n  exports.prototype['userVote'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],72:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Card', 'model/TrackingReminderNotificationAction', 'model/Unit'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Card'), require('./TrackingReminderNotificationAction'), require('./Unit'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminder = factory(root.Quantimodo.ApiClient, root.Quantimodo.Card, root.Quantimodo.TrackingReminderNotificationAction, root.Quantimodo.Unit);\n  }\n}(this, function(ApiClient, Card, TrackingReminderNotificationAction, Unit) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminder model module.\n   * @module model/TrackingReminder\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminder</code>.\n   * @alias module:model/TrackingReminder\n   * @class\n   * @param unitAbbreviatedName {String} Ex: /5\n   * @param reminderFrequency {Number} Number of seconds between one reminder and the next\n   * @param variableCategoryName {String} Name of the variable category to be used when sending measurements\n   * @param variableName {String} Name of the variable to be used when sending measurements\n   */\n  var exports = function(unitAbbreviatedName, reminderFrequency, variableCategoryName, variableName) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['unitAbbreviatedName'] = unitAbbreviatedName;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['reminderFrequency'] = reminderFrequency;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['variableCategoryName'] = variableCategoryName;\n\n\n    _this['variableName'] = variableName;\n  };\n\n  /**\n   * Constructs a <code>TrackingReminder</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminder} obj Optional instance to populate.\n   * @return {module:model/TrackingReminder} The populated <code>TrackingReminder</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionArray')) {\n        obj['actionArray'] = ApiClient.convertToType(data['actionArray'], [TrackingReminderNotificationAction]);\n      }\n      if (data.hasOwnProperty('availableUnits')) {\n        obj['availableUnits'] = ApiClient.convertToType(data['availableUnits'], [Unit]);\n      }\n      if (data.hasOwnProperty('bestStudyLink')) {\n        obj['bestStudyLink'] = ApiClient.convertToType(data['bestStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestUserStudyLink')) {\n        obj['bestUserStudyLink'] = ApiClient.convertToType(data['bestUserStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestPopulationStudyLink')) {\n        obj['bestPopulationStudyLink'] = ApiClient.convertToType(data['bestPopulationStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('optimalValueMessage')) {\n        obj['optimalValueMessage'] = ApiClient.convertToType(data['optimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('commonOptimalValueMessage')) {\n        obj['commonOptimalValueMessage'] = ApiClient.convertToType(data['commonOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('userOptimalValueMessage')) {\n        obj['userOptimalValueMessage'] = ApiClient.convertToType(data['userOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('combinationOperation')) {\n        obj['combinationOperation'] = ApiClient.convertToType(data['combinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('unitCategoryId')) {\n        obj['unitCategoryId'] = ApiClient.convertToType(data['unitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitCategoryName')) {\n        obj['unitCategoryName'] = ApiClient.convertToType(data['unitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('unitId')) {\n        obj['unitId'] = ApiClient.convertToType(data['unitId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitName')) {\n        obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');\n      }\n      if (data.hasOwnProperty('defaultValue')) {\n        obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'Number');\n      }\n      if (data.hasOwnProperty('enabled')) {\n        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');\n      }\n      if (data.hasOwnProperty('email')) {\n        obj['email'] = ApiClient.convertToType(data['email'], 'Boolean');\n      }\n      if (data.hasOwnProperty('errorMessage')) {\n        obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');\n      }\n      if (data.hasOwnProperty('fillingValue')) {\n        obj['fillingValue'] = ApiClient.convertToType(data['fillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('firstDailyReminderTime')) {\n        obj['firstDailyReminderTime'] = ApiClient.convertToType(data['firstDailyReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('frequencyTextDescription')) {\n        obj['frequencyTextDescription'] = ApiClient.convertToType(data['frequencyTextDescription'], 'String');\n      }\n      if (data.hasOwnProperty('frequencyTextDescriptionWithTime')) {\n        obj['frequencyTextDescriptionWithTime'] = ApiClient.convertToType(data['frequencyTextDescriptionWithTime'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('inputType')) {\n        obj['inputType'] = ApiClient.convertToType(data['inputType'], 'String');\n      }\n      if (data.hasOwnProperty('instructions')) {\n        obj['instructions'] = ApiClient.convertToType(data['instructions'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('lastTracked')) {\n        obj['lastTracked'] = ApiClient.convertToType(data['lastTracked'], 'String');\n      }\n      if (data.hasOwnProperty('lastValue')) {\n        obj['lastValue'] = ApiClient.convertToType(data['lastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('latestTrackingReminderNotificationReminderTime')) {\n        obj['latestTrackingReminderNotificationReminderTime'] = ApiClient.convertToType(data['latestTrackingReminderNotificationReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('localDailyReminderNotificationTimes')) {\n        obj['localDailyReminderNotificationTimes'] = ApiClient.convertToType(data['localDailyReminderNotificationTimes'], ['String']);\n      }\n      if (data.hasOwnProperty('localDailyReminderNotificationTimesForAllReminders')) {\n        obj['localDailyReminderNotificationTimesForAllReminders'] = ApiClient.convertToType(data['localDailyReminderNotificationTimesForAllReminders'], ['String']);\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Boolean');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('nextReminderTimeEpochSeconds')) {\n        obj['nextReminderTimeEpochSeconds'] = ApiClient.convertToType(data['nextReminderTimeEpochSeconds'], 'Number');\n      }\n      if (data.hasOwnProperty('notificationBar')) {\n        obj['notificationBar'] = ApiClient.convertToType(data['notificationBar'], 'Boolean');\n      }\n      if (data.hasOwnProperty('numberOfRawMeasurements')) {\n        obj['numberOfRawMeasurements'] = ApiClient.convertToType(data['numberOfRawMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUniqueValues')) {\n        obj['numberOfUniqueValues'] = ApiClient.convertToType(data['numberOfUniqueValues'], 'Number');\n      }\n      if (data.hasOwnProperty('outcome')) {\n        obj['outcome'] = ApiClient.convertToType(data['outcome'], 'Boolean');\n      }\n      if (data.hasOwnProperty('pngPath')) {\n        obj['pngPath'] = ApiClient.convertToType(data['pngPath'], 'String');\n      }\n      if (data.hasOwnProperty('pngUrl')) {\n        obj['pngUrl'] = ApiClient.convertToType(data['pngUrl'], 'String');\n      }\n      if (data.hasOwnProperty('productUrl')) {\n        obj['productUrl'] = ApiClient.convertToType(data['productUrl'], 'String');\n      }\n      if (data.hasOwnProperty('popUp')) {\n        obj['popUp'] = ApiClient.convertToType(data['popUp'], 'Boolean');\n      }\n      if (data.hasOwnProperty('question')) {\n        obj['question'] = ApiClient.convertToType(data['question'], 'String');\n      }\n      if (data.hasOwnProperty('longQuestion')) {\n        obj['longQuestion'] = ApiClient.convertToType(data['longQuestion'], 'String');\n      }\n      if (data.hasOwnProperty('reminderEndTime')) {\n        obj['reminderEndTime'] = ApiClient.convertToType(data['reminderEndTime'], 'String');\n      }\n      if (data.hasOwnProperty('reminderFrequency')) {\n        obj['reminderFrequency'] = ApiClient.convertToType(data['reminderFrequency'], 'Number');\n      }\n      if (data.hasOwnProperty('reminderSound')) {\n        obj['reminderSound'] = ApiClient.convertToType(data['reminderSound'], 'String');\n      }\n      if (data.hasOwnProperty('reminderStartEpochSeconds')) {\n        obj['reminderStartEpochSeconds'] = ApiClient.convertToType(data['reminderStartEpochSeconds'], 'Number');\n      }\n      if (data.hasOwnProperty('reminderStartTime')) {\n        obj['reminderStartTime'] = ApiClient.convertToType(data['reminderStartTime'], 'String');\n      }\n      if (data.hasOwnProperty('reminderStartTimeLocal')) {\n        obj['reminderStartTimeLocal'] = ApiClient.convertToType(data['reminderStartTimeLocal'], 'String');\n      }\n      if (data.hasOwnProperty('reminderStartTimeLocalHumanFormatted')) {\n        obj['reminderStartTimeLocalHumanFormatted'] = ApiClient.convertToType(data['reminderStartTimeLocalHumanFormatted'], 'String');\n      }\n      if (data.hasOwnProperty('repeating')) {\n        obj['repeating'] = ApiClient.convertToType(data['repeating'], 'Boolean');\n      }\n      if (data.hasOwnProperty('secondDailyReminderTime')) {\n        obj['secondDailyReminderTime'] = ApiClient.convertToType(data['secondDailyReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('secondToLastValue')) {\n        obj['secondToLastValue'] = ApiClient.convertToType(data['secondToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('sms')) {\n        obj['sms'] = ApiClient.convertToType(data['sms'], 'Boolean');\n      }\n      if (data.hasOwnProperty('startTrackingDate')) {\n        obj['startTrackingDate'] = ApiClient.convertToType(data['startTrackingDate'], 'String');\n      }\n      if (data.hasOwnProperty('stopTrackingDate')) {\n        obj['stopTrackingDate'] = ApiClient.convertToType(data['stopTrackingDate'], 'String');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('thirdDailyReminderTime')) {\n        obj['thirdDailyReminderTime'] = ApiClient.convertToType(data['thirdDailyReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('thirdToLastValue')) {\n        obj['thirdToLastValue'] = ApiClient.convertToType(data['thirdToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingReminderId')) {\n        obj['trackingReminderId'] = ApiClient.convertToType(data['trackingReminderId'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingReminderImageUrl')) {\n        obj['trackingReminderImageUrl'] = ApiClient.convertToType(data['trackingReminderImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('upc')) {\n        obj['upc'] = ApiClient.convertToType(data['upc'], 'String');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitAbbreviatedName')) {\n        obj['userVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['userVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryId')) {\n        obj['userVariableUnitCategoryId'] = ApiClient.convertToType(data['userVariableUnitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryName')) {\n        obj['userVariableUnitCategoryName'] = ApiClient.convertToType(data['userVariableUnitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitId')) {\n        obj['userVariableUnitId'] = ApiClient.convertToType(data['userVariableUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitName')) {\n        obj['userVariableUnitName'] = ApiClient.convertToType(data['userVariableUnitName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryId')) {\n        obj['userVariableVariableCategoryId'] = ApiClient.convertToType(data['userVariableVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryName')) {\n        obj['userVariableVariableCategoryName'] = ApiClient.convertToType(data['userVariableVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('valence')) {\n        obj['valence'] = ApiClient.convertToType(data['valence'], 'String');\n      }\n      if (data.hasOwnProperty('valueAndFrequencyTextDescription')) {\n        obj['valueAndFrequencyTextDescription'] = ApiClient.convertToType(data['valueAndFrequencyTextDescription'], 'String');\n      }\n      if (data.hasOwnProperty('valueAndFrequencyTextDescriptionWithTime')) {\n        obj['valueAndFrequencyTextDescriptionWithTime'] = ApiClient.convertToType(data['valueAndFrequencyTextDescriptionWithTime'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryId')) {\n        obj['variableCategoryId'] = ApiClient.convertToType(data['variableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableCategoryImageUrl')) {\n        obj['variableCategoryImageUrl'] = ApiClient.convertToType(data['variableCategoryImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableDescription')) {\n        obj['variableDescription'] = ApiClient.convertToType(data['variableDescription'], 'String');\n      }\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableName')) {\n        obj['variableName'] = ApiClient.convertToType(data['variableName'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/TrackingReminderNotificationAction>} actionArray\n   */\n  exports.prototype['actionArray'] = undefined;\n  /**\n   * @member {Array.<module:model/Unit>} availableUnits\n   */\n  exports.prototype['availableUnits'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user or population\n   * @member {String} bestStudyLink\n   */\n  exports.prototype['bestStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user\n   * @member {String} bestUserStudyLink\n   */\n  exports.prototype['bestUserStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for population\n   * @member {String} bestPopulationStudyLink\n   */\n  exports.prototype['bestPopulationStudyLink'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user or population\n   * @member {String} optimalValueMessage\n   */\n  exports.prototype['optimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for population\n   * @member {String} commonOptimalValueMessage\n   */\n  exports.prototype['commonOptimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user\n   * @member {String} userOptimalValueMessage\n   */\n  exports.prototype['userOptimalValueMessage'] = undefined;\n  /**\n   * Card containing instructions, image, text, link and relevant import buttons\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * The way multiple measurements are aggregated over time\n   * @member {module:model/TrackingReminder.CombinationOperationEnum} combinationOperation\n   */\n  exports.prototype['combinationOperation'] = undefined;\n  /**\n   * Ex: 2016-05-18 02:24:08 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Ex: Trader Joe's Bedtime Tea\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} unitCategoryId\n   */\n  exports.prototype['unitCategoryId'] = undefined;\n  /**\n   * Ex: Rating\n   * @member {String} unitCategoryName\n   */\n  exports.prototype['unitCategoryName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} unitId\n   */\n  exports.prototype['unitId'] = undefined;\n  /**\n   * Ex: 1 to 5 Rating\n   * @member {String} unitName\n   */\n  exports.prototype['unitName'] = undefined;\n  /**\n   * Default value to use for the measurement when tracking\n   * @member {Number} defaultValue\n   */\n  exports.prototype['defaultValue'] = undefined;\n  /**\n   * If a tracking reminder is enabled, tracking reminder notifications will be generated for this variable.\n   * @member {Boolean} enabled\n   */\n  exports.prototype['enabled'] = undefined;\n  /**\n   * True if the reminders should be delivered via email\n   * @member {Boolean} email\n   */\n  exports.prototype['email'] = undefined;\n  /**\n   * Ex: reminderStartTimeLocal is less than $user->earliestReminderTime or greater than  $user->latestReminderTime\n   * @member {String} errorMessage\n   */\n  exports.prototype['errorMessage'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} fillingValue\n   */\n  exports.prototype['fillingValue'] = undefined;\n  /**\n   * Ex: 02:45:20 in UTC timezone\n   * @member {String} firstDailyReminderTime\n   */\n  exports.prototype['firstDailyReminderTime'] = undefined;\n  /**\n   * Ex: Daily\n   * @member {String} frequencyTextDescription\n   */\n  exports.prototype['frequencyTextDescription'] = undefined;\n  /**\n   * Ex: Daily at 09:45 PM\n   * @member {String} frequencyTextDescriptionWithTime\n   */\n  exports.prototype['frequencyTextDescriptionWithTime'] = undefined;\n  /**\n   * id\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: saddestFaceIsFive\n   * @member {String} inputType\n   */\n  exports.prototype['inputType'] = undefined;\n  /**\n   * Ex: I am an instruction!\n   * @member {String} instructions\n   */\n  exports.prototype['instructions'] = undefined;\n  /**\n   * Ex: ion-sad-outline\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the last time a measurement was received for this user and variable\n   * @member {String} lastTracked\n   */\n  exports.prototype['lastTracked'] = undefined;\n  /**\n   * Ex: 2\n   * @member {Number} lastValue\n   */\n  exports.prototype['lastValue'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss  timestamp for the reminder time of the latest tracking reminder notification that has been pre-emptively generated in the database\n   * @member {String} latestTrackingReminderNotificationReminderTime\n   */\n  exports.prototype['latestTrackingReminderNotificationReminderTime'] = undefined;\n  /**\n   * @member {Array.<String>} localDailyReminderNotificationTimes\n   */\n  exports.prototype['localDailyReminderNotificationTimes'] = undefined;\n  /**\n   * @member {Array.<String>} localDailyReminderNotificationTimesForAllReminders\n   */\n  exports.prototype['localDailyReminderNotificationTimesForAllReminders'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Ex: 1501555520\n   * @member {Number} nextReminderTimeEpochSeconds\n   */\n  exports.prototype['nextReminderTimeEpochSeconds'] = undefined;\n  /**\n   * True if the reminders should appear in the notification bar\n   * @member {Boolean} notificationBar\n   */\n  exports.prototype['notificationBar'] = undefined;\n  /**\n   * Ex: 445\n   * @member {Number} numberOfRawMeasurements\n   */\n  exports.prototype['numberOfRawMeasurements'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} numberOfUniqueValues\n   */\n  exports.prototype['numberOfUniqueValues'] = undefined;\n  /**\n   * Indicates whether or not the variable is usually an outcome of interest such as a symptom or emotion\n   * @member {Boolean} outcome\n   */\n  exports.prototype['outcome'] = undefined;\n  /**\n   * Ex: img/variable_categories/symptoms.png\n   * @member {String} pngPath\n   */\n  exports.prototype['pngPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/symptoms.png\n   * @member {String} pngUrl\n   */\n  exports.prototype['pngUrl'] = undefined;\n  /**\n   * Link to associated product for purchase\n   * @member {String} productUrl\n   */\n  exports.prototype['productUrl'] = undefined;\n  /**\n   * True if the reminders should appear as a popup notification\n   * @member {Boolean} popUp\n   */\n  exports.prototype['popUp'] = undefined;\n  /**\n   * Ex: How is your overall mood?\n   * @member {String} question\n   */\n  exports.prototype['question'] = undefined;\n  /**\n   * Ex: How is your overall mood on a scale of 1 to 5??\n   * @member {String} longQuestion\n   */\n  exports.prototype['longQuestion'] = undefined;\n  /**\n   * Latest time of day at which reminders should appear in UTC HH:MM:SS format\n   * @member {String} reminderEndTime\n   */\n  exports.prototype['reminderEndTime'] = undefined;\n  /**\n   * Number of seconds between one reminder and the next\n   * @member {Number} reminderFrequency\n   */\n  exports.prototype['reminderFrequency'] = undefined;\n  /**\n   * String identifier for the sound to accompany the reminder\n   * @member {String} reminderSound\n   */\n  exports.prototype['reminderSound'] = undefined;\n  /**\n   * Ex: 1469760320\n   * @member {Number} reminderStartEpochSeconds\n   */\n  exports.prototype['reminderStartEpochSeconds'] = undefined;\n  /**\n   * Earliest time of day at which reminders should appear in UTC HH:MM:SS format\n   * @member {String} reminderStartTime\n   */\n  exports.prototype['reminderStartTime'] = undefined;\n  /**\n   * Ex: 21:45:20\n   * @member {String} reminderStartTimeLocal\n   */\n  exports.prototype['reminderStartTimeLocal'] = undefined;\n  /**\n   * Ex: 09:45 PM\n   * @member {String} reminderStartTimeLocalHumanFormatted\n   */\n  exports.prototype['reminderStartTimeLocalHumanFormatted'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} repeating\n   */\n  exports.prototype['repeating'] = undefined;\n  /**\n   * Ex: 01:00:00\n   * @member {String} secondDailyReminderTime\n   */\n  exports.prototype['secondDailyReminderTime'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} secondToLastValue\n   */\n  exports.prototype['secondToLastValue'] = undefined;\n  /**\n   * True if the reminders should be delivered via SMS\n   * @member {Boolean} sms\n   */\n  exports.prototype['sms'] = undefined;\n  /**\n   * Earliest date on which the user should be reminded to track in YYYY-MM-DD format\n   * @member {String} startTrackingDate\n   */\n  exports.prototype['startTrackingDate'] = undefined;\n  /**\n   * Latest date on which the user should be reminded to track in YYYY-MM-DD format\n   * @member {String} stopTrackingDate\n   */\n  exports.prototype['stopTrackingDate'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/symptoms.svg\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * Ex: 20:00:00\n   * @member {String} thirdDailyReminderTime\n   */\n  exports.prototype['thirdDailyReminderTime'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} thirdToLastValue\n   */\n  exports.prototype['thirdToLastValue'] = undefined;\n  /**\n   * Ex: 11841\n   * @member {Number} trackingReminderId\n   */\n  exports.prototype['trackingReminderId'] = undefined;\n  /**\n   * Ex: Not Found\n   * @member {String} trackingReminderImageUrl\n   */\n  exports.prototype['trackingReminderImageUrl'] = undefined;\n  /**\n   * UPC or other barcode scan result\n   * @member {String} upc\n   */\n  exports.prototype['upc'] = undefined;\n  /**\n   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * ID of User\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} userVariableUnitAbbreviatedName\n   */\n  exports.prototype['userVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} userVariableUnitCategoryId\n   */\n  exports.prototype['userVariableUnitCategoryId'] = undefined;\n  /**\n   * Ex: Rating\n   * @member {String} userVariableUnitCategoryName\n   */\n  exports.prototype['userVariableUnitCategoryName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} userVariableUnitId\n   */\n  exports.prototype['userVariableUnitId'] = undefined;\n  /**\n   * Ex: 1 to 5 Rating\n   * @member {String} userVariableUnitName\n   */\n  exports.prototype['userVariableUnitName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} userVariableVariableCategoryId\n   */\n  exports.prototype['userVariableVariableCategoryId'] = undefined;\n  /**\n   * Ex: Symptoms\n   * @member {String} userVariableVariableCategoryName\n   */\n  exports.prototype['userVariableVariableCategoryName'] = undefined;\n  /**\n   * Ex: negative\n   * @member {String} valence\n   */\n  exports.prototype['valence'] = undefined;\n  /**\n   * Ex: Rate daily\n   * @member {String} valueAndFrequencyTextDescription\n   */\n  exports.prototype['valueAndFrequencyTextDescription'] = undefined;\n  /**\n   * Ex: Rate daily at 09:45 PM\n   * @member {String} valueAndFrequencyTextDescriptionWithTime\n   */\n  exports.prototype['valueAndFrequencyTextDescriptionWithTime'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} variableCategoryId\n   */\n  exports.prototype['variableCategoryId'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Messaging/sad-96.png\n   * @member {String} variableCategoryImageUrl\n   */\n  exports.prototype['variableCategoryImageUrl'] = undefined;\n  /**\n   * Name of the variable category to be used when sending measurements\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * Ex: negative\n   * @member {String} variableDescription\n   */\n  exports.prototype['variableDescription'] = undefined;\n  /**\n   * Id for the variable to be tracked\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n  /**\n   * Name of the variable to be used when sending measurements\n   * @member {String} variableName\n   */\n  exports.prototype['variableName'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>combinationOperation</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CombinationOperationEnum = {\n    /**\n     * value: \"MEAN\"\n     * @const\n     */\n    \"MEAN\": \"MEAN\",\n    /**\n     * value: \"SUM\"\n     * @const\n     */\n    \"SUM\": \"SUM\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Card\":27,\"./TrackingReminderNotificationAction\":75,\"./Unit\":78}],73:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminderDelete = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminderDelete model module.\n   * @module model/TrackingReminderDelete\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminderDelete</code>.\n   * @alias module:model/TrackingReminderDelete\n   * @class\n   * @param id {Number} Id of the TrackingReminder to be deleted\n   */\n  var exports = function(id) {\n    var _this = this;\n\n    _this['id'] = id;\n  };\n\n  /**\n   * Constructs a <code>TrackingReminderDelete</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminderDelete} obj Optional instance to populate.\n   * @return {module:model/TrackingReminderDelete} The populated <code>TrackingReminderDelete</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Id of the TrackingReminder to be deleted\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],74:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Card', 'model/TrackingReminderNotificationAction', 'model/TrackingReminderNotificationTrackAllAction', 'model/Unit'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Card'), require('./TrackingReminderNotificationAction'), require('./TrackingReminderNotificationTrackAllAction'), require('./Unit'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminderNotification = factory(root.Quantimodo.ApiClient, root.Quantimodo.Card, root.Quantimodo.TrackingReminderNotificationAction, root.Quantimodo.TrackingReminderNotificationTrackAllAction, root.Quantimodo.Unit);\n  }\n}(this, function(ApiClient, Card, TrackingReminderNotificationAction, TrackingReminderNotificationTrackAllAction, Unit) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminderNotification model module.\n   * @module model/TrackingReminderNotification\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminderNotification</code>.\n   * @alias module:model/TrackingReminderNotification\n   * @class\n   * @param actionArray {Array.<module:model/TrackingReminderNotificationAction>} \n   * @param availableUnits {Array.<module:model/Unit>} \n   * @param fillingValue {Number} Ex: 0\n   * @param id {Number} id for the specific PENDING tracking remidner\n   * @param trackAllActions {Array.<module:model/TrackingReminderNotificationTrackAllAction>} \n   */\n  var exports = function(actionArray, availableUnits, fillingValue, id, trackAllActions) {\n    var _this = this;\n\n    _this['actionArray'] = actionArray;\n    _this['availableUnits'] = availableUnits;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['fillingValue'] = fillingValue;\n\n    _this['id'] = id;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['trackAllActions'] = trackAllActions;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>TrackingReminderNotification</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminderNotification} obj Optional instance to populate.\n   * @return {module:model/TrackingReminderNotification} The populated <code>TrackingReminderNotification</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionArray')) {\n        obj['actionArray'] = ApiClient.convertToType(data['actionArray'], [TrackingReminderNotificationAction]);\n      }\n      if (data.hasOwnProperty('availableUnits')) {\n        obj['availableUnits'] = ApiClient.convertToType(data['availableUnits'], [Unit]);\n      }\n      if (data.hasOwnProperty('bestStudyLink')) {\n        obj['bestStudyLink'] = ApiClient.convertToType(data['bestStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestUserStudyLink')) {\n        obj['bestUserStudyLink'] = ApiClient.convertToType(data['bestUserStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestPopulationStudyLink')) {\n        obj['bestPopulationStudyLink'] = ApiClient.convertToType(data['bestPopulationStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('optimalValueMessage')) {\n        obj['optimalValueMessage'] = ApiClient.convertToType(data['optimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('commonOptimalValueMessage')) {\n        obj['commonOptimalValueMessage'] = ApiClient.convertToType(data['commonOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('userOptimalValueMessage')) {\n        obj['userOptimalValueMessage'] = ApiClient.convertToType(data['userOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('combinationOperation')) {\n        obj['combinationOperation'] = ApiClient.convertToType(data['combinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('modifiedValue')) {\n        obj['modifiedValue'] = ApiClient.convertToType(data['modifiedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('unitCategoryId')) {\n        obj['unitCategoryId'] = ApiClient.convertToType(data['unitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitCategoryName')) {\n        obj['unitCategoryName'] = ApiClient.convertToType(data['unitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('unitId')) {\n        obj['unitId'] = ApiClient.convertToType(data['unitId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitName')) {\n        obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');\n      }\n      if (data.hasOwnProperty('defaultValue')) {\n        obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'Number');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('email')) {\n        obj['email'] = ApiClient.convertToType(data['email'], 'Boolean');\n      }\n      if (data.hasOwnProperty('fillingValue')) {\n        obj['fillingValue'] = ApiClient.convertToType(data['fillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('iconIcon')) {\n        obj['iconIcon'] = ApiClient.convertToType(data['iconIcon'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('imageUrl')) {\n        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('inputType')) {\n        obj['inputType'] = ApiClient.convertToType(data['inputType'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('lastValue')) {\n        obj['lastValue'] = ApiClient.convertToType(data['lastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Boolean');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('mostCommonValue')) {\n        obj['mostCommonValue'] = ApiClient.convertToType(data['mostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('notificationBar')) {\n        obj['notificationBar'] = ApiClient.convertToType(data['notificationBar'], 'Boolean');\n      }\n      if (data.hasOwnProperty('notifiedAt')) {\n        obj['notifiedAt'] = ApiClient.convertToType(data['notifiedAt'], 'String');\n      }\n      if (data.hasOwnProperty('numberOfUniqueValues')) {\n        obj['numberOfUniqueValues'] = ApiClient.convertToType(data['numberOfUniqueValues'], 'Number');\n      }\n      if (data.hasOwnProperty('outcome')) {\n        obj['outcome'] = ApiClient.convertToType(data['outcome'], 'Boolean');\n      }\n      if (data.hasOwnProperty('pngPath')) {\n        obj['pngPath'] = ApiClient.convertToType(data['pngPath'], 'String');\n      }\n      if (data.hasOwnProperty('pngUrl')) {\n        obj['pngUrl'] = ApiClient.convertToType(data['pngUrl'], 'String');\n      }\n      if (data.hasOwnProperty('popUp')) {\n        obj['popUp'] = ApiClient.convertToType(data['popUp'], 'Boolean');\n      }\n      if (data.hasOwnProperty('productUrl')) {\n        obj['productUrl'] = ApiClient.convertToType(data['productUrl'], 'String');\n      }\n      if (data.hasOwnProperty('question')) {\n        obj['question'] = ApiClient.convertToType(data['question'], 'String');\n      }\n      if (data.hasOwnProperty('longQuestion')) {\n        obj['longQuestion'] = ApiClient.convertToType(data['longQuestion'], 'String');\n      }\n      if (data.hasOwnProperty('reminderEndTime')) {\n        obj['reminderEndTime'] = ApiClient.convertToType(data['reminderEndTime'], 'String');\n      }\n      if (data.hasOwnProperty('reminderFrequency')) {\n        obj['reminderFrequency'] = ApiClient.convertToType(data['reminderFrequency'], 'Number');\n      }\n      if (data.hasOwnProperty('reminderSound')) {\n        obj['reminderSound'] = ApiClient.convertToType(data['reminderSound'], 'String');\n      }\n      if (data.hasOwnProperty('reminderStartTime')) {\n        obj['reminderStartTime'] = ApiClient.convertToType(data['reminderStartTime'], 'String');\n      }\n      if (data.hasOwnProperty('reminderTime')) {\n        obj['reminderTime'] = ApiClient.convertToType(data['reminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('secondMostCommonValue')) {\n        obj['secondMostCommonValue'] = ApiClient.convertToType(data['secondMostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('secondToLastValue')) {\n        obj['secondToLastValue'] = ApiClient.convertToType(data['secondToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('sms')) {\n        obj['sms'] = ApiClient.convertToType(data['sms'], 'Boolean');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('thirdMostCommonValue')) {\n        obj['thirdMostCommonValue'] = ApiClient.convertToType(data['thirdMostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('thirdToLastValue')) {\n        obj['thirdToLastValue'] = ApiClient.convertToType(data['thirdToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n      if (data.hasOwnProperty('total')) {\n        obj['total'] = ApiClient.convertToType(data['total'], 'Number');\n      }\n      if (data.hasOwnProperty('trackAllActions')) {\n        obj['trackAllActions'] = ApiClient.convertToType(data['trackAllActions'], [TrackingReminderNotificationTrackAllAction]);\n      }\n      if (data.hasOwnProperty('trackingReminderId')) {\n        obj['trackingReminderId'] = ApiClient.convertToType(data['trackingReminderId'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingReminderImageUrl')) {\n        obj['trackingReminderImageUrl'] = ApiClient.convertToType(data['trackingReminderImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('trackingReminderNotificationId')) {\n        obj['trackingReminderNotificationId'] = ApiClient.convertToType(data['trackingReminderNotificationId'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingReminderNotificationTime')) {\n        obj['trackingReminderNotificationTime'] = ApiClient.convertToType(data['trackingReminderNotificationTime'], 'String');\n      }\n      if (data.hasOwnProperty('trackingReminderNotificationTimeEpoch')) {\n        obj['trackingReminderNotificationTimeEpoch'] = ApiClient.convertToType(data['trackingReminderNotificationTimeEpoch'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingReminderNotificationTimeLocal')) {\n        obj['trackingReminderNotificationTimeLocal'] = ApiClient.convertToType(data['trackingReminderNotificationTimeLocal'], 'String');\n      }\n      if (data.hasOwnProperty('trackingReminderNotificationTimeLocalHumanString')) {\n        obj['trackingReminderNotificationTimeLocalHumanString'] = ApiClient.convertToType(data['trackingReminderNotificationTimeLocalHumanString'], 'String');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitAbbreviatedName')) {\n        obj['userVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['userVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryId')) {\n        obj['userVariableUnitCategoryId'] = ApiClient.convertToType(data['userVariableUnitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryName')) {\n        obj['userVariableUnitCategoryName'] = ApiClient.convertToType(data['userVariableUnitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitId')) {\n        obj['userVariableUnitId'] = ApiClient.convertToType(data['userVariableUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitName')) {\n        obj['userVariableUnitName'] = ApiClient.convertToType(data['userVariableUnitName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryId')) {\n        obj['userVariableVariableCategoryId'] = ApiClient.convertToType(data['userVariableVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryName')) {\n        obj['userVariableVariableCategoryName'] = ApiClient.convertToType(data['userVariableVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('valence')) {\n        obj['valence'] = ApiClient.convertToType(data['valence'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryId')) {\n        obj['variableCategoryId'] = ApiClient.convertToType(data['variableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableCategoryImageUrl')) {\n        obj['variableCategoryImageUrl'] = ApiClient.convertToType(data['variableCategoryImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableImageUrl')) {\n        obj['variableImageUrl'] = ApiClient.convertToType(data['variableImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('variableName')) {\n        obj['variableName'] = ApiClient.convertToType(data['variableName'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/TrackingReminderNotificationAction>} actionArray\n   */\n  exports.prototype['actionArray'] = undefined;\n  /**\n   * @member {Array.<module:model/Unit>} availableUnits\n   */\n  exports.prototype['availableUnits'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user or population\n   * @member {String} bestStudyLink\n   */\n  exports.prototype['bestStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user\n   * @member {String} bestUserStudyLink\n   */\n  exports.prototype['bestUserStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for population\n   * @member {String} bestPopulationStudyLink\n   */\n  exports.prototype['bestPopulationStudyLink'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user or population\n   * @member {String} optimalValueMessage\n   */\n  exports.prototype['optimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for population\n   * @member {String} commonOptimalValueMessage\n   */\n  exports.prototype['commonOptimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user\n   * @member {String} userOptimalValueMessage\n   */\n  exports.prototype['userOptimalValueMessage'] = undefined;\n  /**\n   * Card with options for tracking.\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * The way multiple measurements are aggregated over time\n   * @member {module:model/TrackingReminderNotification.CombinationOperationEnum} combinationOperation\n   */\n  exports.prototype['combinationOperation'] = undefined;\n  /**\n   * Ex: 2017-07-29 20:49:54 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Ex: Trader Joe's Bedtime Tea\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * Is the user specified default value or falls back to the last value in user unit. Good for initializing input fields\n   * @member {Number} modifiedValue\n   */\n  exports.prototype['modifiedValue'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} unitCategoryId\n   */\n  exports.prototype['unitCategoryId'] = undefined;\n  /**\n   * Ex: Rating\n   * @member {String} unitCategoryName\n   */\n  exports.prototype['unitCategoryName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} unitId\n   */\n  exports.prototype['unitId'] = undefined;\n  /**\n   * Ex: 1 to 5 Rating\n   * @member {String} unitName\n   */\n  exports.prototype['unitName'] = undefined;\n  /**\n   * Default value to use for the measurement when tracking\n   * @member {Number} defaultValue\n   */\n  exports.prototype['defaultValue'] = undefined;\n  /**\n   * Ex: positive\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * True if the reminders should be delivered via email\n   * @member {Boolean} email\n   */\n  exports.prototype['email'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} fillingValue\n   */\n  exports.prototype['fillingValue'] = undefined;\n  /**\n   * Ex: ion-sad-outline\n   * @member {String} iconIcon\n   */\n  exports.prototype['iconIcon'] = undefined;\n  /**\n   * id for the specific PENDING tracking remidner\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg\n   * @member {String} imageUrl\n   */\n  exports.prototype['imageUrl'] = undefined;\n  /**\n   * Ex: happiestFaceIsFive\n   * @member {String} inputType\n   */\n  exports.prototype['inputType'] = undefined;\n  /**\n   * Ex: ion-happy-outline\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} lastValue\n   */\n  exports.prototype['lastValue'] = undefined;\n  /**\n   * True if this variable is normally tracked via manual user input rather than automatic imports\n   * @member {Boolean} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} mostCommonValue\n   */\n  exports.prototype['mostCommonValue'] = undefined;\n  /**\n   * True if the reminders should appear in the notification bar\n   * @member {Boolean} notificationBar\n   */\n  exports.prototype['notificationBar'] = undefined;\n  /**\n   * Ex: UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} notifiedAt\n   */\n  exports.prototype['notifiedAt'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} numberOfUniqueValues\n   */\n  exports.prototype['numberOfUniqueValues'] = undefined;\n  /**\n   * Indicates whether or not the variable is usually an outcome of interest such as a symptom or emotion\n   * @member {Boolean} outcome\n   */\n  exports.prototype['outcome'] = undefined;\n  /**\n   * Ex: img/variable_categories/emotions.png\n   * @member {String} pngPath\n   */\n  exports.prototype['pngPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png\n   * @member {String} pngUrl\n   */\n  exports.prototype['pngUrl'] = undefined;\n  /**\n   * True if the reminders should appear as a popup notification\n   * @member {Boolean} popUp\n   */\n  exports.prototype['popUp'] = undefined;\n  /**\n   * Link to associated product for purchase\n   * @member {String} productUrl\n   */\n  exports.prototype['productUrl'] = undefined;\n  /**\n   * Ex: How is your overall mood?\n   * @member {String} question\n   */\n  exports.prototype['question'] = undefined;\n  /**\n   * Ex: How is your overall mood on a scale of 1 to 5??\n   * @member {String} longQuestion\n   */\n  exports.prototype['longQuestion'] = undefined;\n  /**\n   * Ex: 01-01-2018\n   * @member {String} reminderEndTime\n   */\n  exports.prototype['reminderEndTime'] = undefined;\n  /**\n   * How often user should be reminded in seconds. Ex: 86400\n   * @member {Number} reminderFrequency\n   */\n  exports.prototype['reminderFrequency'] = undefined;\n  /**\n   * String identifier for the sound to accompany the reminder\n   * @member {String} reminderSound\n   */\n  exports.prototype['reminderSound'] = undefined;\n  /**\n   * Earliest time of day at which reminders should appear in UTC HH:MM:SS format\n   * @member {String} reminderStartTime\n   */\n  exports.prototype['reminderStartTime'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.\n   * @member {String} reminderTime\n   */\n  exports.prototype['reminderTime'] = undefined;\n  /**\n   * Ex: 4\n   * @member {Number} secondMostCommonValue\n   */\n  exports.prototype['secondMostCommonValue'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} secondToLastValue\n   */\n  exports.prototype['secondToLastValue'] = undefined;\n  /**\n   * True if the reminders should be delivered via SMS\n   * @member {Boolean} sms\n   */\n  exports.prototype['sms'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * Ex: 2\n   * @member {Number} thirdMostCommonValue\n   */\n  exports.prototype['thirdMostCommonValue'] = undefined;\n  /**\n   * Ex: 2\n   * @member {Number} thirdToLastValue\n   */\n  exports.prototype['thirdToLastValue'] = undefined;\n  /**\n   * Ex: Rate Overall Mood\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} total\n   */\n  exports.prototype['total'] = undefined;\n  /**\n   * @member {Array.<module:model/TrackingReminderNotificationTrackAllAction>} trackAllActions\n   */\n  exports.prototype['trackAllActions'] = undefined;\n  /**\n   * id for the repeating tracking remidner\n   * @member {Number} trackingReminderId\n   */\n  exports.prototype['trackingReminderId'] = undefined;\n  /**\n   * Ex: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg\n   * @member {String} trackingReminderImageUrl\n   */\n  exports.prototype['trackingReminderImageUrl'] = undefined;\n  /**\n   * Ex: 5072482\n   * @member {Number} trackingReminderNotificationId\n   */\n  exports.prototype['trackingReminderNotificationId'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.\n   * @member {String} trackingReminderNotificationTime\n   */\n  exports.prototype['trackingReminderNotificationTime'] = undefined;\n  /**\n   * Ex: 1501534124\n   * @member {Number} trackingReminderNotificationTimeEpoch\n   */\n  exports.prototype['trackingReminderNotificationTimeEpoch'] = undefined;\n  /**\n   * Ex: 15:48:44\n   * @member {String} trackingReminderNotificationTimeLocal\n   */\n  exports.prototype['trackingReminderNotificationTimeLocal'] = undefined;\n  /**\n   * Ex: 8PM Sun, May 1\n   * @member {String} trackingReminderNotificationTimeLocalHumanString\n   */\n  exports.prototype['trackingReminderNotificationTimeLocalHumanString'] = undefined;\n  /**\n   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * ID of User\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} userVariableUnitAbbreviatedName\n   */\n  exports.prototype['userVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 5\n   * @member {Number} userVariableUnitCategoryId\n   */\n  exports.prototype['userVariableUnitCategoryId'] = undefined;\n  /**\n   * Ex: Rating\n   * @member {String} userVariableUnitCategoryName\n   */\n  exports.prototype['userVariableUnitCategoryName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} userVariableUnitId\n   */\n  exports.prototype['userVariableUnitId'] = undefined;\n  /**\n   * Ex: 1 to 5 Rating\n   * @member {String} userVariableUnitName\n   */\n  exports.prototype['userVariableUnitName'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} userVariableVariableCategoryId\n   */\n  exports.prototype['userVariableVariableCategoryId'] = undefined;\n  /**\n   * Ex: Emotions\n   * @member {String} userVariableVariableCategoryName\n   */\n  exports.prototype['userVariableVariableCategoryName'] = undefined;\n  /**\n   * Ex: positive\n   * @member {String} valence\n   */\n  exports.prototype['valence'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} variableCategoryId\n   */\n  exports.prototype['variableCategoryId'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png\n   * @member {String} variableCategoryImageUrl\n   */\n  exports.prototype['variableCategoryImageUrl'] = undefined;\n  /**\n   * Name of the variable category to be used when sending measurements\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * Id for the variable to be tracked\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n  /**\n   * Ex: https://image.png\n   * @member {String} variableImageUrl\n   */\n  exports.prototype['variableImageUrl'] = undefined;\n  /**\n   * Name of the variable to be used when sending measurements\n   * @member {String} variableName\n   */\n  exports.prototype['variableName'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>combinationOperation</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CombinationOperationEnum = {\n    /**\n     * value: \"MEAN\"\n     * @const\n     */\n    \"MEAN\": \"MEAN\",\n    /**\n     * value: \"SUM\"\n     * @const\n     */\n    \"SUM\": \"SUM\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Card\":27,\"./TrackingReminderNotificationAction\":75,\"./TrackingReminderNotificationTrackAllAction\":77,\"./Unit\":78}],75:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminderNotificationAction = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminderNotificationAction model module.\n   * @module model/TrackingReminderNotificationAction\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminderNotificationAction</code>.\n   * @alias module:model/TrackingReminderNotificationAction\n   * @class\n   * @param action {String} Ex: track\n   * @param callback {String} Ex: trackThreeRatingAction\n   * @param modifiedValue {Number} Ex: 3\n   * @param title {String} Ex: 3/5\n   */\n  var exports = function(action, callback, modifiedValue, title) {\n    var _this = this;\n\n    _this['action'] = action;\n    _this['callback'] = callback;\n    _this['modifiedValue'] = modifiedValue;\n    _this['title'] = title;\n\n\n  };\n\n  /**\n   * Constructs a <code>TrackingReminderNotificationAction</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminderNotificationAction} obj Optional instance to populate.\n   * @return {module:model/TrackingReminderNotificationAction} The populated <code>TrackingReminderNotificationAction</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('action')) {\n        obj['action'] = ApiClient.convertToType(data['action'], 'String');\n      }\n      if (data.hasOwnProperty('callback')) {\n        obj['callback'] = ApiClient.convertToType(data['callback'], 'String');\n      }\n      if (data.hasOwnProperty('modifiedValue')) {\n        obj['modifiedValue'] = ApiClient.convertToType(data['modifiedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n      if (data.hasOwnProperty('longTitle')) {\n        obj['longTitle'] = ApiClient.convertToType(data['longTitle'], 'String');\n      }\n      if (data.hasOwnProperty('shortTitle')) {\n        obj['shortTitle'] = ApiClient.convertToType(data['shortTitle'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: track\n   * @member {String} action\n   */\n  exports.prototype['action'] = undefined;\n  /**\n   * Ex: trackThreeRatingAction\n   * @member {String} callback\n   */\n  exports.prototype['callback'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} modifiedValue\n   */\n  exports.prototype['modifiedValue'] = undefined;\n  /**\n   * Ex: 3/5\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n  /**\n   * Ex: Rate 3/5\n   * @member {String} longTitle\n   */\n  exports.prototype['longTitle'] = undefined;\n  /**\n   * Ex: 3\n   * @member {String} shortTitle\n   */\n  exports.prototype['shortTitle'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],76:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminderNotificationPost = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminderNotificationPost model module.\n   * @module model/TrackingReminderNotificationPost\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminderNotificationPost</code>.\n   * @alias module:model/TrackingReminderNotificationPost\n   * @class\n   * @param action {module:model/TrackingReminderNotificationPost.ActionEnum} track records a measurement for the notification.  snooze changes the notification to 1 hour from now. skip deletes the notification.\n   * @param id {Number} Id of the TrackingReminderNotification\n   */\n  var exports = function(action, id) {\n    var _this = this;\n\n    _this['action'] = action;\n    _this['id'] = id;\n\n  };\n\n  /**\n   * Constructs a <code>TrackingReminderNotificationPost</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminderNotificationPost} obj Optional instance to populate.\n   * @return {module:model/TrackingReminderNotificationPost} The populated <code>TrackingReminderNotificationPost</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('action')) {\n        obj['action'] = ApiClient.convertToType(data['action'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('modifiedValue')) {\n        obj['modifiedValue'] = ApiClient.convertToType(data['modifiedValue'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * track records a measurement for the notification.  snooze changes the notification to 1 hour from now. skip deletes the notification.\n   * @member {module:model/TrackingReminderNotificationPost.ActionEnum} action\n   */\n  exports.prototype['action'] = undefined;\n  /**\n   * Id of the TrackingReminderNotification\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Optional value to be recorded instead of the tracking reminder default value\n   * @member {Number} modifiedValue\n   */\n  exports.prototype['modifiedValue'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>action</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.ActionEnum = {\n    /**\n     * value: \"skip\"\n     * @const\n     */\n    \"skip\": \"skip\",\n    /**\n     * value: \"snooze\"\n     * @const\n     */\n    \"snooze\": \"snooze\",\n    /**\n     * value: \"track\"\n     * @const\n     */\n    \"track\": \"track\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],77:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.TrackingReminderNotificationTrackAllAction = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The TrackingReminderNotificationTrackAllAction model module.\n   * @module model/TrackingReminderNotificationTrackAllAction\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>TrackingReminderNotificationTrackAllAction</code>.\n   * @alias module:model/TrackingReminderNotificationTrackAllAction\n   * @class\n   * @param action {String} Ex: trackAll\n   * @param callback {String} Ex: trackThreeRatingAction\n   * @param modifiedValue {Number} Ex: 3\n   * @param title {String} Ex: Rate 3/5 for all\n   */\n  var exports = function(action, callback, modifiedValue, title) {\n    var _this = this;\n\n    _this['action'] = action;\n    _this['callback'] = callback;\n    _this['modifiedValue'] = modifiedValue;\n    _this['title'] = title;\n  };\n\n  /**\n   * Constructs a <code>TrackingReminderNotificationTrackAllAction</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/TrackingReminderNotificationTrackAllAction} obj Optional instance to populate.\n   * @return {module:model/TrackingReminderNotificationTrackAllAction} The populated <code>TrackingReminderNotificationTrackAllAction</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('action')) {\n        obj['action'] = ApiClient.convertToType(data['action'], 'String');\n      }\n      if (data.hasOwnProperty('callback')) {\n        obj['callback'] = ApiClient.convertToType(data['callback'], 'String');\n      }\n      if (data.hasOwnProperty('modifiedValue')) {\n        obj['modifiedValue'] = ApiClient.convertToType(data['modifiedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('title')) {\n        obj['title'] = ApiClient.convertToType(data['title'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: trackAll\n   * @member {String} action\n   */\n  exports.prototype['action'] = undefined;\n  /**\n   * Ex: trackThreeRatingAction\n   * @member {String} callback\n   */\n  exports.prototype['callback'] = undefined;\n  /**\n   * Ex: 3\n   * @member {Number} modifiedValue\n   */\n  exports.prototype['modifiedValue'] = undefined;\n  /**\n   * Ex: Rate 3/5 for all\n   * @member {String} title\n   */\n  exports.prototype['title'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],78:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ConversionStep', 'model/UnitCategory'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./ConversionStep'), require('./UnitCategory'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Unit = factory(root.Quantimodo.ApiClient, root.Quantimodo.ConversionStep, root.Quantimodo.UnitCategory);\n  }\n}(this, function(ApiClient, ConversionStep, UnitCategory) {\n  'use strict';\n\n\n\n\n  /**\n   * The Unit model module.\n   * @module model/Unit\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Unit</code>.\n   * @alias module:model/Unit\n   * @class\n   * @param abbreviatedName {String} Unit abbreviation\n   * @param category {module:model/Unit.CategoryEnum} Unit category\n   * @param conversionSteps {Array.<module:model/ConversionStep>} Conversion steps list\n   * @param maximumValue {Number} Ex: 4\n   * @param name {String} Unit name\n   * @param unitCategory {module:model/UnitCategory} \n   */\n  var exports = function(abbreviatedName, category, conversionSteps, maximumValue, name, unitCategory) {\n    var _this = this;\n\n    _this['abbreviatedName'] = abbreviatedName;\n\n    _this['category'] = category;\n\n\n    _this['conversionSteps'] = conversionSteps;\n\n\n\n    _this['maximumValue'] = maximumValue;\n\n\n    _this['name'] = name;\n    _this['unitCategory'] = unitCategory;\n  };\n\n  /**\n   * Constructs a <code>Unit</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Unit} obj Optional instance to populate.\n   * @return {module:model/Unit} The populated <code>Unit</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('abbreviatedName')) {\n        obj['abbreviatedName'] = ApiClient.convertToType(data['abbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('advanced')) {\n        obj['advanced'] = ApiClient.convertToType(data['advanced'], 'Number');\n      }\n      if (data.hasOwnProperty('category')) {\n        obj['category'] = ApiClient.convertToType(data['category'], 'String');\n      }\n      if (data.hasOwnProperty('categoryId')) {\n        obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('categoryName')) {\n        obj['categoryName'] = ApiClient.convertToType(data['categoryName'], 'String');\n      }\n      if (data.hasOwnProperty('conversionSteps')) {\n        obj['conversionSteps'] = ApiClient.convertToType(data['conversionSteps'], [ConversionStep]);\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Number');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('maximumValue')) {\n        obj['maximumValue'] = ApiClient.convertToType(data['maximumValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumValue')) {\n        obj['minimumValue'] = ApiClient.convertToType(data['minimumValue'], 'Number');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('unitCategory')) {\n        obj['unitCategory'] = UnitCategory.constructFromObject(data['unitCategory']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Unit abbreviation\n   * @member {String} abbreviatedName\n   */\n  exports.prototype['abbreviatedName'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} advanced\n   */\n  exports.prototype['advanced'] = undefined;\n  /**\n   * Unit category\n   * @member {module:model/Unit.CategoryEnum} category\n   */\n  exports.prototype['category'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} categoryId\n   */\n  exports.prototype['categoryId'] = undefined;\n  /**\n   * Ex: Miscellany\n   * @member {String} categoryName\n   */\n  exports.prototype['categoryName'] = undefined;\n  /**\n   * Conversion steps list\n   * @member {Array.<module:model/ConversionStep>} conversionSteps\n   */\n  exports.prototype['conversionSteps'] = undefined;\n  /**\n   * Ex: 29\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis.\n   * @member {Number} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Ex: 4\n   * @member {Number} maximumValue\n   */\n  exports.prototype['maximumValue'] = undefined;\n  /**\n   * The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis.\n   * @member {Number} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} minimumValue\n   */\n  exports.prototype['minimumValue'] = undefined;\n  /**\n   * Unit name\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * @member {module:model/UnitCategory} unitCategory\n   */\n  exports.prototype['unitCategory'] = undefined;\n\n\n  /**\n   * Allowed values for the <code>category</code> property.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CategoryEnum = {\n    /**\n     * value: \"Distance\"\n     * @const\n     */\n    \"Distance\": \"Distance\",\n    /**\n     * value: \"Duration\"\n     * @const\n     */\n    \"Duration\": \"Duration\",\n    /**\n     * value: \"Energy\"\n     * @const\n     */\n    \"Energy\": \"Energy\",\n    /**\n     * value: \"Frequency\"\n     * @const\n     */\n    \"Frequency\": \"Frequency\",\n    /**\n     * value: \"Miscellany\"\n     * @const\n     */\n    \"Miscellany\": \"Miscellany\",\n    /**\n     * value: \"Pressure\"\n     * @const\n     */\n    \"Pressure\": \"Pressure\",\n    /**\n     * value: \"Proportion\"\n     * @const\n     */\n    \"Proportion\": \"Proportion\",\n    /**\n     * value: \"Rating\"\n     * @const\n     */\n    \"Rating\": \"Rating\",\n    /**\n     * value: \"Temperature\"\n     * @const\n     */\n    \"Temperature\": \"Temperature\",\n    /**\n     * value: \"Volume\"\n     * @const\n     */\n    \"Volume\": \"Volume\",\n    /**\n     * value: \"Weight\"\n     * @const\n     */\n    \"Weight\": \"Weight\",\n    /**\n     * value: \"Count\"\n     * @const\n     */\n    \"Count\": \"Count\"  };\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./ConversionStep\":31,\"./UnitCategory\":79}],79:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.UnitCategory = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The UnitCategory model module.\n   * @module model/UnitCategory\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>UnitCategory</code>.\n   * @alias module:model/UnitCategory\n   * @class\n   * @param name {String} Category name\n   */\n  var exports = function(name) {\n    var _this = this;\n\n\n    _this['name'] = name;\n\n  };\n\n  /**\n   * Constructs a <code>UnitCategory</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UnitCategory} obj Optional instance to populate.\n   * @return {module:model/UnitCategory} The populated <code>UnitCategory</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('standardUnitAbbreviatedName')) {\n        obj['standardUnitAbbreviatedName'] = ApiClient.convertToType(data['standardUnitAbbreviatedName'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * id\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Category name\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Base unit for in which measurements are to be converted to and stored\n   * @member {String} standardUnitAbbreviatedName\n   */\n  exports.prototype['standardUnitAbbreviatedName'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],80:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AuthorizedClients', 'model/Card'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./AuthorizedClients'), require('./Card'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.User = factory(root.Quantimodo.ApiClient, root.Quantimodo.AuthorizedClients, root.Quantimodo.Card);\n  }\n}(this, function(ApiClient, AuthorizedClients, Card) {\n  'use strict';\n\n\n\n\n  /**\n   * The User model module.\n   * @module model/User\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>User</code>.\n   * @alias module:model/User\n   * @class\n   * @param accessToken {String} User access token\n   * @param administrator {Boolean} Is user administrator\n   * @param displayName {String} User display name\n   * @param email {String} User email\n   * @param id {Number} User id\n   * @param loginName {String} User login name\n   */\n  var exports = function(accessToken, administrator, displayName, email, id, loginName) {\n    var _this = this;\n\n    _this['accessToken'] = accessToken;\n\n\n    _this['administrator'] = administrator;\n\n\n\n\n\n\n\n\n\n    _this['displayName'] = displayName;\n\n    _this['email'] = email;\n\n\n\n\n\n    _this['id'] = id;\n\n\n\n\n    _this['loginName'] = loginName;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/User} obj Optional instance to populate.\n   * @return {module:model/User} The populated <code>User</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('accessToken')) {\n        obj['accessToken'] = ApiClient.convertToType(data['accessToken'], 'String');\n      }\n      if (data.hasOwnProperty('accessTokenExpires')) {\n        obj['accessTokenExpires'] = ApiClient.convertToType(data['accessTokenExpires'], 'String');\n      }\n      if (data.hasOwnProperty('accessTokenExpiresAtMilliseconds')) {\n        obj['accessTokenExpiresAtMilliseconds'] = ApiClient.convertToType(data['accessTokenExpiresAtMilliseconds'], 'Number');\n      }\n      if (data.hasOwnProperty('administrator')) {\n        obj['administrator'] = ApiClient.convertToType(data['administrator'], 'Boolean');\n      }\n      if (data.hasOwnProperty('authorizedClients')) {\n        obj['authorizedClients'] = AuthorizedClients.constructFromObject(data['authorizedClients']);\n      }\n      if (data.hasOwnProperty('avatar')) {\n        obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');\n      }\n      if (data.hasOwnProperty('avatarImage')) {\n        obj['avatarImage'] = ApiClient.convertToType(data['avatarImage'], 'String');\n      }\n      if (data.hasOwnProperty('capabilities')) {\n        obj['capabilities'] = ApiClient.convertToType(data['capabilities'], 'String');\n      }\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('clientUserId')) {\n        obj['clientUserId'] = ApiClient.convertToType(data['clientUserId'], 'String');\n      }\n      if (data.hasOwnProperty('combineNotifications')) {\n        obj['combineNotifications'] = ApiClient.convertToType(data['combineNotifications'], 'Boolean');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('earliestReminderTime')) {\n        obj['earliestReminderTime'] = ApiClient.convertToType(data['earliestReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('email')) {\n        obj['email'] = ApiClient.convertToType(data['email'], 'String');\n      }\n      if (data.hasOwnProperty('firstName')) {\n        obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');\n      }\n      if (data.hasOwnProperty('getPreviewBuilds')) {\n        obj['getPreviewBuilds'] = ApiClient.convertToType(data['getPreviewBuilds'], 'Boolean');\n      }\n      if (data.hasOwnProperty('hasAndroidApp')) {\n        obj['hasAndroidApp'] = ApiClient.convertToType(data['hasAndroidApp'], 'Boolean');\n      }\n      if (data.hasOwnProperty('hasChromeExtension')) {\n        obj['hasChromeExtension'] = ApiClient.convertToType(data['hasChromeExtension'], 'Boolean');\n      }\n      if (data.hasOwnProperty('hasIosApp')) {\n        obj['hasIosApp'] = ApiClient.convertToType(data['hasIosApp'], 'Boolean');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('lastFour')) {\n        obj['lastFour'] = ApiClient.convertToType(data['lastFour'], 'String');\n      }\n      if (data.hasOwnProperty('lastName')) {\n        obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');\n      }\n      if (data.hasOwnProperty('lastSmsTrackingReminderNotificationId')) {\n        obj['lastSmsTrackingReminderNotificationId'] = ApiClient.convertToType(data['lastSmsTrackingReminderNotificationId'], 'String');\n      }\n      if (data.hasOwnProperty('latestReminderTime')) {\n        obj['latestReminderTime'] = ApiClient.convertToType(data['latestReminderTime'], 'String');\n      }\n      if (data.hasOwnProperty('loginName')) {\n        obj['loginName'] = ApiClient.convertToType(data['loginName'], 'String');\n      }\n      if (data.hasOwnProperty('password')) {\n        obj['password'] = ApiClient.convertToType(data['password'], 'String');\n      }\n      if (data.hasOwnProperty('phoneNumber')) {\n        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');\n      }\n      if (data.hasOwnProperty('phoneVerificationCode')) {\n        obj['phoneVerificationCode'] = ApiClient.convertToType(data['phoneVerificationCode'], 'String');\n      }\n      if (data.hasOwnProperty('pushNotificationsEnabled')) {\n        obj['pushNotificationsEnabled'] = ApiClient.convertToType(data['pushNotificationsEnabled'], 'Boolean');\n      }\n      if (data.hasOwnProperty('refreshToken')) {\n        obj['refreshToken'] = ApiClient.convertToType(data['refreshToken'], 'String');\n      }\n      if (data.hasOwnProperty('roles')) {\n        obj['roles'] = ApiClient.convertToType(data['roles'], 'String');\n      }\n      if (data.hasOwnProperty('sendPredictorEmails')) {\n        obj['sendPredictorEmails'] = ApiClient.convertToType(data['sendPredictorEmails'], 'Boolean');\n      }\n      if (data.hasOwnProperty('sendReminderNotificationEmails')) {\n        obj['sendReminderNotificationEmails'] = ApiClient.convertToType(data['sendReminderNotificationEmails'], 'Boolean');\n      }\n      if (data.hasOwnProperty('shareAllData')) {\n        obj['shareAllData'] = ApiClient.convertToType(data['shareAllData'], 'Boolean');\n      }\n      if (data.hasOwnProperty('smsNotificationsEnabled')) {\n        obj['smsNotificationsEnabled'] = ApiClient.convertToType(data['smsNotificationsEnabled'], 'Boolean');\n      }\n      if (data.hasOwnProperty('stripeActive')) {\n        obj['stripeActive'] = ApiClient.convertToType(data['stripeActive'], 'Boolean');\n      }\n      if (data.hasOwnProperty('stripeId')) {\n        obj['stripeId'] = ApiClient.convertToType(data['stripeId'], 'String');\n      }\n      if (data.hasOwnProperty('stripePlan')) {\n        obj['stripePlan'] = ApiClient.convertToType(data['stripePlan'], 'String');\n      }\n      if (data.hasOwnProperty('stripeSubscription')) {\n        obj['stripeSubscription'] = ApiClient.convertToType(data['stripeSubscription'], 'String');\n      }\n      if (data.hasOwnProperty('subscriptionEndsAt')) {\n        obj['subscriptionEndsAt'] = ApiClient.convertToType(data['subscriptionEndsAt'], 'String');\n      }\n      if (data.hasOwnProperty('subscriptionProvider')) {\n        obj['subscriptionProvider'] = ApiClient.convertToType(data['subscriptionProvider'], 'String');\n      }\n      if (data.hasOwnProperty('timeZoneOffset')) {\n        obj['timeZoneOffset'] = ApiClient.convertToType(data['timeZoneOffset'], 'Number');\n      }\n      if (data.hasOwnProperty('trackLocation')) {\n        obj['trackLocation'] = ApiClient.convertToType(data['trackLocation'], 'Boolean');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userRegistered')) {\n        obj['userRegistered'] = ApiClient.convertToType(data['userRegistered'], 'String');\n      }\n      if (data.hasOwnProperty('userUrl')) {\n        obj['userUrl'] = ApiClient.convertToType(data['userUrl'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * User access token\n   * @member {String} accessToken\n   */\n  exports.prototype['accessToken'] = undefined;\n  /**\n   * Ex: 2018-08-08 02:41:19\n   * @member {String} accessTokenExpires\n   */\n  exports.prototype['accessTokenExpires'] = undefined;\n  /**\n   * Ex: 1533696079000\n   * @member {Number} accessTokenExpiresAtMilliseconds\n   */\n  exports.prototype['accessTokenExpiresAtMilliseconds'] = undefined;\n  /**\n   * Is user administrator\n   * @member {Boolean} administrator\n   */\n  exports.prototype['administrator'] = undefined;\n  /**\n   * @member {module:model/AuthorizedClients} authorizedClients\n   */\n  exports.prototype['authorizedClients'] = undefined;\n  /**\n   * Ex: https://lh6.googleusercontent.com/-BHr4hyUWqZU/AAAAAAAAAAI/AAAAAAAIG28/2Lv0en738II/photo.jpg?sz=50\n   * @member {String} avatar\n   */\n  exports.prototype['avatar'] = undefined;\n  /**\n   * Ex: https://lh6.googleusercontent.com/-BHr4hyUWqZU/AAAAAAAAAAI/AAAAAAAIG28/2Lv0en738II/photo.jpg?sz=50\n   * @member {String} avatarImage\n   */\n  exports.prototype['avatarImage'] = undefined;\n  /**\n   * Ex: a:1:{s:13:\\\"administrator\\\";b:1;}\n   * @member {String} capabilities\n   */\n  exports.prototype['capabilities'] = undefined;\n  /**\n   * Avatar and info\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * Ex: quantimodo\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * Ex: 118444693184829555362\n   * @member {String} clientUserId\n   */\n  exports.prototype['clientUserId'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} combineNotifications\n   */\n  exports.prototype['combineNotifications'] = undefined;\n  /**\n   * When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * User display name\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * Earliest time user should get notifications. Ex: 05:00:00\n   * @member {String} earliestReminderTime\n   */\n  exports.prototype['earliestReminderTime'] = undefined;\n  /**\n   * User email\n   * @member {String} email\n   */\n  exports.prototype['email'] = undefined;\n  /**\n   * Ex: Mike\n   * @member {String} firstName\n   */\n  exports.prototype['firstName'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} getPreviewBuilds\n   */\n  exports.prototype['getPreviewBuilds'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} hasAndroidApp\n   */\n  exports.prototype['hasAndroidApp'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} hasChromeExtension\n   */\n  exports.prototype['hasChromeExtension'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} hasIosApp\n   */\n  exports.prototype['hasIosApp'] = undefined;\n  /**\n   * User id\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: 2009\n   * @member {String} lastFour\n   */\n  exports.prototype['lastFour'] = undefined;\n  /**\n   * Ex: Sinn\n   * @member {String} lastName\n   */\n  exports.prototype['lastName'] = undefined;\n  /**\n   * Ex: 1\n   * @member {String} lastSmsTrackingReminderNotificationId\n   */\n  exports.prototype['lastSmsTrackingReminderNotificationId'] = undefined;\n  /**\n   * Latest time user should get notifications. Ex: 23:00:00\n   * @member {String} latestReminderTime\n   */\n  exports.prototype['latestReminderTime'] = undefined;\n  /**\n   * User login name\n   * @member {String} loginName\n   */\n  exports.prototype['loginName'] = undefined;\n  /**\n   * Ex: PASSWORD\n   * @member {String} password\n   */\n  exports.prototype['password'] = undefined;\n  /**\n   * Ex: 618-391-0002\n   * @member {String} phoneNumber\n   */\n  exports.prototype['phoneNumber'] = undefined;\n  /**\n   * Ex: 1234\n   * @member {String} phoneVerificationCode\n   */\n  exports.prototype['phoneVerificationCode'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} pushNotificationsEnabled\n   */\n  exports.prototype['pushNotificationsEnabled'] = undefined;\n  /**\n   * Ex: 6e99b113d85586de1f92468433f2df1e666647cb\n   * @member {String} refreshToken\n   */\n  exports.prototype['refreshToken'] = undefined;\n  /**\n   * Ex: [\\\"admin\\\"]\n   * @member {String} roles\n   */\n  exports.prototype['roles'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} sendPredictorEmails\n   */\n  exports.prototype['sendPredictorEmails'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} sendReminderNotificationEmails\n   */\n  exports.prototype['sendReminderNotificationEmails'] = undefined;\n  /**\n   * Share all studies, charts, and measurement data with all other users\n   * @member {Boolean} shareAllData\n   */\n  exports.prototype['shareAllData'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} smsNotificationsEnabled\n   */\n  exports.prototype['smsNotificationsEnabled'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} stripeActive\n   */\n  exports.prototype['stripeActive'] = undefined;\n  /**\n   * Ex: cus_A8CEmcvl8jwLhV\n   * @member {String} stripeId\n   */\n  exports.prototype['stripeId'] = undefined;\n  /**\n   * Ex: monthly7\n   * @member {String} stripePlan\n   */\n  exports.prototype['stripePlan'] = undefined;\n  /**\n   * Ex: sub_ANTx3nOE7nzjQf\n   * @member {String} stripeSubscription\n   */\n  exports.prototype['stripeSubscription'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} subscriptionEndsAt\n   */\n  exports.prototype['subscriptionEndsAt'] = undefined;\n  /**\n   * Ex: google\n   * @member {String} subscriptionProvider\n   */\n  exports.prototype['subscriptionProvider'] = undefined;\n  /**\n   * Ex: 300\n   * @member {Number} timeZoneOffset\n   */\n  exports.prototype['timeZoneOffset'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} trackLocation\n   */\n  exports.prototype['trackLocation'] = undefined;\n  /**\n   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * Ex: 2013-12-03 15:25:13 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} userRegistered\n   */\n  exports.prototype['userRegistered'] = undefined;\n  /**\n   * Ex: https://plus.google.com/+MikeSinn\n   * @member {String} userUrl\n   */\n  exports.prototype['userUrl'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./AuthorizedClients\":25,\"./Card\":27}],81:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.UserTag = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The UserTag model module.\n   * @module model/UserTag\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>UserTag</code>.\n   * @alias module:model/UserTag\n   * @class\n   * @param conversionFactor {Number} Number by which we multiply the tagged variable value to obtain the tag variable (ingredient) value\n   * @param taggedVariableId {Number} This is the id of the variable being tagged with an ingredient or something.\n   * @param tagVariableId {Number} This is the id of the ingredient variable whose value is determined based on the value of the tagged variable.\n   */\n  var exports = function(conversionFactor, taggedVariableId, tagVariableId) {\n    var _this = this;\n\n    _this['conversionFactor'] = conversionFactor;\n    _this['taggedVariableId'] = taggedVariableId;\n    _this['tagVariableId'] = tagVariableId;\n  };\n\n  /**\n   * Constructs a <code>UserTag</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UserTag} obj Optional instance to populate.\n   * @return {module:model/UserTag} The populated <code>UserTag</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('conversionFactor')) {\n        obj['conversionFactor'] = ApiClient.convertToType(data['conversionFactor'], 'Number');\n      }\n      if (data.hasOwnProperty('taggedVariableId')) {\n        obj['taggedVariableId'] = ApiClient.convertToType(data['taggedVariableId'], 'Number');\n      }\n      if (data.hasOwnProperty('tagVariableId')) {\n        obj['tagVariableId'] = ApiClient.convertToType(data['tagVariableId'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Number by which we multiply the tagged variable value to obtain the tag variable (ingredient) value\n   * @member {Number} conversionFactor\n   */\n  exports.prototype['conversionFactor'] = undefined;\n  /**\n   * This is the id of the variable being tagged with an ingredient or something.\n   * @member {Number} taggedVariableId\n   */\n  exports.prototype['taggedVariableId'] = undefined;\n  /**\n   * This is the id of the ingredient variable whose value is determined based on the value of the tagged variable.\n   * @member {Number} tagVariableId\n   */\n  exports.prototype['tagVariableId'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],82:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.UserVariableDelete = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The UserVariableDelete model module.\n   * @module model/UserVariableDelete\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>UserVariableDelete</code>.\n   * @alias module:model/UserVariableDelete\n   * @class\n   * @param variableId {Number} Id of the variable whose measurements should be deleted\n   */\n  var exports = function(variableId) {\n    var _this = this;\n\n    _this['variableId'] = variableId;\n  };\n\n  /**\n   * Constructs a <code>UserVariableDelete</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UserVariableDelete} obj Optional instance to populate.\n   * @return {module:model/UserVariableDelete} The populated <code>UserVariableDelete</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Id of the variable whose measurements should be deleted\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],83:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Card', 'model/DataSource', 'model/TrackingReminderNotificationAction', 'model/Unit', 'model/Variable', 'model/VariableCategory', 'model/VariableCharts'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Card'), require('./DataSource'), require('./TrackingReminderNotificationAction'), require('./Unit'), require('./Variable'), require('./VariableCategory'), require('./VariableCharts'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Variable = factory(root.Quantimodo.ApiClient, root.Quantimodo.Card, root.Quantimodo.DataSource, root.Quantimodo.TrackingReminderNotificationAction, root.Quantimodo.Unit, root.Quantimodo.Variable, root.Quantimodo.VariableCategory, root.Quantimodo.VariableCharts);\n  }\n}(this, function(ApiClient, Card, DataSource, TrackingReminderNotificationAction, Unit, Variable, VariableCategory, VariableCharts) {\n  'use strict';\n\n\n\n\n  /**\n   * The Variable model module.\n   * @module model/Variable\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Variable</code>.\n   * @alias module:model/Variable\n   * @class\n   * @param id {Number} Ex: 95614\n   * @param name {String} Ex: Trader Joes Bedtime Tea / Sleepytime Tea (any Brand)\n   * @param userId {Number} User ID\n   * @param variableId {Number} Ex: 96380\n   */\n  var exports = function(id, name, userId, variableId) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['id'] = id;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['name'] = name;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['userId'] = userId;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['variableId'] = variableId;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Variable</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Variable} obj Optional instance to populate.\n   * @return {module:model/Variable} The populated <code>Variable</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('actionArray')) {\n        obj['actionArray'] = ApiClient.convertToType(data['actionArray'], [TrackingReminderNotificationAction]);\n      }\n      if (data.hasOwnProperty('alias')) {\n        obj['alias'] = ApiClient.convertToType(data['alias'], 'String');\n      }\n      if (data.hasOwnProperty('availableUnits')) {\n        obj['availableUnits'] = ApiClient.convertToType(data['availableUnits'], [Unit]);\n      }\n      if (data.hasOwnProperty('bestStudyLink')) {\n        obj['bestStudyLink'] = ApiClient.convertToType(data['bestStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestUserStudyLink')) {\n        obj['bestUserStudyLink'] = ApiClient.convertToType(data['bestUserStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('bestPopulationStudyLink')) {\n        obj['bestPopulationStudyLink'] = ApiClient.convertToType(data['bestPopulationStudyLink'], 'String');\n      }\n      if (data.hasOwnProperty('optimalValueMessage')) {\n        obj['optimalValueMessage'] = ApiClient.convertToType(data['optimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('commonOptimalValueMessage')) {\n        obj['commonOptimalValueMessage'] = ApiClient.convertToType(data['commonOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('userOptimalValueMessage')) {\n        obj['userOptimalValueMessage'] = ApiClient.convertToType(data['userOptimalValueMessage'], 'String');\n      }\n      if (data.hasOwnProperty('card')) {\n        obj['card'] = Card.constructFromObject(data['card']);\n      }\n      if (data.hasOwnProperty('causeOnly')) {\n        obj['causeOnly'] = ApiClient.convertToType(data['causeOnly'], 'Boolean');\n      }\n      if (data.hasOwnProperty('charts')) {\n        obj['charts'] = VariableCharts.constructFromObject(data['charts']);\n      }\n      if (data.hasOwnProperty('chartsLinkDynamic')) {\n        obj['chartsLinkDynamic'] = ApiClient.convertToType(data['chartsLinkDynamic'], 'String');\n      }\n      if (data.hasOwnProperty('chartsLinkEmail')) {\n        obj['chartsLinkEmail'] = ApiClient.convertToType(data['chartsLinkEmail'], 'String');\n      }\n      if (data.hasOwnProperty('chartsLinkFacebook')) {\n        obj['chartsLinkFacebook'] = ApiClient.convertToType(data['chartsLinkFacebook'], 'String');\n      }\n      if (data.hasOwnProperty('chartsLinkGoogle')) {\n        obj['chartsLinkGoogle'] = ApiClient.convertToType(data['chartsLinkGoogle'], 'String');\n      }\n      if (data.hasOwnProperty('chartsLinkStatic')) {\n        obj['chartsLinkStatic'] = ApiClient.convertToType(data['chartsLinkStatic'], 'String');\n      }\n      if (data.hasOwnProperty('chartsLinkTwitter')) {\n        obj['chartsLinkTwitter'] = ApiClient.convertToType(data['chartsLinkTwitter'], 'String');\n      }\n      if (data.hasOwnProperty('childCommonTagVariables')) {\n        obj['childCommonTagVariables'] = ApiClient.convertToType(data['childCommonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('childUserTagVariables')) {\n        obj['childUserTagVariables'] = ApiClient.convertToType(data['childUserTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('combinationOperation')) {\n        obj['combinationOperation'] = ApiClient.convertToType(data['combinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('commonAlias')) {\n        obj['commonAlias'] = ApiClient.convertToType(data['commonAlias'], 'String');\n      }\n      if (data.hasOwnProperty('commonTaggedVariables')) {\n        obj['commonTaggedVariables'] = ApiClient.convertToType(data['commonTaggedVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('commonTagVariables')) {\n        obj['commonTagVariables'] = ApiClient.convertToType(data['commonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('commonVariableMostCommonConnectorId')) {\n        obj['commonVariableMostCommonConnectorId'] = ApiClient.convertToType(data['commonVariableMostCommonConnectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('commonVariableUpdatedAt')) {\n        obj['commonVariableUpdatedAt'] = ApiClient.convertToType(data['commonVariableUpdatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('dataSourceNames')) {\n        obj['dataSourceNames'] = ApiClient.convertToType(data['dataSourceNames'], 'String');\n      }\n      if (data.hasOwnProperty('dataSources')) {\n        obj['dataSources'] = ApiClient.convertToType(data['dataSources'], [DataSource]);\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('displayName')) {\n        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');\n      }\n      if (data.hasOwnProperty('durationOfAction')) {\n        obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');\n      }\n      if (data.hasOwnProperty('durationOfActionInHours')) {\n        obj['durationOfActionInHours'] = ApiClient.convertToType(data['durationOfActionInHours'], 'Number');\n      }\n      if (data.hasOwnProperty('earliestFillingTime')) {\n        obj['earliestFillingTime'] = ApiClient.convertToType(data['earliestFillingTime'], 'Number');\n      }\n      if (data.hasOwnProperty('earliestMeasurementTime')) {\n        obj['earliestMeasurementTime'] = ApiClient.convertToType(data['earliestMeasurementTime'], 'Number');\n      }\n      if (data.hasOwnProperty('earliestSourceTime')) {\n        obj['earliestSourceTime'] = ApiClient.convertToType(data['earliestSourceTime'], 'Number');\n      }\n      if (data.hasOwnProperty('errorMessage')) {\n        obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');\n      }\n      if (data.hasOwnProperty('experimentEndTime')) {\n        obj['experimentEndTime'] = ApiClient.convertToType(data['experimentEndTime'], 'String');\n      }\n      if (data.hasOwnProperty('experimentEndTimeSeconds')) {\n        obj['experimentEndTimeSeconds'] = ApiClient.convertToType(data['experimentEndTimeSeconds'], 'Number');\n      }\n      if (data.hasOwnProperty('experimentEndTimeString')) {\n        obj['experimentEndTimeString'] = ApiClient.convertToType(data['experimentEndTimeString'], 'String');\n      }\n      if (data.hasOwnProperty('experimentStartTime')) {\n        obj['experimentStartTime'] = ApiClient.convertToType(data['experimentStartTime'], 'String');\n      }\n      if (data.hasOwnProperty('experimentStartTimeSeconds')) {\n        obj['experimentStartTimeSeconds'] = ApiClient.convertToType(data['experimentStartTimeSeconds'], 'Number');\n      }\n      if (data.hasOwnProperty('experimentStartTimeString')) {\n        obj['experimentStartTimeString'] = ApiClient.convertToType(data['experimentStartTimeString'], 'String');\n      }\n      if (data.hasOwnProperty('fillingType')) {\n        obj['fillingType'] = ApiClient.convertToType(data['fillingType'], 'String');\n      }\n      if (data.hasOwnProperty('fillingValue')) {\n        obj['fillingValue'] = ApiClient.convertToType(data['fillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('iconIcon')) {\n        obj['iconIcon'] = ApiClient.convertToType(data['iconIcon'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('imageUrl')) {\n        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('informationalUrl')) {\n        obj['informationalUrl'] = ApiClient.convertToType(data['informationalUrl'], 'String');\n      }\n      if (data.hasOwnProperty('ingredientOfCommonTagVariables')) {\n        obj['ingredientOfCommonTagVariables'] = ApiClient.convertToType(data['ingredientOfCommonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('ingredientCommonTagVariables')) {\n        obj['ingredientCommonTagVariables'] = ApiClient.convertToType(data['ingredientCommonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('ingredientOfUserTagVariables')) {\n        obj['ingredientOfUserTagVariables'] = ApiClient.convertToType(data['ingredientOfUserTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('ingredientUserTagVariables')) {\n        obj['ingredientUserTagVariables'] = ApiClient.convertToType(data['ingredientUserTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('inputType')) {\n        obj['inputType'] = ApiClient.convertToType(data['inputType'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('joinedCommonTagVariables')) {\n        obj['joinedCommonTagVariables'] = ApiClient.convertToType(data['joinedCommonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('joinedUserTagVariables')) {\n        obj['joinedUserTagVariables'] = ApiClient.convertToType(data['joinedUserTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('joinWith')) {\n        obj['joinWith'] = ApiClient.convertToType(data['joinWith'], 'Number');\n      }\n      if (data.hasOwnProperty('kurtosis')) {\n        obj['kurtosis'] = ApiClient.convertToType(data['kurtosis'], 'Number');\n      }\n      if (data.hasOwnProperty('lastOriginalUnitId')) {\n        obj['lastOriginalUnitId'] = ApiClient.convertToType(data['lastOriginalUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('lastOriginalValue')) {\n        obj['lastOriginalValue'] = ApiClient.convertToType(data['lastOriginalValue'], 'Number');\n      }\n      if (data.hasOwnProperty('lastProcessedDailyValue')) {\n        obj['lastProcessedDailyValue'] = ApiClient.convertToType(data['lastProcessedDailyValue'], 'Number');\n      }\n      if (data.hasOwnProperty('lastSuccessfulUpdateTime')) {\n        obj['lastSuccessfulUpdateTime'] = ApiClient.convertToType(data['lastSuccessfulUpdateTime'], 'String');\n      }\n      if (data.hasOwnProperty('lastUnitId')) {\n        obj['lastUnitId'] = ApiClient.convertToType(data['lastUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('lastValue')) {\n        obj['lastValue'] = ApiClient.convertToType(data['lastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('latestFillingTime')) {\n        obj['latestFillingTime'] = ApiClient.convertToType(data['latestFillingTime'], 'Number');\n      }\n      if (data.hasOwnProperty('latestMeasurementTime')) {\n        obj['latestMeasurementTime'] = ApiClient.convertToType(data['latestMeasurementTime'], 'Number');\n      }\n      if (data.hasOwnProperty('latestSourceTime')) {\n        obj['latestSourceTime'] = ApiClient.convertToType(data['latestSourceTime'], 'Number');\n      }\n      if (data.hasOwnProperty('latestUserMeasurementTime')) {\n        obj['latestUserMeasurementTime'] = ApiClient.convertToType(data['latestUserMeasurementTime'], 'Number');\n      }\n      if (data.hasOwnProperty('latitude')) {\n        obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');\n      }\n      if (data.hasOwnProperty('location')) {\n        obj['location'] = ApiClient.convertToType(data['location'], 'String');\n      }\n      if (data.hasOwnProperty('longitude')) {\n        obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Boolean');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('maximumRecordedDailyValue')) {\n        obj['maximumRecordedDailyValue'] = ApiClient.convertToType(data['maximumRecordedDailyValue'], 'Number');\n      }\n      if (data.hasOwnProperty('maximumRecordedValue')) {\n        obj['maximumRecordedValue'] = ApiClient.convertToType(data['maximumRecordedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('mean')) {\n        obj['mean'] = ApiClient.convertToType(data['mean'], 'Number');\n      }\n      if (data.hasOwnProperty('measurementsAtLastAnalysis')) {\n        obj['measurementsAtLastAnalysis'] = ApiClient.convertToType(data['measurementsAtLastAnalysis'], 'Number');\n      }\n      if (data.hasOwnProperty('median')) {\n        obj['median'] = ApiClient.convertToType(data['median'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('minimumRecordedValue')) {\n        obj['minimumRecordedValue'] = ApiClient.convertToType(data['minimumRecordedValue'], 'Number');\n      }\n      if (data.hasOwnProperty('mostCommonConnectorId')) {\n        obj['mostCommonConnectorId'] = ApiClient.convertToType(data['mostCommonConnectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('mostCommonOriginalUnitId')) {\n        obj['mostCommonOriginalUnitId'] = ApiClient.convertToType(data['mostCommonOriginalUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('mostCommonUnitId')) {\n        obj['mostCommonUnitId'] = ApiClient.convertToType(data['mostCommonUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('mostCommonValue')) {\n        obj['mostCommonValue'] = ApiClient.convertToType(data['mostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('numberOfAggregateCorrelationsAsCause')) {\n        obj['numberOfAggregateCorrelationsAsCause'] = ApiClient.convertToType(data['numberOfAggregateCorrelationsAsCause'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfAggregateCorrelationsAsEffect')) {\n        obj['numberOfAggregateCorrelationsAsEffect'] = ApiClient.convertToType(data['numberOfAggregateCorrelationsAsEffect'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfChanges')) {\n        obj['numberOfChanges'] = ApiClient.convertToType(data['numberOfChanges'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfCorrelations')) {\n        obj['numberOfCorrelations'] = ApiClient.convertToType(data['numberOfCorrelations'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfCorrelationsAsCause')) {\n        obj['numberOfCorrelationsAsCause'] = ApiClient.convertToType(data['numberOfCorrelationsAsCause'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfCorrelationsAsEffect')) {\n        obj['numberOfCorrelationsAsEffect'] = ApiClient.convertToType(data['numberOfCorrelationsAsEffect'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfProcessedDailyMeasurements')) {\n        obj['numberOfProcessedDailyMeasurements'] = ApiClient.convertToType(data['numberOfProcessedDailyMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfRawMeasurements')) {\n        obj['numberOfRawMeasurements'] = ApiClient.convertToType(data['numberOfRawMeasurements'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfTrackingReminders')) {\n        obj['numberOfTrackingReminders'] = ApiClient.convertToType(data['numberOfTrackingReminders'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUniqueDailyValues')) {\n        obj['numberOfUniqueDailyValues'] = ApiClient.convertToType(data['numberOfUniqueDailyValues'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUniqueValues')) {\n        obj['numberOfUniqueValues'] = ApiClient.convertToType(data['numberOfUniqueValues'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUserCorrelationsAsCause')) {\n        obj['numberOfUserCorrelationsAsCause'] = ApiClient.convertToType(data['numberOfUserCorrelationsAsCause'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUserCorrelationsAsEffect')) {\n        obj['numberOfUserCorrelationsAsEffect'] = ApiClient.convertToType(data['numberOfUserCorrelationsAsEffect'], 'Number');\n      }\n      if (data.hasOwnProperty('numberOfUserVariables')) {\n        obj['numberOfUserVariables'] = ApiClient.convertToType(data['numberOfUserVariables'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelay')) {\n        obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');\n      }\n      if (data.hasOwnProperty('onsetDelayInHours')) {\n        obj['onsetDelayInHours'] = ApiClient.convertToType(data['onsetDelayInHours'], 'Number');\n      }\n      if (data.hasOwnProperty('outcome')) {\n        obj['outcome'] = ApiClient.convertToType(data['outcome'], 'Boolean');\n      }\n      if (data.hasOwnProperty('outcomeOfInterest')) {\n        obj['outcomeOfInterest'] = ApiClient.convertToType(data['outcomeOfInterest'], 'Number');\n      }\n      if (data.hasOwnProperty('parentCommonTagVariables')) {\n        obj['parentCommonTagVariables'] = ApiClient.convertToType(data['parentCommonTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('parentUserTagVariables')) {\n        obj['parentUserTagVariables'] = ApiClient.convertToType(data['parentUserTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('pngPath')) {\n        obj['pngPath'] = ApiClient.convertToType(data['pngPath'], 'String');\n      }\n      if (data.hasOwnProperty('pngUrl')) {\n        obj['pngUrl'] = ApiClient.convertToType(data['pngUrl'], 'String');\n      }\n      if (data.hasOwnProperty('predictorOfInterest')) {\n        obj['predictorOfInterest'] = ApiClient.convertToType(data['predictorOfInterest'], 'Number');\n      }\n      if (data.hasOwnProperty('price')) {\n        obj['price'] = ApiClient.convertToType(data['price'], 'Number');\n      }\n      if (data.hasOwnProperty('productUrl')) {\n        obj['productUrl'] = ApiClient.convertToType(data['productUrl'], 'String');\n      }\n      if (data.hasOwnProperty('public')) {\n        obj['public'] = ApiClient.convertToType(data['public'], 'Number');\n      }\n      if (data.hasOwnProperty('question')) {\n        obj['question'] = ApiClient.convertToType(data['question'], 'String');\n      }\n      if (data.hasOwnProperty('longQuestion')) {\n        obj['longQuestion'] = ApiClient.convertToType(data['longQuestion'], 'String');\n      }\n      if (data.hasOwnProperty('rawMeasurementsAtLastAnalysis')) {\n        obj['rawMeasurementsAtLastAnalysis'] = ApiClient.convertToType(data['rawMeasurementsAtLastAnalysis'], 'Number');\n      }\n      if (data.hasOwnProperty('secondMostCommonValue')) {\n        obj['secondMostCommonValue'] = ApiClient.convertToType(data['secondMostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('secondToLastValue')) {\n        obj['secondToLastValue'] = ApiClient.convertToType(data['secondToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('shareUserMeasurements')) {\n        obj['shareUserMeasurements'] = ApiClient.convertToType(data['shareUserMeasurements'], 'Boolean');\n      }\n      if (data.hasOwnProperty('skewness')) {\n        obj['skewness'] = ApiClient.convertToType(data['skewness'], 'Number');\n      }\n      if (data.hasOwnProperty('standardDeviation')) {\n        obj['standardDeviation'] = ApiClient.convertToType(data['standardDeviation'], 'Number');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('subtitle')) {\n        obj['subtitle'] = ApiClient.convertToType(data['subtitle'], 'String');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('thirdMostCommonValue')) {\n        obj['thirdMostCommonValue'] = ApiClient.convertToType(data['thirdMostCommonValue'], 'Number');\n      }\n      if (data.hasOwnProperty('thirdToLastValue')) {\n        obj['thirdToLastValue'] = ApiClient.convertToType(data['thirdToLastValue'], 'Number');\n      }\n      if (data.hasOwnProperty('trackingInstructions')) {\n        obj['trackingInstructions'] = ApiClient.convertToType(data['trackingInstructions'], 'String');\n      }\n      if (data.hasOwnProperty('trackingInstructionsCard')) {\n        obj['trackingInstructionsCard'] = Card.constructFromObject(data['trackingInstructionsCard']);\n      }\n      if (data.hasOwnProperty('unit')) {\n        obj['unit'] = Unit.constructFromObject(data['unit']);\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('unitCategoryId')) {\n        obj['unitCategoryId'] = ApiClient.convertToType(data['unitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitCategoryName')) {\n        obj['unitCategoryName'] = ApiClient.convertToType(data['unitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('unitId')) {\n        obj['unitId'] = ApiClient.convertToType(data['unitId'], 'Number');\n      }\n      if (data.hasOwnProperty('unitName')) {\n        obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');\n      }\n      if (data.hasOwnProperty('upc')) {\n        obj['upc'] = ApiClient.convertToType(data['upc'], 'String');\n      }\n      if (data.hasOwnProperty('updated')) {\n        obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('updatedTime')) {\n        obj['updatedTime'] = ApiClient.convertToType(data['updatedTime'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n      if (data.hasOwnProperty('userTaggedVariables')) {\n        obj['userTaggedVariables'] = ApiClient.convertToType(data['userTaggedVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('userTagVariables')) {\n        obj['userTagVariables'] = ApiClient.convertToType(data['userTagVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('userVariableUnitAbbreviatedName')) {\n        obj['userVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['userVariableUnitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryId')) {\n        obj['userVariableUnitCategoryId'] = ApiClient.convertToType(data['userVariableUnitCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitCategoryName')) {\n        obj['userVariableUnitCategoryName'] = ApiClient.convertToType(data['userVariableUnitCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableUnitId')) {\n        obj['userVariableUnitId'] = ApiClient.convertToType(data['userVariableUnitId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUnitName')) {\n        obj['userVariableUnitName'] = ApiClient.convertToType(data['userVariableUnitName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableFillingValue')) {\n        obj['userVariableFillingValue'] = ApiClient.convertToType(data['userVariableFillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableMostCommonConnectorId')) {\n        obj['userVariableMostCommonConnectorId'] = ApiClient.convertToType(data['userVariableMostCommonConnectorId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableUpdatedAt')) {\n        obj['userVariableUpdatedAt'] = ApiClient.convertToType(data['userVariableUpdatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableValence')) {\n        obj['userVariableValence'] = ApiClient.convertToType(data['userVariableValence'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryId')) {\n        obj['userVariableVariableCategoryId'] = ApiClient.convertToType(data['userVariableVariableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('userVariableVariableCategoryName')) {\n        obj['userVariableVariableCategoryName'] = ApiClient.convertToType(data['userVariableVariableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('userVariableWikipediaTitle')) {\n        obj['userVariableWikipediaTitle'] = ApiClient.convertToType(data['userVariableWikipediaTitle'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategory')) {\n        obj['variableCategory'] = VariableCategory.constructFromObject(data['variableCategory']);\n      }\n      if (data.hasOwnProperty('joinedVariables')) {\n        obj['joinedVariables'] = ApiClient.convertToType(data['joinedVariables'], [Variable]);\n      }\n      if (data.hasOwnProperty('lastSource')) {\n        obj['lastSource'] = ApiClient.convertToType(data['lastSource'], 'Number');\n      }\n      if (data.hasOwnProperty('lastUnit')) {\n        obj['lastUnit'] = ApiClient.convertToType(data['lastUnit'], 'String');\n      }\n      if (data.hasOwnProperty('mostCommonUnit')) {\n        obj['mostCommonUnit'] = ApiClient.convertToType(data['mostCommonUnit'], 'String');\n      }\n      if (data.hasOwnProperty('valence')) {\n        obj['valence'] = ApiClient.convertToType(data['valence'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryId')) {\n        obj['variableCategoryId'] = ApiClient.convertToType(data['variableCategoryId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableCategoryImageUrl')) {\n        obj['variableCategoryImageUrl'] = ApiClient.convertToType(data['variableCategoryImageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableFillingValue')) {\n        obj['variableFillingValue'] = ApiClient.convertToType(data['variableFillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('variableId')) {\n        obj['variableId'] = ApiClient.convertToType(data['variableId'], 'Number');\n      }\n      if (data.hasOwnProperty('variableName')) {\n        obj['variableName'] = ApiClient.convertToType(data['variableName'], 'String');\n      }\n      if (data.hasOwnProperty('variance')) {\n        obj['variance'] = ApiClient.convertToType(data['variance'], 'Number');\n      }\n      if (data.hasOwnProperty('wikipediaTitle')) {\n        obj['wikipediaTitle'] = ApiClient.convertToType(data['wikipediaTitle'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/TrackingReminderNotificationAction>} actionArray\n   */\n  exports.prototype['actionArray'] = undefined;\n  /**\n   * Alternative name\n   * @member {String} alias\n   */\n  exports.prototype['alias'] = undefined;\n  /**\n   * @member {Array.<module:model/Unit>} availableUnits\n   */\n  exports.prototype['availableUnits'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user or population\n   * @member {String} bestStudyLink\n   */\n  exports.prototype['bestStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for user\n   * @member {String} bestUserStudyLink\n   */\n  exports.prototype['bestUserStudyLink'] = undefined;\n  /**\n   * Link to study comparing variable with strongest relationship for population\n   * @member {String} bestPopulationStudyLink\n   */\n  exports.prototype['bestPopulationStudyLink'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user or population\n   * @member {String} optimalValueMessage\n   */\n  exports.prototype['optimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for population\n   * @member {String} commonOptimalValueMessage\n   */\n  exports.prototype['commonOptimalValueMessage'] = undefined;\n  /**\n   * Description of relationship with variable with strongest relationship for user\n   * @member {String} userOptimalValueMessage\n   */\n  exports.prototype['userOptimalValueMessage'] = undefined;\n  /**\n   * Card containing instructions, image, text, link and relevant import buttons\n   * @member {module:model/Card} card\n   */\n  exports.prototype['card'] = undefined;\n  /**\n   * A value of 1 indicates that this variable is generally a cause in a causal relationship.  An example of a causeOnly variable would be a variable such as Cloud Cover which would generally not be influenced by the behaviour of the user\n   * @member {Boolean} causeOnly\n   */\n  exports.prototype['causeOnly'] = undefined;\n  /**\n   * @member {module:model/VariableCharts} charts\n   */\n  exports.prototype['charts'] = undefined;\n  /**\n   * Ex: https://local.quantimo.do/ionic/Modo/www/#/app/charts/Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29?variableName=Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Ftreatments.png\n   * @member {String} chartsLinkDynamic\n   */\n  exports.prototype['chartsLinkDynamic'] = undefined;\n  /**\n   * Ex: mailto:?subject=Check%20out%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20data%21&body=See%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20history%20at%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png%0A%0AHave%20a%20great%20day!\n   * @member {String} chartsLinkEmail\n   */\n  exports.prototype['chartsLinkEmail'] = undefined;\n  /**\n   * Ex: https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png\n   * @member {String} chartsLinkFacebook\n   */\n  exports.prototype['chartsLinkFacebook'] = undefined;\n  /**\n   * Ex: https://plus.google.com/share?url=https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png\n   * @member {String} chartsLinkGoogle\n   */\n  exports.prototype['chartsLinkGoogle'] = undefined;\n  /**\n   * Ex: https://local.quantimo.do/api/v2/charts?variableName=Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29&userId=230&pngUrl=https%3A%2F%2Fapp.quantimo.do%2Fionic%2FModo%2Fwww%2Fimg%2Fvariable_categories%2Ftreatments.png\n   * @member {String} chartsLinkStatic\n   */\n  exports.prototype['chartsLinkStatic'] = undefined;\n  /**\n   * Ex: https://twitter.com/home?status=Check%20out%20my%20Trader%20Joes%20Bedtime%20Tea%20%2F%20Sleepytime%20Tea%20%28any%20Brand%29%20data%21%20https%3A%2F%2Flocal.quantimo.do%2Fapi%2Fv2%2Fcharts%3FvariableName%3DTrader%2520Joes%2520Bedtime%2520Tea%2520%252F%2520Sleepytime%2520Tea%2520%2528any%2520Brand%2529%26userId%3D230%26pngUrl%3Dhttps%253A%252F%252Fapp.quantimo.do%252Fionic%252FModo%252Fwww%252Fimg%252Fvariable_categories%252Ftreatments.png%20%40quantimodo\n   * @member {String} chartsLinkTwitter\n   */\n  exports.prototype['chartsLinkTwitter'] = undefined;\n  /**\n   * Commonly defined for all users. An example of a parent category variable would be Fruit when tagged with the child sub-type variables Apple.  Child variable (Apple) measurements will be included when the parent category (Fruit) is analyzed.  This allows us to see how Fruit consumption might be affecting without having to record both Fruit and Apple intake.\n   * @member {Array.<module:model/Variable>} childCommonTagVariables\n   */\n  exports.prototype['childCommonTagVariables'] = undefined;\n  /**\n   * User-defined. An example of a parent category variable would be Fruit when tagged with the child sub-type variables Apple.  Child variable (Apple) measurements will be included when the parent category (Fruit) is analyzed.  This allows us to see how Fruit consumption might be affecting without having to record both Fruit and Apple intake.\n   * @member {Array.<module:model/Variable>} childUserTagVariables\n   */\n  exports.prototype['childUserTagVariables'] = undefined;\n  /**\n   * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * Ex: MEAN\n   * @member {String} combinationOperation\n   */\n  exports.prototype['combinationOperation'] = undefined;\n  /**\n   * Ex: Anxiety / Nervousness\n   * @member {String} commonAlias\n   */\n  exports.prototype['commonAlias'] = undefined;\n  /**\n   * @member {Array.<module:model/Variable>} commonTaggedVariables\n   */\n  exports.prototype['commonTaggedVariables'] = undefined;\n  /**\n   * @member {Array.<module:model/Variable>} commonTagVariables\n   */\n  exports.prototype['commonTagVariables'] = undefined;\n  /**\n   * Ex: 51\n   * @member {Number} commonVariableMostCommonConnectorId\n   */\n  exports.prototype['commonVariableMostCommonConnectorId'] = undefined;\n  /**\n   * Ex: 2017-02-07 23:43:39 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} commonVariableUpdatedAt\n   */\n  exports.prototype['commonVariableUpdatedAt'] = undefined;\n  /**\n   * When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Comma-separated list of source names to limit variables to those sources\n   * @member {String} dataSourceNames\n   */\n  exports.prototype['dataSourceNames'] = undefined;\n  /**\n   * These are sources of measurements for this variable\n   * @member {Array.<module:model/DataSource>} dataSources\n   */\n  exports.prototype['dataSources'] = undefined;\n  /**\n   * Ex: negative\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * Ex: Trader Joe's Bedtime Tea\n   * @member {String} displayName\n   */\n  exports.prototype['displayName'] = undefined;\n  /**\n   * The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable value. For instance, aspirin (stimulus/predictor) typically decreases headache severity for approximately four hours (duration of action) following the onset delay.\n   * @member {Number} durationOfAction\n   */\n  exports.prototype['durationOfAction'] = undefined;\n  /**\n   * Ex: 168\n   * @member {Number} durationOfActionInHours\n   */\n  exports.prototype['durationOfActionInHours'] = undefined;\n  /**\n   * Earliest filling time\n   * @member {Number} earliestFillingTime\n   */\n  exports.prototype['earliestFillingTime'] = undefined;\n  /**\n   * Earliest measurement time\n   * @member {Number} earliestMeasurementTime\n   */\n  exports.prototype['earliestMeasurementTime'] = undefined;\n  /**\n   * Earliest source time\n   * @member {Number} earliestSourceTime\n   */\n  exports.prototype['earliestSourceTime'] = undefined;\n  /**\n   * error_message\n   * @member {String} errorMessage\n   */\n  exports.prototype['errorMessage'] = undefined;\n  /**\n   * Latest measurement start_time to be used in analysis. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format\n   * @member {String} experimentEndTime\n   */\n  exports.prototype['experimentEndTime'] = undefined;\n  /**\n   * Ex: 1893477600\n   * @member {Number} experimentEndTimeSeconds\n   */\n  exports.prototype['experimentEndTimeSeconds'] = undefined;\n  /**\n   * Ex: 2030-01-01 06:00:00 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} experimentEndTimeString\n   */\n  exports.prototype['experimentEndTimeString'] = undefined;\n  /**\n   * Earliest measurement start_time to be used in analysis. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format\n   * @member {String} experimentStartTime\n   */\n  exports.prototype['experimentStartTime'] = undefined;\n  /**\n   * Ex: 1269307902\n   * @member {Number} experimentStartTimeSeconds\n   */\n  exports.prototype['experimentStartTimeSeconds'] = undefined;\n  /**\n   * Ex: 2010-03-23 01:31:42 UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} experimentStartTimeString\n   */\n  exports.prototype['experimentStartTimeString'] = undefined;\n  /**\n   * 0 -> No filling, 1 -> Use filling-value\n   * @member {String} fillingType\n   */\n  exports.prototype['fillingType'] = undefined;\n  /**\n   * When it comes to analysis to determine the effects of this variable, knowing when it did not occur is as important as knowing when it did occur. For example, if you are tracking a medication, it is important to know when you did not take it, but you do not have to log zero values for all the days when you haven't taken it. Hence, you can specify a filling value (typically 0) to insert whenever data is missing.\n   * @member {Number} fillingValue\n   */\n  exports.prototype['fillingValue'] = undefined;\n  /**\n   * Ex: ion-sad-outline\n   * @member {String} iconIcon\n   */\n  exports.prototype['iconIcon'] = undefined;\n  /**\n   * Ex: 95614\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} imageUrl\n   */\n  exports.prototype['imageUrl'] = undefined;\n  /**\n   * Ex: https://google.com\n   * @member {String} informationalUrl\n   */\n  exports.prototype['informationalUrl'] = undefined;\n  /**\n   * Commonly defined for all users. IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredient of the variable Lollypop could be Sugar.  This way you only have to record Lollypop consumption and we can use this data to see how sugar might be affecting you.\n   * @member {Array.<module:model/Variable>} ingredientOfCommonTagVariables\n   */\n  exports.prototype['ingredientOfCommonTagVariables'] = undefined;\n  /**\n   * Commonly defined for all users. IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredient of the variable Lollypop could be Sugar.  This way you only have to record Lollypop consumption and we can use this data to see how sugar might be affecting you.\n   * @member {Array.<module:model/Variable>} ingredientCommonTagVariables\n   */\n  exports.prototype['ingredientCommonTagVariables'] = undefined;\n  /**\n   * User-specific IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredient of the variable Lollypop could be Sugar.  This way you only have to record Lollypop consumption and we can use this data to see how sugar might be affecting you.\n   * @member {Array.<module:model/Variable>} ingredientOfUserTagVariables\n   */\n  exports.prototype['ingredientOfUserTagVariables'] = undefined;\n  /**\n   * User-specific IngredientOf variable measurements will be included in analysis of the ingredient variable.  For instance, a ingredient of the variable Lollypop could be Sugar.  This way you only have to record Lollypop consumption and we can use this data to see how sugar might be affecting you.\n   * @member {Array.<module:model/Variable>} ingredientUserTagVariables\n   */\n  exports.prototype['ingredientUserTagVariables'] = undefined;\n  /**\n   * Ex: value\n   * @member {String} inputType\n   */\n  exports.prototype['inputType'] = undefined;\n  /**\n   * What do you expect?\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * Commonly defined for all users.  Joining can be used used to merge duplicate variables. For instance, if two variables called Apples (Red Delicious) and Red Delicious Apples are joined, when one of them is analyzed, the measurements for the other will be included as well.\n   * @member {Array.<module:model/Variable>} joinedCommonTagVariables\n   */\n  exports.prototype['joinedCommonTagVariables'] = undefined;\n  /**\n   * User-defined. Joining can be used used to merge duplicate variables. For instance, if two variables called Apples (Red Delicious) and Red Delicious Apples are joined, when one of them is analyzed, the measurements for the other will be included as well.\n   * @member {Array.<module:model/Variable>} joinedUserTagVariables\n   */\n  exports.prototype['joinedUserTagVariables'] = undefined;\n  /**\n   * The Variable this Variable should be joined with. If the variable is joined with some other variable then it is not shown to user in the list of variables\n   * @member {Number} joinWith\n   */\n  exports.prototype['joinWith'] = undefined;\n  /**\n   * Kurtosis\n   * @member {Number} kurtosis\n   */\n  exports.prototype['kurtosis'] = undefined;\n  /**\n   * ID of last original Unit\n   * @member {Number} lastOriginalUnitId\n   */\n  exports.prototype['lastOriginalUnitId'] = undefined;\n  /**\n   * Last original value which is stored\n   * @member {Number} lastOriginalValue\n   */\n  exports.prototype['lastOriginalValue'] = undefined;\n  /**\n   * Ex: 500\n   * @member {Number} lastProcessedDailyValue\n   */\n  exports.prototype['lastProcessedDailyValue'] = undefined;\n  /**\n   * When this variable or its settings were last updated UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} lastSuccessfulUpdateTime\n   */\n  exports.prototype['lastSuccessfulUpdateTime'] = undefined;\n  /**\n   * ID of last Unit\n   * @member {Number} lastUnitId\n   */\n  exports.prototype['lastUnitId'] = undefined;\n  /**\n   * Last Value\n   * @member {Number} lastValue\n   */\n  exports.prototype['lastValue'] = undefined;\n  /**\n   * Latest filling time\n   * @member {Number} latestFillingTime\n   */\n  exports.prototype['latestFillingTime'] = undefined;\n  /**\n   * Latest measurement time\n   * @member {Number} latestMeasurementTime\n   */\n  exports.prototype['latestMeasurementTime'] = undefined;\n  /**\n   * Latest source time\n   * @member {Number} latestSourceTime\n   */\n  exports.prototype['latestSourceTime'] = undefined;\n  /**\n   * Ex: 1501383600\n   * @member {Number} latestUserMeasurementTime\n   */\n  exports.prototype['latestUserMeasurementTime'] = undefined;\n  /**\n   * Latitude\n   * @member {Number} latitude\n   */\n  exports.prototype['latitude'] = undefined;\n  /**\n   * Location\n   * @member {String} location\n   */\n  exports.prototype['location'] = undefined;\n  /**\n   * Longitude\n   * @member {Number} longitude\n   */\n  exports.prototype['longitude'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Boolean} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * The maximum allowed value for measurements. While you can record a value above this maximum, it will be excluded from the correlation analysis.\n   * @member {Number} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Maximum recorded daily value of this variable\n   * @member {Number} maximumRecordedDailyValue\n   */\n  exports.prototype['maximumRecordedDailyValue'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} maximumRecordedValue\n   */\n  exports.prototype['maximumRecordedValue'] = undefined;\n  /**\n   * Mean\n   * @member {Number} mean\n   */\n  exports.prototype['mean'] = undefined;\n  /**\n   * Number of measurements at last analysis\n   * @member {Number} measurementsAtLastAnalysis\n   */\n  exports.prototype['measurementsAtLastAnalysis'] = undefined;\n  /**\n   * Median\n   * @member {Number} median\n   */\n  exports.prototype['median'] = undefined;\n  /**\n   * The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis.\n   * @member {Number} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Minimum recorded value of this variable\n   * @member {Number} minimumRecordedValue\n   */\n  exports.prototype['minimumRecordedValue'] = undefined;\n  /**\n   * Ex: 51\n   * @member {Number} mostCommonConnectorId\n   */\n  exports.prototype['mostCommonConnectorId'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} mostCommonOriginalUnitId\n   */\n  exports.prototype['mostCommonOriginalUnitId'] = undefined;\n  /**\n   * Most common Unit ID\n   * @member {Number} mostCommonUnitId\n   */\n  exports.prototype['mostCommonUnitId'] = undefined;\n  /**\n   * Most common value\n   * @member {Number} mostCommonValue\n   */\n  exports.prototype['mostCommonValue'] = undefined;\n  /**\n   * Ex: Trader Joes Bedtime Tea / Sleepytime Tea (any Brand)\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} numberOfAggregateCorrelationsAsCause\n   */\n  exports.prototype['numberOfAggregateCorrelationsAsCause'] = undefined;\n  /**\n   * Ex: 310\n   * @member {Number} numberOfAggregateCorrelationsAsEffect\n   */\n  exports.prototype['numberOfAggregateCorrelationsAsEffect'] = undefined;\n  /**\n   * Number of changes\n   * @member {Number} numberOfChanges\n   */\n  exports.prototype['numberOfChanges'] = undefined;\n  /**\n   * Number of correlations for this variable\n   * @member {Number} numberOfCorrelations\n   */\n  exports.prototype['numberOfCorrelations'] = undefined;\n  /**\n   * numberOfAggregateCorrelationsAsCause plus numberOfUserCorrelationsAsCause\n   * @member {Number} numberOfCorrelationsAsCause\n   */\n  exports.prototype['numberOfCorrelationsAsCause'] = undefined;\n  /**\n   * numberOfAggregateCorrelationsAsEffect plus numberOfUserCorrelationsAsEffect\n   * @member {Number} numberOfCorrelationsAsEffect\n   */\n  exports.prototype['numberOfCorrelationsAsEffect'] = undefined;\n  /**\n   * Number of processed measurements\n   * @member {Number} numberOfProcessedDailyMeasurements\n   */\n  exports.prototype['numberOfProcessedDailyMeasurements'] = undefined;\n  /**\n   * Ex: 295\n   * @member {Number} numberOfRawMeasurements\n   */\n  exports.prototype['numberOfRawMeasurements'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} numberOfTrackingReminders\n   */\n  exports.prototype['numberOfTrackingReminders'] = undefined;\n  /**\n   * Number of unique daily values\n   * @member {Number} numberOfUniqueDailyValues\n   */\n  exports.prototype['numberOfUniqueDailyValues'] = undefined;\n  /**\n   * Ex: 2\n   * @member {Number} numberOfUniqueValues\n   */\n  exports.prototype['numberOfUniqueValues'] = undefined;\n  /**\n   * Ex: 115\n   * @member {Number} numberOfUserCorrelationsAsCause\n   */\n  exports.prototype['numberOfUserCorrelationsAsCause'] = undefined;\n  /**\n   * Ex: 29014\n   * @member {Number} numberOfUserCorrelationsAsEffect\n   */\n  exports.prototype['numberOfUserCorrelationsAsEffect'] = undefined;\n  /**\n   * Ex: 2\n   * @member {Number} numberOfUserVariables\n   */\n  exports.prototype['numberOfUserVariables'] = undefined;\n  /**\n   * The amount of time in seconds that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the onset delay. For example, the onset delay between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.\n   * @member {Number} onsetDelay\n   */\n  exports.prototype['onsetDelay'] = undefined;\n  /**\n   * Ex: 0.5\n   * @member {Number} onsetDelayInHours\n   */\n  exports.prototype['onsetDelayInHours'] = undefined;\n  /**\n   * Outcome variables (those with `outcome` == 1) are variables for which a human would generally want to identify the influencing factors. These include symptoms of illness, physique, mood, cognitive performance, etc.  Generally correlation calculations are only performed on outcome variables\n   * @member {Boolean} outcome\n   */\n  exports.prototype['outcome'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} outcomeOfInterest\n   */\n  exports.prototype['outcomeOfInterest'] = undefined;\n  /**\n   * Commonly defined for all users.  An example of a parent category variable would be Fruit when tagged with the child sub-type variables Apple.  Child variable (Apple) measurements will be included when the parent category (Fruit) is analyzed.  This allows us to see how Fruit consumption might be affecting without having to record both Fruit and Apple intake.\n   * @member {Array.<module:model/Variable>} parentCommonTagVariables\n   */\n  exports.prototype['parentCommonTagVariables'] = undefined;\n  /**\n   * User-defined. An example of a parent category variable would be Fruit when tagged with the child sub-type variables Apple.  Child variable (Apple) measurements will be included when the parent category (Fruit) is analyzed.  This allows us to see how Fruit consumption might be affecting without having to record both Fruit and Apple intake.\n   * @member {Array.<module:model/Variable>} parentUserTagVariables\n   */\n  exports.prototype['parentUserTagVariables'] = undefined;\n  /**\n   * Ex: img/variable_categories/treatments.png\n   * @member {String} pngPath\n   */\n  exports.prototype['pngPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.png\n   * @member {String} pngUrl\n   */\n  exports.prototype['pngUrl'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} predictorOfInterest\n   */\n  exports.prototype['predictorOfInterest'] = undefined;\n  /**\n   * Ex: 95.4\n   * @member {Number} price\n   */\n  exports.prototype['price'] = undefined;\n  /**\n   * Link to associated product for purchase\n   * @member {String} productUrl\n   */\n  exports.prototype['productUrl'] = undefined;\n  /**\n   * Is variable public\n   * @member {Number} public\n   */\n  exports.prototype['public'] = undefined;\n  /**\n   * Ex: How is your overall mood?\n   * @member {String} question\n   */\n  exports.prototype['question'] = undefined;\n  /**\n   * Ex: How is your overall mood on a scale of 1 to 5??\n   * @member {String} longQuestion\n   */\n  exports.prototype['longQuestion'] = undefined;\n  /**\n   * Ex: 131\n   * @member {Number} rawMeasurementsAtLastAnalysis\n   */\n  exports.prototype['rawMeasurementsAtLastAnalysis'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} secondMostCommonValue\n   */\n  exports.prototype['secondMostCommonValue'] = undefined;\n  /**\n   * Ex: 250\n   * @member {Number} secondToLastValue\n   */\n  exports.prototype['secondToLastValue'] = undefined;\n  /**\n   * Would you like to make your measurements publicly visible?\n   * @member {Boolean} shareUserMeasurements\n   */\n  exports.prototype['shareUserMeasurements'] = undefined;\n  /**\n   * Skewness\n   * @member {Number} skewness\n   */\n  exports.prototype['skewness'] = undefined;\n  /**\n   * Standard deviation Ex: 0.46483219855434\n   * @member {Number} standardDeviation\n   */\n  exports.prototype['standardDeviation'] = undefined;\n  /**\n   * status\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Based on sort filter and can be shown beneath variable name on search list\n   * @member {String} subtitle\n   */\n  exports.prototype['subtitle'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/treatments.svg\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} thirdMostCommonValue\n   */\n  exports.prototype['thirdMostCommonValue'] = undefined;\n  /**\n   * Ex: 250\n   * @member {Number} thirdToLastValue\n   */\n  exports.prototype['thirdToLastValue'] = undefined;\n  /**\n   * HTML instructions for tracking\n   * @member {String} trackingInstructions\n   */\n  exports.prototype['trackingInstructions'] = undefined;\n  /**\n   * Instructions for tracking with buttons and images\n   * @member {module:model/Card} trackingInstructionsCard\n   */\n  exports.prototype['trackingInstructionsCard'] = undefined;\n  /**\n   * @member {module:model/Unit} unit\n   */\n  exports.prototype['unit'] = undefined;\n  /**\n   * Ex: count\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} unitCategoryId\n   */\n  exports.prototype['unitCategoryId'] = undefined;\n  /**\n   * Ex: Miscellany\n   * @member {String} unitCategoryName\n   */\n  exports.prototype['unitCategoryName'] = undefined;\n  /**\n   * ID of unit to use for this variable\n   * @member {Number} unitId\n   */\n  exports.prototype['unitId'] = undefined;\n  /**\n   * Ex: Count\n   * @member {String} unitName\n   */\n  exports.prototype['unitName'] = undefined;\n  /**\n   * Universal product code or similar\n   * @member {String} upc\n   */\n  exports.prototype['upc'] = undefined;\n  /**\n   * updated\n   * @member {Number} updated\n   */\n  exports.prototype['updated'] = undefined;\n  /**\n   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * Ex: 2017-07-30 14:58:26\n   * @member {String} updatedTime\n   */\n  exports.prototype['updatedTime'] = undefined;\n  /**\n   * User ID\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * @member {Array.<module:model/Variable>} userTaggedVariables\n   */\n  exports.prototype['userTaggedVariables'] = undefined;\n  /**\n   * @member {Array.<module:model/Variable>} userTagVariables\n   */\n  exports.prototype['userTagVariables'] = undefined;\n  /**\n   * Ex: count\n   * @member {String} userVariableUnitAbbreviatedName\n   */\n  exports.prototype['userVariableUnitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} userVariableUnitCategoryId\n   */\n  exports.prototype['userVariableUnitCategoryId'] = undefined;\n  /**\n   * Ex: Miscellany\n   * @member {String} userVariableUnitCategoryName\n   */\n  exports.prototype['userVariableUnitCategoryName'] = undefined;\n  /**\n   * Ex: 23\n   * @member {Number} userVariableUnitId\n   */\n  exports.prototype['userVariableUnitId'] = undefined;\n  /**\n   * Ex: Count\n   * @member {String} userVariableUnitName\n   */\n  exports.prototype['userVariableUnitName'] = undefined;\n  /**\n   * Ex: -1\n   * @member {Number} userVariableFillingValue\n   */\n  exports.prototype['userVariableFillingValue'] = undefined;\n  /**\n   * Ex: 51\n   * @member {Number} userVariableMostCommonConnectorId\n   */\n  exports.prototype['userVariableMostCommonConnectorId'] = undefined;\n  /**\n   * Ex: 2017-07-30 14:58:26\n   * @member {String} userVariableUpdatedAt\n   */\n  exports.prototype['userVariableUpdatedAt'] = undefined;\n  /**\n   * Ex: positive or negative\n   * @member {String} userVariableValence\n   */\n  exports.prototype['userVariableValence'] = undefined;\n  /**\n   * Ex: 13\n   * @member {Number} userVariableVariableCategoryId\n   */\n  exports.prototype['userVariableVariableCategoryId'] = undefined;\n  /**\n   * Ex: Treatments\n   * @member {String} userVariableVariableCategoryName\n   */\n  exports.prototype['userVariableVariableCategoryName'] = undefined;\n  /**\n   * Ex: \n   * @member {String} userVariableWikipediaTitle\n   */\n  exports.prototype['userVariableWikipediaTitle'] = undefined;\n  /**\n   * @member {module:model/VariableCategory} variableCategory\n   */\n  exports.prototype['variableCategory'] = undefined;\n  /**\n   * Array of Variables that are joined with this Variable\n   * @member {Array.<module:model/Variable>} joinedVariables\n   */\n  exports.prototype['joinedVariables'] = undefined;\n  /**\n   * Last source\n   * @member {Number} lastSource\n   */\n  exports.prototype['lastSource'] = undefined;\n  /**\n   * Last unit\n   * @member {String} lastUnit\n   */\n  exports.prototype['lastUnit'] = undefined;\n  /**\n   * Most common unit\n   * @member {String} mostCommonUnit\n   */\n  exports.prototype['mostCommonUnit'] = undefined;\n  /**\n   * Ex: positive\n   * @member {String} valence\n   */\n  exports.prototype['valence'] = undefined;\n  /**\n   * Ex: 6\n   * @member {Number} variableCategoryId\n   */\n  exports.prototype['variableCategoryId'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Household/sleeping_in_bed-96.png\n   * @member {String} variableCategoryImageUrl\n   */\n  exports.prototype['variableCategoryImageUrl'] = undefined;\n  /**\n   * Variable category like Mood, Sleep, Physical Activity, Treatment, Symptom, etc.\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * Ex: -1\n   * @member {Number} variableFillingValue\n   */\n  exports.prototype['variableFillingValue'] = undefined;\n  /**\n   * Ex: 96380\n   * @member {Number} variableId\n   */\n  exports.prototype['variableId'] = undefined;\n  /**\n   * Ex: Sleep Duration\n   * @member {String} variableName\n   */\n  exports.prototype['variableName'] = undefined;\n  /**\n   * Ex: 115947037.40816\n   * @member {Number} variance\n   */\n  exports.prototype['variance'] = undefined;\n  /**\n   * Ex: \n   * @member {String} wikipediaTitle\n   */\n  exports.prototype['wikipediaTitle'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Card\":27,\"./DataSource\":33,\"./TrackingReminderNotificationAction\":75,\"./Unit\":78,\"./Variable\":83,\"./VariableCategory\":84,\"./VariableCharts\":85}],84:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.VariableCategory = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The VariableCategory model module.\n   * @module model/VariableCategory\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>VariableCategory</code>.\n   * @alias module:model/VariableCategory\n   * @class\n   * @param name {String} Category name\n   */\n  var exports = function(name) {\n    var _this = this;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    _this['name'] = name;\n\n\n\n\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>VariableCategory</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/VariableCategory} obj Optional instance to populate.\n   * @return {module:model/VariableCategory} The populated <code>VariableCategory</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('appType')) {\n        obj['appType'] = ApiClient.convertToType(data['appType'], 'String');\n      }\n      if (data.hasOwnProperty('causeOnly')) {\n        obj['causeOnly'] = ApiClient.convertToType(data['causeOnly'], 'Boolean');\n      }\n      if (data.hasOwnProperty('combinationOperation')) {\n        obj['combinationOperation'] = ApiClient.convertToType(data['combinationOperation'], 'String');\n      }\n      if (data.hasOwnProperty('createdTime')) {\n        obj['createdTime'] = ApiClient.convertToType(data['createdTime'], 'String');\n      }\n      if (data.hasOwnProperty('unitAbbreviatedName')) {\n        obj['unitAbbreviatedName'] = ApiClient.convertToType(data['unitAbbreviatedName'], 'String');\n      }\n      if (data.hasOwnProperty('unitId')) {\n        obj['unitId'] = ApiClient.convertToType(data['unitId'], 'Number');\n      }\n      if (data.hasOwnProperty('durationOfAction')) {\n        obj['durationOfAction'] = ApiClient.convertToType(data['durationOfAction'], 'Number');\n      }\n      if (data.hasOwnProperty('fillingValue')) {\n        obj['fillingValue'] = ApiClient.convertToType(data['fillingValue'], 'Number');\n      }\n      if (data.hasOwnProperty('helpText')) {\n        obj['helpText'] = ApiClient.convertToType(data['helpText'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('imageUrl')) {\n        obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');\n      }\n      if (data.hasOwnProperty('ionIcon')) {\n        obj['ionIcon'] = ApiClient.convertToType(data['ionIcon'], 'String');\n      }\n      if (data.hasOwnProperty('manualTracking')) {\n        obj['manualTracking'] = ApiClient.convertToType(data['manualTracking'], 'Boolean');\n      }\n      if (data.hasOwnProperty('maximumAllowedValue')) {\n        obj['maximumAllowedValue'] = ApiClient.convertToType(data['maximumAllowedValue'], 'String');\n      }\n      if (data.hasOwnProperty('measurementSynonymSingularLowercase')) {\n        obj['measurementSynonymSingularLowercase'] = ApiClient.convertToType(data['measurementSynonymSingularLowercase'], 'String');\n      }\n      if (data.hasOwnProperty('minimumAllowedValue')) {\n        obj['minimumAllowedValue'] = ApiClient.convertToType(data['minimumAllowedValue'], 'String');\n      }\n      if (data.hasOwnProperty('moreInfo')) {\n        obj['moreInfo'] = ApiClient.convertToType(data['moreInfo'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('onsetDelay')) {\n        obj['onsetDelay'] = ApiClient.convertToType(data['onsetDelay'], 'Number');\n      }\n      if (data.hasOwnProperty('outcome')) {\n        obj['outcome'] = ApiClient.convertToType(data['outcome'], 'Boolean');\n      }\n      if (data.hasOwnProperty('pngPath')) {\n        obj['pngPath'] = ApiClient.convertToType(data['pngPath'], 'String');\n      }\n      if (data.hasOwnProperty('pngUrl')) {\n        obj['pngUrl'] = ApiClient.convertToType(data['pngUrl'], 'String');\n      }\n      if (data.hasOwnProperty('public')) {\n        obj['public'] = ApiClient.convertToType(data['public'], 'Boolean');\n      }\n      if (data.hasOwnProperty('svgPath')) {\n        obj['svgPath'] = ApiClient.convertToType(data['svgPath'], 'String');\n      }\n      if (data.hasOwnProperty('svgUrl')) {\n        obj['svgUrl'] = ApiClient.convertToType(data['svgUrl'], 'String');\n      }\n      if (data.hasOwnProperty('updated')) {\n        obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');\n      }\n      if (data.hasOwnProperty('updatedTime')) {\n        obj['updatedTime'] = ApiClient.convertToType(data['updatedTime'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryName')) {\n        obj['variableCategoryName'] = ApiClient.convertToType(data['variableCategoryName'], 'String');\n      }\n      if (data.hasOwnProperty('variableCategoryNameSingular')) {\n        obj['variableCategoryNameSingular'] = ApiClient.convertToType(data['variableCategoryNameSingular'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Ex: mood\n   * @member {String} appType\n   */\n  exports.prototype['appType'] = undefined;\n  /**\n   * Ex: false\n   * @member {Boolean} causeOnly\n   */\n  exports.prototype['causeOnly'] = undefined;\n  /**\n   * Ex: MEAN\n   * @member {String} combinationOperation\n   */\n  exports.prototype['combinationOperation'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} createdTime\n   */\n  exports.prototype['createdTime'] = undefined;\n  /**\n   * Ex: /5\n   * @member {String} unitAbbreviatedName\n   */\n  exports.prototype['unitAbbreviatedName'] = undefined;\n  /**\n   * Ex: 10\n   * @member {Number} unitId\n   */\n  exports.prototype['unitId'] = undefined;\n  /**\n   * Ex: 86400\n   * @member {Number} durationOfAction\n   */\n  exports.prototype['durationOfAction'] = undefined;\n  /**\n   * Ex: -1\n   * @member {Number} fillingValue\n   */\n  exports.prototype['fillingValue'] = undefined;\n  /**\n   * Ex: What emotion do you want to rate?\n   * @member {String} helpText\n   */\n  exports.prototype['helpText'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Ex: https://maxcdn.icons8.com/Color/PNG/96/Cinema/theatre_mask-96.png\n   * @member {String} imageUrl\n   */\n  exports.prototype['imageUrl'] = undefined;\n  /**\n   * Ex: ion-happy-outline\n   * @member {String} ionIcon\n   */\n  exports.prototype['ionIcon'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} manualTracking\n   */\n  exports.prototype['manualTracking'] = undefined;\n  /**\n   * Ex: \n   * @member {String} maximumAllowedValue\n   */\n  exports.prototype['maximumAllowedValue'] = undefined;\n  /**\n   * Ex: rating\n   * @member {String} measurementSynonymSingularLowercase\n   */\n  exports.prototype['measurementSynonymSingularLowercase'] = undefined;\n  /**\n   * Ex: \n   * @member {String} minimumAllowedValue\n   */\n  exports.prototype['minimumAllowedValue'] = undefined;\n  /**\n   * Ex: Do you have any emotions that fluctuate regularly?  If so, add them so I can try to determine which factors are influencing them.\n   * @member {String} moreInfo\n   */\n  exports.prototype['moreInfo'] = undefined;\n  /**\n   * Category name\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * Ex: 0\n   * @member {Number} onsetDelay\n   */\n  exports.prototype['onsetDelay'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} outcome\n   */\n  exports.prototype['outcome'] = undefined;\n  /**\n   * Ex: img/variable_categories/emotions.png\n   * @member {String} pngPath\n   */\n  exports.prototype['pngPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.png\n   * @member {String} pngUrl\n   */\n  exports.prototype['pngUrl'] = undefined;\n  /**\n   * Ex: true\n   * @member {Boolean} public\n   */\n  exports.prototype['public'] = undefined;\n  /**\n   * Ex: img/variable_categories/emotions.svg\n   * @member {String} svgPath\n   */\n  exports.prototype['svgPath'] = undefined;\n  /**\n   * Ex: https://quantimodo.quantimo.do/ionic/Modo/www/img/variable_categories/emotions.svg\n   * @member {String} svgUrl\n   */\n  exports.prototype['svgUrl'] = undefined;\n  /**\n   * Ex: 1\n   * @member {Number} updated\n   */\n  exports.prototype['updated'] = undefined;\n  /**\n   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss\n   * @member {String} updatedTime\n   */\n  exports.prototype['updatedTime'] = undefined;\n  /**\n   * Ex: Emotions\n   * @member {String} variableCategoryName\n   */\n  exports.prototype['variableCategoryName'] = undefined;\n  /**\n   * Ex: Emotion\n   * @member {String} variableCategoryNameSingular\n   */\n  exports.prototype['variableCategoryNameSingular'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],85:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Chart'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Chart'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.VariableCharts = factory(root.Quantimodo.ApiClient, root.Quantimodo.Chart);\n  }\n}(this, function(ApiClient, Chart) {\n  'use strict';\n\n\n\n\n  /**\n   * The VariableCharts model module.\n   * @module model/VariableCharts\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>VariableCharts</code>.\n   * An object with various chart properties each property contain and svg and Highcharts configuration\n   * @alias module:model/VariableCharts\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>VariableCharts</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/VariableCharts} obj Optional instance to populate.\n   * @return {module:model/VariableCharts} The populated <code>VariableCharts</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('hourlyColumnChart')) {\n        obj['hourlyColumnChart'] = Chart.constructFromObject(data['hourlyColumnChart']);\n      }\n      if (data.hasOwnProperty('monthlyColumnChart')) {\n        obj['monthlyColumnChart'] = Chart.constructFromObject(data['monthlyColumnChart']);\n      }\n      if (data.hasOwnProperty('distributionColumnChart')) {\n        obj['distributionColumnChart'] = Chart.constructFromObject(data['distributionColumnChart']);\n      }\n      if (data.hasOwnProperty('weekdayColumnChart')) {\n        obj['weekdayColumnChart'] = Chart.constructFromObject(data['weekdayColumnChart']);\n      }\n      if (data.hasOwnProperty('lineChartWithoutSmoothing')) {\n        obj['lineChartWithoutSmoothing'] = Chart.constructFromObject(data['lineChartWithoutSmoothing']);\n      }\n      if (data.hasOwnProperty('lineChartWithSmoothing')) {\n        obj['lineChartWithSmoothing'] = Chart.constructFromObject(data['lineChartWithSmoothing']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Chart} hourlyColumnChart\n   */\n  exports.prototype['hourlyColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} monthlyColumnChart\n   */\n  exports.prototype['monthlyColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} distributionColumnChart\n   */\n  exports.prototype['distributionColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} weekdayColumnChart\n   */\n  exports.prototype['weekdayColumnChart'] = undefined;\n  /**\n   * @member {module:model/Chart} lineChartWithoutSmoothing\n   */\n  exports.prototype['lineChartWithoutSmoothing'] = undefined;\n  /**\n   * @member {module:model/Chart} lineChartWithSmoothing\n   */\n  exports.prototype['lineChartWithSmoothing'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9,\"./Chart\":28}],86:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.Vote = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Vote model module.\n   * @module model/Vote\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>Vote</code>.\n   * @alias module:model/Vote\n   * @class\n   * @param causeVariableId {Number} Cause variable id\n   * @param clientId {String} Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @param effectVariableId {Number} Effect variable id\n   * @param userId {Number} ID of User\n   * @param value {Boolean} Vote: 0 (for implausible) or 1 (for plausible)\n   */\n  var exports = function(causeVariableId, clientId, effectVariableId, userId, value) {\n    var _this = this;\n\n    _this['causeVariableId'] = causeVariableId;\n    _this['clientId'] = clientId;\n\n    _this['effectVariableId'] = effectVariableId;\n\n\n    _this['userId'] = userId;\n    _this['value'] = value;\n  };\n\n  /**\n   * Constructs a <code>Vote</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Vote} obj Optional instance to populate.\n   * @return {module:model/Vote} The populated <code>Vote</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('causeVariableId')) {\n        obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');\n      }\n      if (data.hasOwnProperty('clientId')) {\n        obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');\n      }\n      if (data.hasOwnProperty('createdAt')) {\n        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');\n      }\n      if (data.hasOwnProperty('effectVariableId')) {\n        obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'Number');\n      }\n      if (data.hasOwnProperty('updatedAt')) {\n        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');\n      }\n      if (data.hasOwnProperty('value')) {\n        obj['value'] = ApiClient.convertToType(data['value'], 'Boolean');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Cause variable id\n   * @member {Number} causeVariableId\n   */\n  exports.prototype['causeVariableId'] = undefined;\n  /**\n   * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do\n   * @member {String} clientId\n   */\n  exports.prototype['clientId'] = undefined;\n  /**\n   * When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format\n   * @member {String} createdAt\n   */\n  exports.prototype['createdAt'] = undefined;\n  /**\n   * Effect variable id\n   * @member {Number} effectVariableId\n   */\n  exports.prototype['effectVariableId'] = undefined;\n  /**\n   * id\n   * @member {Number} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format\n   * @member {String} updatedAt\n   */\n  exports.prototype['updatedAt'] = undefined;\n  /**\n   * ID of User\n   * @member {Number} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * Vote: 0 (for implausible) or 1 (for plausible)\n   * @member {Boolean} value\n   */\n  exports.prototype['value'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],87:[function(require,module,exports){\n/**\n * quantimodo\n * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk's](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).\n *\n * OpenAPI spec version: 5.8.112511\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n *\n * Swagger Codegen version: 2.3.1\n *\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.Quantimodo) {\n      root.Quantimodo = {};\n    }\n    root.Quantimodo.VoteDelete = factory(root.Quantimodo.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The VoteDelete model module.\n   * @module model/VoteDelete\n   * @version 5.8.112511\n   */\n\n  /**\n   * Constructs a new <code>VoteDelete</code>.\n   * @alias module:model/VoteDelete\n   * @class\n   * @param cause {String} Cause variable name for the correlation to which the vote pertains\n   * @param effect {String} Effect variable name for the correlation to which the vote pertains\n   */\n  var exports = function(cause, effect) {\n    var _this = this;\n\n    _this['cause'] = cause;\n    _this['effect'] = effect;\n  };\n\n  /**\n   * Constructs a <code>VoteDelete</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/VoteDelete} obj Optional instance to populate.\n   * @return {module:model/VoteDelete} The populated <code>VoteDelete</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('cause')) {\n        obj['cause'] = ApiClient.convertToType(data['cause'], 'String');\n      }\n      if (data.hasOwnProperty('effect')) {\n        obj['effect'] = ApiClient.convertToType(data['effect'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Cause variable name for the correlation to which the vote pertains\n   * @member {String} cause\n   */\n  exports.prototype['cause'] = undefined;\n  /**\n   * Effect variable name for the correlation to which the vote pertains\n   * @member {String} effect\n   */\n  exports.prototype['effect'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n\n},{\"../ApiClient\":9}],88:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],89:[function(require,module,exports){\n\n},{}],90:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":88,\"ieee754\":91}],91:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],92:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],93:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],94:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":92,\"./encode\":93}]},{},[22])(22)\n});\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.1\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && typeof obj === 'object' && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nexports.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nexports.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nexports.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nexports.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [name], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","/* eslint-disable no-console,no-unused-vars */\n/** @namespace window.qmLog */\n/** @namespace window.qm.chrome */\n/* global AppSettings TweenMax, Power1, Sine, Linear, Power3, TimelineMax, Power2 */\n/* eslint-env browser */\nString.prototype.toCamelCase = function(){return this.replace(/(\\_[a-z])/g, function($1){return $1.toUpperCase().replace('_','');});};\nwindow.qm = {\n    analytics: {\n        eventCategories: {\n            pushNotifications: \"pushNotifications\",\n            inbox: \"inbox\"\n        }\n    },\n    appContainer: {\n        hide: function(){\n            qmLog.info(\"Hiding panel class\");\n            qm.appContainer.getPaneClass().style.display = \"none\";\n        },\n        show: function(){\n            qmLog.info(\"Showing panel class\");\n            qm.appContainer.getPaneClass().style.display = \"block\";\n        },\n        getPaneClass: function(){\n            var element = document.querySelector('.pane');\n            return element;\n        },\n        getAppContainer: function(){\n            var element = document.querySelector('app-container');\n            return element;\n        },\n        setBackgroundColor: function(color){\n            qmLog.info(\"Setting background to \"+color);\n            var element = qm.appContainer.getPaneClass();\n            element.style.backgroundColor = color;\n            element = qm.appContainer.getAppContainer();\n            element.style.backgroundColor = color;\n            document.body.style.backgroundColor = color;\n        },\n        setOpacity: function(opacity){\n            var backgroundColor = (opacity < 1) ? 'black' : 'white';\n            var paneClass = qm.appContainer.getPaneClass();\n            paneClass.style.backgroundColor = backgroundColor;\n            paneClass.style.opacity = opacity;\n            document.body.style.backgroundColor = backgroundColor;\n        }\n    },\n    appMode: {\n        isTesting: function(){\n            if(window.qmUser){\n                if(window.qmUser.email && window.qmUser.email.toLowerCase().indexOf('test') !== -1){return true;}\n                if(window.qmUser.displayName && window.qmUser.displayName.toLowerCase().indexOf('test') !== -1){return true;}\n            }\n            return window.location.href.indexOf(\"medimodo.heroku\") !== -1;\n        },\n        isDevelopment: function(){\n            if(window.location.origin.indexOf('http://localhost:') !== -1){return true;}\n            return window.location.origin.indexOf('local.quantimo.do') !== -1;\n        },\n        isStaging: function(){\n            return window.location.origin.indexOf('staging.') !== -1;\n        },\n        isBuilder: function(){\n            return window.location.href.indexOf('configuration-index.html') !== -1;\n        },\n        isDebug: function(){\n            return qmLog.isDebugMode();\n        },\n        getAppMode: function(){\n            var env = \"production\";\n            if(qm.appMode.isStaging()){env = \"staging\";}\n            if(qm.appMode.isDevelopment()){env = \"development\";}\n            if(qm.appMode.isTesting()){env = \"testing\";}\n            return env;\n        }\n    },\n    apiPaths: {\n        trackingReminderNotificationsPast: \"v1/trackingReminderNotifications/past\"\n    },\n    api: {\n        registerHelpers: function(){\n            Quantimodo.TrackingReminderNotification.prototype.track = function (trackAll, successHandler, errorHandler) {\n                qm.notifications.trackNotification(this, trackAll, successHandler, errorHandler);\n            };\n            Quantimodo.TrackingReminderNotification.prototype.getCirclePage = function () {\n                return {\n                    title: this.longQuestion,\n                    bodyText: null,\n                    image: {\n                        url: this.pngPath\n                    },\n                    hide: false\n                };\n            };\n        },\n        configureClient: function (functionName, errorHandler, minimumSecondsBetweenRequests, blockRequests) {\n            minimumSecondsBetweenRequests = minimumSecondsBetweenRequests || 1;\n            blockRequests = blockRequests || true;\n            if(functionName && !qm.api.canWeMakeRequestYet('GET', functionName, {minimumSecondsBetweenRequests: 1, blockRequests: blockRequests})){\n                errorHandler(\"Already made request in last \" + minimumSecondsBetweenRequests + \" seconds\");\n                return false;\n            }\n            var qmApiClient = Quantimodo.ApiClient.instance;\n            var quantimodo_oauth2 = qmApiClient.authentications.quantimodo_oauth2;\n            qmApiClient.basePath = qm.api.getBaseUrl() + '/api';\n            quantimodo_oauth2.accessToken = qm.auth.getAccessTokenFromUrlUserOrStorage();\n            // TODO: Enable\n            // qmApiClient.authentications.client_id.clientId = qm.getClientId();\n            // qmApiClient.enableCookies = true;\n            qmApiClient.defaultHeaders = {\n                'X-Client-Id': qm.getClientId(),\n                'X-Platform': qm.platform.getCurrentPlatform(),\n                'X-App-Version': qm.appsManager.getAppVersion(),\n                'X-Framework': 'ionic'\n            };\n            return qmApiClient;\n        },\n        cacheSet: function(params, data, functionName){\n            if(!qm.api.cache[functionName]){qm.api.cache[functionName] = {};}\n            var key = qm.api.getCacheName(params);\n            qm.api.cache[functionName][key] = data;\n        },\n        cacheGet: function(params, functionName){\n            if(params && params.refresh){return null;}\n            if(!qm.api.cache[functionName]){qm.api.cache[functionName] = {};}\n            var key = qm.api.getCacheName(params);\n            if(!qm.api.cache[functionName][key]){return null;}\n            return qm.api.cache[functionName][key];\n        },\n        cacheRemove: function(functionName){\n            return qm.api.cache[functionName] = null;\n        },\n        getCacheName: function(params){\n            return qm.stringHelper.removeSpecialCharacters(JSON.stringify(params));\n        },\n        cache: {},\n        generalResponseHandler: function(error, data, response, successHandler, errorHandler, params, functionName) {\n            if(!response){\n                var message = \"No response provided to \" + functionName + \" qmSdkApiResponseHandler with params \" +  JSON.stringify(params);\n                qmLog.info(message);\n                if(errorHandler){errorHandler(message);}\n                return;\n            }\n            qmLog.debug(response.status + ' response from ' + response.req.url);\n            if (error) {\n                var errorMessage = qm.api.generalErrorHandler(error, data, response);\n                if(errorHandler){errorHandler(errorMessage);}\n            } else {\n                if(data && params){\n                    qm.api.cacheSet(params, data, functionName);\n                }\n                if(successHandler){\n                    successHandler(data, response);\n                }\n            }\n        },\n        getErrorMessageFromResponse: function(error, response){\n            var errorMessage = null;\n            if(error && error.message){errorMessage += error.message;}\n            if(response && response.error &&  response.error.message){errorMessage += response.error.message;}\n            if(response && response.body && response.body.errorMessage){errorMessage += response.body.errorMessage;}\n            if(response && response.body && response.body.error && response.body.error.message){errorMessage += response.body.error.message;}\n            return errorMessage;\n        },\n        generalErrorHandler: function(error, data, response, options){\n            var errorMessage = qm.api.getErrorMessageFromResponse(error, response);\n            if(!response){return qmLog.error(\"No API response provided to qmApiGeneralErrorHandler\",\n                {errorMessage: errorMessage, responseData: data, apiResponse: response, requestOptions: options});}\n            if(errorMessage.toLowerCase().indexOf('expired') !== -1){\n                qm.auth.deleteAllAccessTokens();\n                qm.userHelper.setUser(null);\n            }\n            if(response.status === 401){\n                if(!options || !options.doNotSendToLogin){qmLog.info(\"Not authenticated!\");}\n                qm.auth.handle401Response(response.request, options, response.headers)\n            } else {\n                qmLog.error(errorMessage, null, {error: error, apiResponse: response});\n            }\n            return errorMessage;\n        },\n        addGlobalParams: function (urlParams) {\n            var url;\n            if(!urlParams){urlParams = {};}\n            delete urlParams.force;  // Used locally only\n            delete urlParams.excludeLocal;  // Used locally only\n            if(typeof urlParams === \"string\"){\n                url = urlParams;\n                urlParams = {};\n            }\n            if(qm.appsManager.getAppSettingsFromMemory()){\n                urlParams.appName = encodeURIComponent(qm.appsManager.getAppSettingsFromMemory().appDisplayName);\n                if(qm.getAppSettings().versionNumber){\n                    urlParams.appVersion = encodeURIComponent(qm.appsManager.getAppSettingsFromMemory().versionNumber);\n                } else {\n                    qmLog.debug('Version number not specified!', null, 'Version number not specified on qm.getAppSettings()');\n                }\n            }\n            if(!urlParams.accessToken && qm.auth.getAccessTokenFromUrlUserOrStorage()){urlParams.accessToken = qm.auth.getAccessTokenFromUrlUserOrStorage();}\n            if(!urlParams.clientId && qm.api.getClientId()){urlParams.clientId = qm.api.getClientId();}\n            urlParams.platform = qm.platform.getCurrentPlatform();\n            if(window.devCredentials){\n                if(window.devCredentials.username){urlParams.log = encodeURIComponent(window.devCredentials.username);}\n                if(window.devCredentials.password){urlParams.pwd = encodeURIComponent(window.devCredentials.password);}\n            }\n            var passableUrlParameters = ['userId', 'log', 'pwd', 'userEmail'];\n            for(var i = 0; i < passableUrlParameters.length; i++){\n                if(qm.urlHelper.getParam(passableUrlParameters[i])){urlParams[passableUrlParameters[i]] = qm.urlHelper.getParam(passableUrlParameters[i]);}\n            }\n            for (var property in urlParams) {\n                if (urlParams.hasOwnProperty(property)) {\n                    if(typeof urlParams[property] === \"undefined\"){\n                        qmLog.error(property + \" is undefined!\");\n                        delete urlParams[property];\n                    }\n                    if(typeof urlParams[property] === \"\"){\n                        qmLog.error(property + \" is empty string!\");\n                        delete urlParams[property];\n                    }\n                }\n            }\n            if(url){\n                url = qm.urlHelper.addUrlQueryParamsToUrlString(urlParams, url);\n                return url;\n            }\n            return urlParams;\n        },\n        getClientId: function(successHandler){\n            if(qm.appsManager.getBuilderClientId()){\n                return qm.clientId = qm.appsManager.getBuilderClientId();\n            }\n            if(qm.api.getClientIdFromQueryParameters() && qm.api.getClientIdFromQueryParameters() !== \"default\"){\n                qm.clientId = qm.api.getClientIdFromQueryParameters();\n            }\n            if(!qm.clientId){\n                qm.clientId = qm.api.getClientIdFromSubDomain();\n            }\n            if(!qm.clientId && qm.getAppSettings()){\n                qm.clientId =  qm.getAppSettings().clientId;\n            }\n            // DON'T DO THIS\n            // if(!clientId && qm.platform.isMobile()){\n            //     window.qmLog.debug('Using ' + qm.urlHelper.getDefaultConfigUrl() + ' because we\\'re on mobile');\n            //     clientId = \"default\"; // On mobile\n            // }\n            if(!qm.clientId){ // Not sure why but this always returns quantimodo\n                //clientId = qm.storage.getItem(qm.items.clientId);\n            }\n            // DON'T DO THIS\n            // if(!clientId && window.location.href.indexOf('quantimo.do') === -1){\n            //     clientId = \"default\"; // On mobile\n            // }\n            if(!qm.clientId){\n                qm.clientId = qm.api.getClientIdFromAwsPath();\n            }\n            if(!qm.clientId){\n                qmLog.info(\"Could not get client id!\");\n                //clientId = 'quantimodo';\n            }\n            if (!successHandler) {return qm.clientId;}\n            if(qm.clientId){successHandler(qm.clientId);}\n            qm.api.getClientIdWithCallback(successHandler);\n        },\n        getClientSecret: function(successHandler){\n            var clientSecret = qm.appsManager.getClientSecret();\n            if(successHandler){successHandler(clientSecret);}\n            return clientSecret;\n        },\n        getClientIdWithCallback: function(successHandler){\n            if(qm.api.getClientId()){\n                successHandler(qm.api.getClientId());\n                return;\n            }\n            if(typeof AppSettings !== \"undefined\"){\n                AppSettings.get(\n                    function(preferences) {\n                        /** @namespace preferences.QuantiModoClientId */\n                        qm.clientId = preferences.QuantiModoClientId;\n                        /** @namespace preferences.QuantiModoClientSecret */\n                        qm.clientSecret = preferences.QuantiModoClientSecret;\n                        successHandler(qm.clientId,  preferences.QuantiModoClientSecret);\n                    },\n                    function(error) {\n                        qmLog.error(\"Error! \", error);\n                    }, [\"QuantiModoClientId\", \"QuantiModoClientSecret\"]);\n            }\n            qm.appsManager.getAppSettingsFromDefaultConfigJson(function (appSettings) {\n                if(appSettings){\n                    qm.clientId = appSettings.clientId;\n                    successHandler(qm.clientId);\n                }\n            });\n        },\n        getClientIdFromQueryParameters: function() {\n            var clientId = window.qm.urlHelper.getParam('clientId');\n            if(!clientId){clientId = window.qm.urlHelper.getParam('appName');}\n            if(!clientId){clientId = window.qm.urlHelper.getParam('lowerCaseAppName');}\n            if(!clientId){clientId = window.qm.urlHelper.getParam('quantimodoClientId');}\n            if(clientId){qm.storage.setItem('clientId', clientId);}\n            return clientId;\n        },\n        getClientIdFromAwsPath: function() {\n            var clientId = qm.stringHelper.getStringBetween(window.location.href, 's3.amazonaws.com/', '/dev');\n            return clientId;\n        },\n        getClientIdFromSubDomain: function(){\n            if(window.location.hostname.indexOf('.quantimo.do') === -1){return null;}\n            if(qm.appMode.isBuilder()){return null;}\n            function getSubDomain(){\n                var full = window.location.host;\n                var parts = full.split('.');\n                return parts[0].toLowerCase();\n            }\n            var subDomain = getSubDomain();\n            subDomain = subDomain.replace('qm-', '');\n            var clientIdFromAppConfigName = qm.appsManager.appConfigFileNames[subDomain];\n            if(clientIdFromAppConfigName){\n                window.qmLog.debug('Using client id ' + clientIdFromAppConfigName +\n                    ' derived from appConfigFileNames using subDomain: ' + subDomain, null);\n                return clientIdFromAppConfigName;\n            }\n            window.qmLog.debug('Using subDomain as client id: ' + subDomain);\n            return subDomain;\n        },\n        canWeMakeRequestYet: function(type, route, options){\n            if(!route || route === ''){\n                qmLog.error(\"No route provided to canWeMakeRequestYet!\");\n                return true;\n            }\n            function getSecondsSinceLastRequest(type, route){\n                var secondsSinceLastRequest = 99999999;\n                if(window.qm.storage.getLastRequestTime(type, route)){\n                    secondsSinceLastRequest = qm.timeHelper.secondsAgo(window.qm.storage.getLastRequestTime(type, route));\n                }\n                return secondsSinceLastRequest;\n            }\n            var blockRequests = false;\n            if(options && options.blockRequests){blockRequests = options.blockRequests;}\n            var minimumSecondsBetweenRequests;\n            if(options && options.minimumSecondsBetweenRequests){\n                minimumSecondsBetweenRequests = options.minimumSecondsBetweenRequests;\n            } else {\n                minimumSecondsBetweenRequests = 1;\n            }\n            if(getSecondsSinceLastRequest(type, route) < minimumSecondsBetweenRequests){\n                var name = 'Just made a ' + type + ' request to ' + route;\n                var message = name + \". We made the same request within the last \" + minimumSecondsBetweenRequests + ' seconds (' +\n                    getSecondsSinceLastRequest(type, route) + ' ago). stackTrace: ' + options.stackTrace;\n                if(blockRequests){\n                    qmLog.info('BLOCKING REQUEST: ' + name, 'BLOCKING REQUEST because ' + message, options);\n                    return false;\n                } else {\n                    qmLog.info(name, message, options);\n                }\n            }\n            window.qm.storage.setItem(qm.api.getLocalStorageNameForRequest(type, route), qm.timeHelper.getUnixTimestampInSeconds());\n            return true;\n        },\n        responseHandler: function(error, data, response, successHandler, errorHandler) {\n            if(!response){\n                var message = \"No response provided to qm.api.responseHandler\";\n                if(qm.getUser()){qmLog.error(message);} else {qmLog.info(message);}\n                return;\n            }\n            qmLog.debug(response.status + ' response from ' + response.req.url, null);\n            if (error) {\n                var errorMessage = qm.api.generalErrorHandler(error, data, response);\n                if(errorHandler){errorHandler(errorMessage);}\n            } else {\n                if(successHandler){successHandler(data, response);}\n            }\n        },\n        getBaseUrl: function () {\n            if(qm.appsManager.getAppSettingsFromMemory() && qm.appsManager.getAppSettingsFromMemory().apiUrl){\n                if(qm.appsManager.getAppSettingsFromMemory().apiUrl.indexOf('https://') === -1){\n                    qm.appsManager.getAppSettingsFromMemory().apiUrl = \"https://\" + qm.appsManager.getAppSettingsFromMemory().apiUrl;\n                }\n                return qm.appsManager.getAppSettingsFromMemory().apiUrl;\n            }\n            return qm.appsManager.getQuantiModoApiUrl();\n        },\n        postToQuantiModo: function (body, path, successHandler, errorHandler) {\n            qm.api.getRequestUrl(path, function(url){\n                qmLog.info(\"Making POST request to \" + url);\n                if(typeof XMLHttpRequest !== \"undefined\"){\n                    qm.api.postViaXhr(body, url, successHandler);\n                } else {\n                    qm.api.postViaFetch(body, url, successHandler, errorHandler);  // Need fetch for service worker\n                }\n            });\n        },\n        getViaXhrOrFetch: function(url, successHandler, errorHandler){\n            qmLog.info(\"Making GET request to \" + url);\n            if(typeof XMLHttpRequest !== \"undefined\"){\n                qm.api.getViaXhr(url, successHandler, errorHandler);\n            } else {\n                qm.api.getViaFetch(url, successHandler, errorHandler);  // Need fetch for service worker\n            }\n        },\n        getAppSettingsUrl: function (clientId, callback) {\n            function generateUrl(clientId, clientSecret){\n                // Can't use QM SDK in service worker\n                var settingsUrl = qm.appsManager.getQuantiModoApiUrl() + '/api/v1/appSettings?clientId=' + clientId;\n                if(clientSecret){settingsUrl += \"&clientSecret=\" + clientSecret;}\n                if(window.designMode){settingsUrl += '&designMode=true';}\n                window.qmLog.debug('Getting app settings from ' + settingsUrl);\n                return settingsUrl;\n            }\n            if(clientId){\n                callback(generateUrl(clientId));\n            } else {\n                qm.api.getClientIdWithCallback(function(clientId, clientSecret){\n                    callback(generateUrl(clientId, clientSecret));\n                });\n            }\n        },\n        getViaFetch: function(url, successHandler, errorHandler){\n            qmLog.pushDebug(\"Making get request to \" + url);\n            fetch(url, {method: 'get'})\n                .then(function(response) {\n                    return response.json();\n                }).then(function(data) {\n                    if(successHandler){\n                        successHandler(data);\n                    }\n                }).catch(function(err) {\n                    if(url.indexOf('.config.json')){\n                        qmLog.error(\"qm.api.get error from \" + url + \" request: \" + err + \".  If we couldn't parse json, \" +\n                            url + \" probably doesn't exist\", err);\n                    } else {\n                        qmLog.error(\"qm.api.get error from \" + url + \" request: \" + err, null, err);\n                    }\n                    if(errorHandler){errorHandler(err);}\n                });\n        },\n        getViaXhr: function (url, successHandler) {\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    var fallback = null; // Just return null instead of 500 page HTML\n                    var responseObject = qm.stringHelper.parseIfJsonString(xhr.responseText, fallback);\n                    successHandler(responseObject);\n                }\n            };\n            xhr.open('GET', url, true);\n            xhr.send(null);\n        },\n        postViaFetch: function (body, url, successHandler) {\n            fetch( url, {\n                method: 'post',\n                body: JSON.stringify(body)\n            }).then(function(response) {\n                qmLog.info(\"Got \" + response.status + \" response from POST to \" + url);\n                if(successHandler){\n                    successHandler(response);\n                }\n            }).catch(function(err) {\n                qmLog.error(\"Error from POST to \" + url + \": \" +err);\n            });\n        },\n        postViaXhr: function (body, url, successHandler) {\n            var xhr = new XMLHttpRequest();   // new HttpRequest instance\n            xhr.open(\"POST\", url);\n            xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            xhr.onreadystatechange = function() {//Call a function when the state changes.\n                if(xhr.readyState === XMLHttpRequest.DONE) {\n                    var fallback = xhr.responseText;\n                    var responseObject = qm.stringHelper.parseIfJsonString(xhr.responseText, fallback);\n                    if(successHandler){successHandler(responseObject);}\n                }\n            };\n            xhr.send(JSON.stringify(body));\n        },\n        postMeasurements: function(measurements, onDoneListener) {\n            qm.api.postToQuantiModo(measurements,\"v1/measurements\", onDoneListener);\n        },\n        getRequestUrl: function(path, successHandler) {\n            qm.userHelper.getUserFromLocalStorage(function(user){\n                function addGlobalQueryParameters(url) {\n                    function addQueryParameter(url, name, value){\n                        if(url.indexOf('?') === -1){return url + \"?\" + name + \"=\" + value;}\n                        return url + \"&\" + name + \"=\" + value;\n                    }\n                    if (qm.auth.getAccessTokenFromUrlUserOrStorage(user)) {\n                        url = addQueryParameter(url, 'access_token', qm.auth.getAccessTokenFromUrlUserOrStorage());\n                    } else {\n                        window.qmLog.error('No access token!');\n                        if(!qm.serviceWorker){\n                            qm.chrome.showSignInNotification();\n                        }\n                    }\n                    function getAppName() {\n                        if(qm.chrome.getChromeManifest()){return qm.chrome.getChromeManifest().name;}\n                        return window.qm.urlHelper.getParam('appName');\n                    }\n                    if(getAppName()){url = addQueryParameter(url, 'appName', getAppName());}\n                    function getAppVersion() {\n                        if(qm.chrome.getChromeManifest()){return qm.chrome.getChromeManifest().version;}\n                        if(qm.getAppSettings()){return qm.getAppSettings().versionNumber;}\n                        return window.qm.urlHelper.getParam('appVersion');\n                    }\n                    if(getAppVersion()){url = addQueryParameter(url, 'appVersion', getAppVersion());}\n                    if(qm.api.getClientId()){url = addQueryParameter(url, 'clientId', qm.api.getClientId());}\n                    url = addQueryParameter(url, 'platform', qm.platform.getCurrentPlatform());\n                    return url;\n                }\n                var url = addGlobalQueryParameters(qm.appsManager.getQuantiModoApiUrl() + \"/api/\" + path);\n                qmLog.debug(\"Making API request to \" + url);\n                successHandler(url);\n            })\n        },\n        getQuantiModoUrl: function (path) {\n            if(typeof path === \"undefined\") {path = \"\";}\n            return qm.api.getBaseUrl() + \"/\" + path;\n        },\n        rateLimit: function(func, rate, async) {\n            var queue = [];\n            var timeOutRef = false;\n            var currentlyEmptyingQueue = false;\n            var emptyQueue = function() {\n                if (queue.length) {\n                    currentlyEmptyingQueue = true;\n                    _.delay(function() {\n                        if (async) {\n                            _.defer(function() { queue.shift().call(); });\n                        } else {\n                            queue.shift().call();\n                        }\n                        emptyQueue();\n                    }, rate);\n                } else {\n                    currentlyEmptyingQueue = false;\n                }\n            };\n            return function() {\n                var args = _.map(arguments, function(e) { return e; }); // get arguments into an array\n                queue.push( _.bind.apply(this, [func, this].concat(args)) ); // call apply so that we can pass in arguments as parameters as opposed to an array\n                if (!currentlyEmptyingQueue) { emptyQueue(); }\n            };\n        },\n        executeWithRateLimit: function (functionToLimit, milliseconds) {\n            milliseconds = milliseconds || 15000;\n            var rateLimited = qm.api.rateLimit(functionToLimit, milliseconds);\n            rateLimited();\n        },\n        getLocalStorageNameForRequest: function (type, route) {\n            return 'last_' + type + '_' + route.replace('/', '_') + '_request_at';\n        }\n    },\n    appsManager: { // jshint ignore:line\n        getAppVersion: function(){\n            return qm.appsManager.getAppSettingsFromMemory().versionNumber;\n        },\n        getBuilderClientId: function(){\n            if(!qm.appMode.isBuilder()){return null;}\n            var clientId = qm.urlHelper.getParam('clientId');\n            if(clientId){return clientId;}\n            clientId = qm.stringHelper.getStringAfter(window.location.href, 'app/configuration/');\n            if(clientId){\n                clientId = qm.stringHelper.getStringBeforeSubstring('?', clientId, clientId);\n                return clientId;\n            }\n            clientId = qm.storage.getItem(qm.items.builderClientId);\n            return clientId;\n        },\n        getQuantiModoApiUrl: function () {\n            var apiUrl = window.qm.urlHelper.getParam(qm.items.apiUrl);\n            if(!apiUrl){apiUrl = qm.storage.getItem(qm.items.apiUrl);}\n            if(!apiUrl && window.location.origin.indexOf('staging.quantimo.do') !== -1){apiUrl = \"https://staging.quantimo.do\";}\n            if(!apiUrl && window.location.origin.indexOf('local.quantimo.do') !== -1){apiUrl = \"https://local.quantimo.do\";}\n            if(!apiUrl && window.location.origin.indexOf('utopia.quantimo.do') !== -1){apiUrl = \"https://utopia.quantimo.do\";}\n            if(!apiUrl && window.location.origin.indexOf('localhost:8100') !== -1){return \"https://app.quantimo.do\";} // Ionic serve\n            if(!apiUrl){apiUrl = \"https://app.quantimo.do\";}\n            if(apiUrl.indexOf(\"https://\") === -1){apiUrl = \"https://\" + apiUrl;}\n            apiUrl = apiUrl.replace(\"https://https\", \"https\");\n            // Why are we adding a port to the API url?  It breaks localhost:8100\n            if(window.location.port && window.location.port !== \"443\" && window.location.hostname !== 'localhost'){\n                apiUrl += \":\" + window.location.port;\n            }\n            return apiUrl;\n        },\n        getClientSecret: function(){\n            if(qm.clientSecret){return qm.clientSecret;}\n            if(qm.getAppSettings().clientSecret){return qm.getAppSettings().clientSecret;}\n            if(!qm.privateConfig){\n                if(window.location.href.indexOf('quantimo.do') === -1){qmLog.error(\"No client secret or private config!\");}\n                return null;\n            }\n            if (qm.platform.isIOS()) { return qm.privateConfig.client_secrets.iOS; }\n            if (qm.platform.isAndroid) { return qm.privateConfig.client_secrets.Android; }\n            if (qm.platform.isChromeExtension) { return qm.privateConfig.client_secrets.Chrome; }\n            if (qm.platform.isWindows) { return qm.privateConfig.client_secrets.Windows; }\n            return qm.privateConfig.client_secrets.Web;\n        },\n        getAppSettingsLocallyOrFromApi: function (successHandler) {\n            if(qm.getAppSettings() && qm.getAppSettings().clientId){\n                successHandler(qm.getAppSettings());\n                return;\n            }\n            var localStorageKey = qm.items.appSettings;\n            var builderClientId = qm.appsManager.getBuilderClientId();\n            if(builderClientId){localStorageKey = qm.items.appSettingsRevisions;}\n            qm.localForage.getItem(localStorageKey, function(appSettings){\n                if(builderClientId && appSettings && appSettings.length && builderClientId === appSettings[0].clientId){\n                    qm.appsManager.processAndSaveAppSettings(appSettings[0], successHandler);\n                    return;\n                }\n                if(appSettings){\n                    // qm.appsManager.processAndSaveAppSettings(appSettings, successHandler);\n                    // return;\n                }\n                if(qm.platform.isWeb() && window.location.href.indexOf('.quantimo.do') !== -1){\n                    qm.appsManager.getAppSettingsFromApi(null, successHandler, function () {\n                        qm.appsManager.getAppSettingsFromDefaultConfigJson(function (appSettings) {\n                            if(appSettings){qm.appsManager.processAndSaveAppSettings(appSettings, successHandler);}\n                        })\n                    });\n                    return;\n                }\n                qm.appsManager.getAppSettingsFromDefaultConfigJson(function (appSettings) {\n                    if(appSettings){\n                        qm.appsManager.processAndSaveAppSettings(appSettings, successHandler);\n                        return;\n                    }\n                    qm.appsManager.getAppSettingsFromApi(null, successHandler);\n                })\n            });\n        },\n        getAppSettingsFromMemory: function(){\n            var appSettings = qm.globalHelper.getItem(qm.items.appSettings);\n            if(appSettings){return appSettings;}\n            return false;\n        },\n        getAppSettingsFromApi: function (clientId, successHandler, errorHandler) {\n            qm.api.getAppSettingsUrl(clientId, function(appSettingsUrl){\n                qm.api.getViaXhrOrFetch(appSettingsUrl, function (response) {\n                    if(!response){\n                        if(errorHandler){errorHandler(\"No response from \" + appSettingsUrl);}\n                        qmLog.error(\"No response from \" + appSettingsUrl);\n                        return;\n                    }\n                    if(response.privateConfig){\n                        qm.privateConfig = response.privateConfig;\n                        qm.localForage.setItem(qm.items.privateConfig, response.privateConfig);\n                    }\n                    if(!response.appSettings){\n                        qmLog.error(\"No appSettings response from \"+ appSettingsUrl);\n                        if(errorHandler){errorHandler(\"No appSettings response from \"+ appSettingsUrl);}\n                        return false;\n                    }\n                    qm.appsManager.processAndSaveAppSettings(response.appSettings, successHandler);\n                }, errorHandler)\n            });\n        },\n        getAppSettingsFromDefaultConfigJson: function(callback) {  // I think adding appSettings to the chrome manifest breaks installation\n            qm.api.getViaXhrOrFetch(qm.urlHelper.getAbsoluteUrlFromRelativePath('default.config.json'), function (parsedResponse) {  // Can't use QM SDK in service worker\n                if(parsedResponse){\n                    window.qmLog.debug('Got appSettings from default.config.json', null, parsedResponse);\n                    qm.appsManager.processAndSaveAppSettings(parsedResponse);\n                }\n                callback(parsedResponse);\n            }, function () {\n                qmLog.error(\"Could not get appSettings from default.config.json\");\n            });\n        },\n        loadBuildInfoFromDefaultConfigJson: function(callback) {  // I think adding appSettings to the chrome manifest breaks installation\n            if(qm.buildInfo){callback(qm.buildInfo);}\n            qm.api.getViaXhrOrFetch(qm.urlHelper.getAbsoluteUrlFromRelativePath('build-info.json'), function (parsedResponse) {  // Can't use QM SDK in service worker\n                if(parsedResponse){\n                    qm.buildInfo = parsedResponse;\n                }\n                callback(parsedResponse);\n            }, function () {\n                qmLog.error(\"Could not get appSettings from build-info.json\");\n            });\n        },\n        loadPrivateConfigFromJsonFile: function(successHandler, errorHandler) {  // I think adding appSettings to the chrome manifest breaks installation\n            if(!qm.privateConfig){\n                qm.api.getViaXhrOrFetch(qm.urlHelper.getPrivateConfigJsonUrl(), function (parsedResponse) {  // Can't use QM SDK in service worker\n                    qmLog.debug('Got private config from json file', null, parsedResponse);\n                    qm.privateConfig = parsedResponse;\n                    if(successHandler){successHandler(parsedResponse);}\n                }, function () {\n                    qmLog.error(\"Could not get private config from json file\");\n                    if(errorHandler){errorHandler(\"Could not get private config from json file\");}\n                });\n            }\n        },\n        processAndSaveAppSettings: function(appSettings, callback){\n            if(!appSettings){\n                qmLog.error(\"Nothing given to processAndSaveAppSettings!\");\n                return false;\n            }\n            appSettings.designMode = window.location.href.indexOf('configuration-index.html') !== -1;\n            if(!appSettings.appDesign.ionNavBarClass){ appSettings.appDesign.ionNavBarClass = \"bar-positive\"; }\n            function successHandler() {\n                qm.localForage.setItem(qm.items.appSettings, appSettings);\n                if(callback){callback(appSettings);}\n                return appSettings;\n            }\n            if(qm.appMode.isBuilder()){return successHandler();}  // Don't need to mess with app settings refresh in builder\n            qm.appsManager.loadBuildInfoFromDefaultConfigJson(function (buildInfo) {\n                for (var propertyName in buildInfo) {\n                    if( buildInfo.hasOwnProperty(propertyName) ) {\n                        appSettings[propertyName] = buildInfo[propertyName];\n                    }\n                }\n                if(!appSettings.gottenAt){appSettings.gottenAt = qm.timeHelper.getUnixTimestampInSeconds();}\n                if(appSettings.gottenAt < qm.timeHelper.getUnixTimestampInSeconds() - 86400){\n                    qm.appsManager.getAppSettingsFromApi(appSettings.clientId);\n                }\n                successHandler();\n            })\n        },\n        // SubDomain : Filename\n        appConfigFileNames: {\n            \"app\" : \"quantimodo\",\n            \"energymodo\" : \"energymodo\",\n            \"default\" : \"default\",\n            \"ionic\" : \"quantimodo\",\n            \"local\" : \"quantimodo\",\n            \"medimodo\" : \"medimodo\",\n            \"mindfirst\" : \"mindfirst\",\n            \"moodimodo\" : \"moodimodo\",\n            \"oauth\" : \"quantimodo\",\n            \"quantimodo\" : \"quantimodo\",\n            \"staging\" : \"quantimodo\",\n            \"your_quantimodo_client_id_here\": \"your_quantimodo_client_id_here\"\n        }\n    },\n    apiHelper: {\n        getApiDocs: function (callback){\n            if(!callback){return qm.staticData.docs;}\n            callback(qm.staticData.docs);\n        },\n        docs: null,\n        getParameterDescription: function (parameterName, callback) {\n            qm.apiHelper.getApiDocs(function (apiDocs) {\n                var explanation = {title: qm.stringHelper.camelToTitleCase(parameterName)};\n                explanation.textContent = apiDocs.parameters[parameterName].description;\n                callback(explanation);\n            });\n        },\n        getPropertyDescription: function (modelName, propertyName, callback){\n            qm.apiHelper.getModelDefinition(modelName, function (modelDefinition) {\n                var explanation = qm.apiHelper.convertToExplanation(propertyName, modelDefinition);\n                callback(explanation);\n            });\n        },\n        convertToExplanation: function(propertyName, modelDefinition){\n            var explanation = {title: qm.stringHelper.camelToTitleCase(propertyName)};\n            explanation.textContent = modelDefinition.properties[propertyName].description;\n            return explanation;\n        },\n        getRequiredProperties: function (modelName, callback){\n            qm.apiHelper.getModelDefinition(modelName, function (modelDefinition) {\n                callback(modelDefinition.required);\n            });\n        },\n        getModelDefinition: function (modelName, callback){\n            qm.apiHelper.getApiDocs(function (apiDocs) {\n                var definition = apiDocs.definitions[modelName];\n                if(!definition){\n                    qmLog.error(modelName + \" definition not found.  Available definitions are \"+JSON.stringify(apiDocs.definitions));\n                }\n                callback(definition);\n            });\n        },\n        checkRequiredProperties: function(bodyToCheck, modelName, callback){\n            qm.apiHelper.getModelDefinition(modelName, function(modelDefinition){\n                var explanation = null;\n                for (var i = 0; i < modelDefinition.required.length; i++) {\n                    var requiredPropertyName = modelDefinition.required[i];\n                    if(!bodyToCheck[requiredPropertyName]){\n                        explanation = qm.apiHelper.convertToExplanation(requiredPropertyName, modelDefinition);\n                    }\n                }\n                callback(explanation);\n            })\n        }\n    },\n    arrayHelper: {\n        arrayHasItemWithSpecificPropertyValue: function(propertyName, propertyValue, array){\n            if(!array){\n                qmLog.error(\"No array provided to arrayHasItemWithSpecificPropertyValue\");\n                return false;\n            }\n            for (var i = 0; i < array.length; i++) {\n                var obj = array[i];\n                if(obj[propertyName] && obj[propertyName] === propertyValue){\n                    return true;\n                }\n            }\n            return false;\n        },\n        arrayHasItemWithNameProperty: function(arrayOfObjects){\n            return arrayOfObjects && arrayOfObjects.length && arrayOfObjects[0] && arrayOfObjects[0].name;\n        },\n        removeItemsWithDifferentName: function(arrayOfObjects, queryTerm){\n            return arrayOfObjects.filter(function( obj ) {return obj.name.toLowerCase().indexOf(queryTerm.toLowerCase()) !== -1;});\n        },\n        concatenateUniqueId: function (preferred, secondary) {\n            var a = preferred.concat(secondary);\n            for (var i = 0; i < a.length; ++i) {\n                for (var j = i + 1; j < a.length; ++j) {\n                    if (a[i].id === a[j].id)\n                        a.splice(j--, 1);\n                }\n            }\n        },\n        convertToArrayIfNecessary: function(variable){\n            if(!qm.arrayHelper.variableIsArray(variable)){variable = [variable];}\n            return variable;\n        },\n        convertObjectToArray: function (object) {\n            if(!object){\n                qmLog.info(object + \" provided to convertObjectToArray\");\n                return object;\n            }\n            if(qm.arrayHelper.variableIsArray(object)){return object;}\n            return Object.keys(object).map(function(key) {\n                return object[key];\n            });\n        },\n        deleteById: function(id, array){\n            array = array.filter(function( obj ) {\n                return obj.id !== id;\n            });\n            return array;\n        },\n        deleteByProperty: function(propertyName, value, array){\n            array = array.filter(function( obj ) {\n                return obj[propertyName] !== value;\n            });\n            return array;\n        },\n        filterByProperty: function(filterPropertyName, filterPropertyValue, unfilteredElementArray){\n            return unfilteredElementArray.filter(function( obj ) {\n                if(typeof obj[filterPropertyName] === \"string\" && typeof filterPropertyValue === \"string\"){\n                    return filterPropertyValue.toLowerCase() === obj[filterPropertyName].toLowerCase();\n                } else {\n                    return filterPropertyValue === obj[filterPropertyName];\n                }\n            });\n        },\n        filterByPropertyOrSize: function(matchingElements, filterPropertyName, filterPropertyValue,\n                                         lessThanPropertyName, lessThanPropertyValue,\n                                         greaterThanPropertyName, greaterThanPropertyValue) {\n            if(!matchingElements){return null;}\n            if(matchingElements.length){\n                if(greaterThanPropertyName && typeof matchingElements[0][greaterThanPropertyName] === \"undefined\") {\n                    window.qmLog.error(greaterThanPropertyName + ' greaterThanPropertyName does not exist');\n                }\n                if(filterPropertyName && typeof matchingElements[0][filterPropertyName] === \"undefined\"){\n                    window.qmLog.error(filterPropertyName + ' filterPropertyName does not exist');\n                }\n                if(lessThanPropertyName && typeof matchingElements[0][lessThanPropertyName] === \"undefined\"){\n                    window.qmLog.error(lessThanPropertyName + ' lessThanPropertyName does not exist');\n                }\n            }\n            if(filterPropertyName && typeof filterPropertyValue !== \"undefined\" && filterPropertyValue !== null){\n                matchingElements = qm.arrayHelper.filterByProperty(filterPropertyName, filterPropertyValue, matchingElements);\n            }\n            if(lessThanPropertyName && typeof lessThanPropertyValue !== \"undefined\"){\n                matchingElements = matchingElements.filter(function( obj ) {\n                    return obj[lessThanPropertyName] < lessThanPropertyValue;\n                });\n            }\n            if(greaterThanPropertyName && typeof greaterThanPropertyValue !== \"undefined\"){\n                matchingElements = matchingElements.filter(function( obj ) {\n                    return obj[greaterThanPropertyName] > greaterThanPropertyValue;\n                });\n            }\n            return matchingElements;\n        },\n        getByProperty: function(propertyName, value, array){\n            array = array.filter(function( obj ) {\n                return obj[propertyName] === value;\n            });\n            return array;\n        },\n        getContaining: function(searchTerm, array){\n            if(!array){\n                qmLog.error(\"No array provided to getContaining\");\n                return array;\n            }\n            searchTerm = searchTerm.toLowerCase();\n            var matches = [];\n            for (var i = 0; i < array.length; i++) {\n                if(JSON.stringify(array[i]).toLowerCase().indexOf(searchTerm) > -1){\n                    matches.push(array[i]);\n                }\n            }\n            return matches;\n        },\n        getWithNameContaining: function(searchTerm, array){\n            if(!array){\n                qmLog.error(\"No array provided to getContaining\");\n                return array;\n            }\n            searchTerm = searchTerm.toLowerCase();\n            return array.filter(function(item){\n                var name = item.name || item.variableName;\n                name = name.toLowerCase();\n                return name.indexOf(searchTerm) !== -1;\n            });\n        },\n        getWithNameContainingEveryWord: function(searchTerm, array){\n            if(!array){\n                qmLog.error(\"No array provided to getContaining\");\n                return array;\n            }\n            qmLog.info(\"Called getWithNameContainingEveryWord...\");\n            searchTerm = searchTerm.toLowerCase();\n            var filterBy = searchTerm.split(/\\s+/);\n            return array.filter(function(item){\n                var name = item.name || item.variableName;\n                name = name.toLowerCase();\n                var result = filterBy.every(function (word){\n                    var exists = name.indexOf(word);\n                    if(exists !== -1){return true;}\n                    if(item.synonyms && item.synonyms.length){\n                        var synonyms = JSON.stringify(item.synonyms).toLowerCase();\n                        if(synonyms.indexOf(word) !== -1){return true;}\n                    }\n                    if(item.alias){\n                        var alias = item.alias.toLowerCase();\n                        if(alias.indexOf(word) !== -1){return true;}\n                    }\n                });\n                return result;\n            });\n        },\n        inArray: function(needle, haystack) {\n            var length = haystack.length;\n            for(var i = 0; i < length; i++) {\n                if(haystack[i] === needle) return true;\n            }\n            return false;\n        },\n        replaceElementInArrayById: function (array, replacementElement) {\n            return qm.arrayHelper.concatenateUniqueId([replacementElement], array);\n        },\n        removeLastItem: function(array){\n            if(!array){\n                qmLog.error(\"No array provided to removeLastItem\");\n                return array;\n            }\n            if(!qm.arrayHelper.variableIsArray(array)){\n                qmLog.error(\"Non-array provided to removeLastItem\");\n                return array;\n            }\n            array.pop();\n        },\n        removeLastItemsUntilSizeLessThan: function(maxKb, array){\n            if(!array){\n                qmLog.error(\"No array provided to removeLastItem\");\n                return array;\n            }\n            if(!qm.arrayHelper.variableIsArray(array)){\n                qmLog.error(\"Non-array provided to removeLastItemsUntilSizeLessThan\");\n                return array;\n            }\n            if(array.length < 2){\n                qmLog.error(\"Removing only element from single item array!\");\n                return [];\n            }\n            while (qm.arrayHelper.getSizeInKiloBytes(array) > maxKb) {\n                qm.arrayHelper.removeLastItem(array);\n            }\n            return array;\n        },\n        sortByProperty: function(arrayToSort, propertyName){\n            qmLog.info(\"Sorting by \"+propertyName+\"...\");\n            if(!qm.arrayHelper.variableIsArray(arrayToSort)){\n                qmLog.info(\"Cannot sort by \" + propertyName + \" because it's not an array!\");\n                return arrayToSort;\n            }\n            if(arrayToSort.length < 2){return arrayToSort;}\n            if(propertyName.indexOf('-') > -1){\n                arrayToSort.sort(function(a, b){return b[propertyName.replace('-', '')] - a[propertyName.replace('-', '')];});\n            } else {\n                arrayToSort.sort(function(a, b){return a[propertyName] - b[propertyName];});\n            }\n            return arrayToSort;\n        },\n        unsetNullProperties: function (array) {\n            if(!array){\n                qmLog.error(\"Nothing provided to unsetNullProperties\");\n                return null;\n            }\n            for (var i = 0; i < array.length; i++) {\n                array[i] = qm.objectHelper.unsetNullProperties(array[i]);\n            }\n            return array;\n        },\n        variableIsArray: function(variable){\n            if(!variable){\n                qmLog.info(variable + \" provided to variableIsArray\");\n                return false;\n            }\n            var isAnArray = Array.isArray(variable);\n            if(isAnArray){return true;}\n            var constructorArray = variable.constructor === Array;\n            if(constructorArray){return true;}\n            var instanceOfArray = variable instanceof Array;\n            if(instanceOfArray){return true;}\n            return Object.prototype.toString.call(variable) === '[object Array]';\n        },\n        removeArrayElementsWithDuplicateIds: function(array) {\n            if(!array){return array;}\n            var a = array.concat();\n            for(var i = 0; i < a.length; i++) {\n                for(var j = i + 1; j < a.length; j++) {\n                    if(!a[i]){qmLog.error('a[i] not defined!');}\n                    if(!a[j]){\n                        qmLog.error('a[j] not defined!');\n                        return a;\n                    }\n                    if(a[i].id === a[j].id) {\n                        a.splice(j--, 1);\n                    }\n                }\n            }\n            return a;\n        },\n        filterByRequestParams: function(array, requestParams) {\n            if(!requestParams){\n                qmLog.info(\"No requestParams provided to filterByRequestParams\");\n                return array;\n            }\n            var allowedFilterParams = ['variableCategoryName', 'id', 'name', 'manualTracking', 'outcome', 'upc'];\n            var excludedFilterParams = ['includePublic', 'excludeLocal', 'minimumNumberOfResultsRequiredToAvoidAPIRequest',\n                'sort', 'limit', 'appName', 'appVersion', 'accessToken', 'clientId', 'barcodeFormat', 'searchPhrase', 'platform'];\n            var greaterThanPropertyName = null;\n            var greaterThanPropertyValue = null;\n            var lessThanPropertyName = null;\n            var lessThanPropertyValue = null;\n            var log = [];\n            var filterPropertyValues = [];\n            var filterPropertyNames = [];\n            angular.forEach(requestParams, function(value, key) {\n                if(typeof value === \"string\" && value.indexOf('(lt)') !== -1){\n                    lessThanPropertyValue = value.replace('(lt)', \"\");\n                    lessThanPropertyValue = Number(lessThanPropertyValue);\n                    lessThanPropertyName = key;\n                } else if (typeof value === \"string\" && value.indexOf('(gt)') !== -1){\n                    greaterThanPropertyValue = value.replace('(gt)', \"\");\n                    greaterThanPropertyValue = Number(greaterThanPropertyValue);\n                    greaterThanPropertyName = key;\n                } else {\n                    if (value === false && key === \"manualTracking\") { return; }\n                    if (value === null || value === \"\" || value === \"Anything\") { return; }\n                    if (excludedFilterParams.indexOf(key) !== -1) {\n                        return;\n                    } else if (allowedFilterParams.indexOf(key) === -1) {\n                        qmLog.error(key + \" is not in allowed filter params\");\n                    } else {\n                        qmLog.info(\"filtering by \" + key);\n                    }\n                    filterPropertyValues.push(value);\n                    filterPropertyNames.push(key);\n                }\n            }, log);\n            var results = qm.arrayHelper.filterByPropertyOrSize(array, null, null, lessThanPropertyName, lessThanPropertyValue,\n                greaterThanPropertyName, greaterThanPropertyValue);\n            if(results){\n                for(var i = 0; i < filterPropertyNames.length; i++){\n                    results = qm.arrayHelper.filterByProperty(filterPropertyNames[i], filterPropertyValues[i], results);\n                }\n            }\n            if(!results){return null;}\n            if(requestParams.searchPhrase && requestParams.searchPhrase !== \"\"){\n                results = qm.arrayHelper.getWithNameContainingEveryWord(requestParams.searchPhrase, results);\n            }\n            if(requestParams && requestParams.sort){results = qm.arrayHelper.sortByProperty(results, requestParams.sort);}\n            results = qm.arrayHelper.removeArrayElementsWithDuplicateIds(results);\n            return results;\n        },\n        getUnique: function(array, propertyName) {\n            if(!propertyName){\n                function onlyUnique(value, index, self) {return self.indexOf(value) === index;}\n                return array.filter( onlyUnique );\n            }\n            var flags = [], output = [], l = array.length, i;\n            for( i=0; i<l; i++) {\n                if(flags[array[i][propertyName]]) {continue;}\n                flags[array[i][propertyName]] = true;\n                output.push(array[i]);\n            }\n            return output;\n        },\n        deleteFromArrayByProperty: function(localStorageItemArray, propertyName, propertyValue) {\n            var elementsToKeep = [];\n            for(var i = 0; i < localStorageItemArray.length; i++){\n                if(localStorageItemArray[i][propertyName] !== propertyValue){elementsToKeep.push(localStorageItemArray[i]);}\n            }\n            return elementsToKeep;\n        },\n        addToOrReplaceByIdAndMoveToFront: function(localStorageItemArray, replacementElementArray){\n            if(!(replacementElementArray instanceof Array)){replacementElementArray = [replacementElementArray];}\n            // Have to stringify/parse to create cloned variable or it adds all stored reminders to the array to be posted\n            var elementsToKeep = JSON.parse(JSON.stringify(replacementElementArray));\n            var found = false;\n            if(localStorageItemArray){  // NEED THIS DOUBLE LOOP IN CASE THE STUFF WE'RE ADDING IS AN ARRAY\n                for(var i = 0; i < localStorageItemArray.length; i++){\n                    found = false;\n                    for (var j = 0; j < replacementElementArray.length; j++){\n                        if(replacementElementArray[j].id &&\n                            localStorageItemArray[i].id === replacementElementArray[j].id){\n                            found = true;\n                        }\n                    }\n                    if(!found){elementsToKeep.push(localStorageItemArray[i]);}\n                }\n            }\n            return elementsToKeep;\n        },\n        getSizeInKiloBytes: function(string) {\n            if(typeof value !== \"string\"){string = JSON.stringify(string);}\n            return Math.round(string.length*16/(8*1024));\n        }\n    },\n    auth: {\n        getAndSaveAccessTokenFromCurrentUrl: function(){\n            qmLog.authDebug(\"getAndSaveAccessTokenFromCurrentUrl \" + window.location.href);\n            var accessTokenFromUrl = qm.auth.getAccessTokenFromCurrentUrl();\n            if(accessTokenFromUrl){\n                if(!qm.auth.accessTokenIsValid(accessTokenFromUrl)){return null;}\n                qmLog.authDebug(\"getAndSaveAccessTokenFromCurrentUrl saving \" + accessTokenFromUrl);\n                qm.auth.saveAccessToken(accessTokenFromUrl);\n            }\n            return accessTokenFromUrl;\n        },\n        accessTokenIsValid: function(accessToken){\n            if(accessToken.length < 10 && accessToken !== \"demo\"){\n                qmLog.error(\"This accessTokenFromUrl is not valid: \"+ accessToken);\n                return false;\n            }\n            return true;\n        },\n        saveAccessToken: function(accessToken){\n            if(!qm.urlHelper.getParam('doNotRemember')){\n                qmLog.authDebug(\"saveAccessToken: Saving access token in local storage because doNotRemember is not set\");\n                qm.storage.setItem(qm.items.accessToken, accessToken);\n            }\n        },\n        getAccessTokenFromUrlUserOrStorage: function(user) {\n            if(user){window.qmUser = user;}\n            if(qm.auth.getAndSaveAccessTokenFromCurrentUrl()){\n                return qm.auth.getAndSaveAccessTokenFromCurrentUrl();\n            }\n            var accessToken;\n            if(qm.userHelper.getUserFromLocalStorage() && qm.userHelper.getUserFromLocalStorage().accessToken){\n                accessToken = qm.userHelper.getUserFromLocalStorage().accessToken;\n                if(!qm.auth.accessTokenIsValid(accessToken)){\n                    qmLog.error(\"qm.userHelper.getUserFromLocalStorage().accessToken is invalid: \"+ accessToken);\n                } else {\n                    return accessToken;\n                }\n            }\n            accessToken = qm.storage.getItem(qm.items.accessToken);\n            if(accessToken){\n                if(!qm.auth.accessTokenIsValid(accessToken)){\n                    qmLog.error(\"accessTokenFromUrl is invalid: \"+ accessToken);\n                } else {\n                    return accessToken;\n                }\n            }\n            qmLog.info(\"No access token or user!\");\n            return null;\n        },\n        saveAccessTokenResponse: function(accessResponse) {\n            var accessToken;\n            if(typeof accessResponse === \"string\"){accessToken = accessResponse;} else {accessToken = accessResponse.accessToken || accessResponse.access_token;}\n            if (accessToken) {\n                window.qm.storage.setItem('accessToken', accessToken);\n            } else {\n                qmLog.error('No access token provided to qm.auth.saveAccessTokenResponse');\n                return;\n            }\n            var refreshToken = accessResponse.refreshToken || accessResponse.refresh_token;\n            if (refreshToken) {qm.storage.setItem(qm.items.refreshToken, refreshToken);}\n            /** @namespace accessResponse.expiresAt */\n            var expiresAt = accessResponse.expires || accessResponse.expiresAt || accessResponse.accessTokenExpires;\n            var expiresAtMilliseconds;\n            var bufferInMilliseconds = 86400 * 1000;  // Refresh a day in advance\n            if(accessResponse.accessTokenExpiresAtMilliseconds){\n                expiresAtMilliseconds = accessResponse.accessTokenExpiresAtMilliseconds;\n            } else if (typeof expiresAt === 'string' || expiresAt instanceof String){\n                expiresAtMilliseconds = window.qm.timeHelper.getUnixTimestampInMilliseconds(expiresAt);\n            } else if (expiresAt === parseInt(expiresAt, 10) && expiresAt < window.qm.timeHelper.getUnixTimestampInMilliseconds()) {\n                expiresAtMilliseconds = expiresAt * 1000;\n            } else if(expiresAt === parseInt(expiresAt, 10) && expiresAt > window.qm.timeHelper.getUnixTimestampInMilliseconds()){\n                expiresAtMilliseconds = expiresAt;\n            } else {\n                // calculate expires at\n                /** @namespace accessResponse.expiresIn */\n                var expiresInSeconds = accessResponse.expiresIn || accessResponse.expires_in;\n                expiresAtMilliseconds = window.qm.timeHelper.getUnixTimestampInMilliseconds() + expiresInSeconds * 1000;\n                qmLog.authDebug(\"Expires in is \" + expiresInSeconds + ' seconds. This results in expiresAtMilliseconds being: ' + expiresAtMilliseconds);\n            }\n            if(expiresAtMilliseconds){\n                qm.storage.setItem(qm.items.expiresAtMilliseconds, expiresAtMilliseconds - bufferInMilliseconds);\n                return accessToken;\n            } else {\n                qmLog.authDebug('No expiresAtMilliseconds!',\n                    'expiresAt is ' + expiresAt + ' || accessResponse is ' + JSON.stringify(accessResponse) + ' and user is ' + qm.storage.getAsString('user'),\n                    {groupingHash: 'No expiresAtMilliseconds!'},\n                    \"error\");\n            }\n            var groupingHash = 'Access token expiresAt not provided in recognizable form!';\n            qmLog.authDebug(groupingHash,\n                'expiresAt is ' + expiresAt + ' || accessResponse is ' + JSON.stringify(accessResponse) + ' and user is ' + qm.storage.getAsString('user'),\n                {groupingHash: groupingHash}, \"error\");\n        },\n        getAccessTokenFromCurrentUrl: function(){\n            qmLog.webAuthDebug(\"getAndSaveAccessTokenFromCurrentUrl \" + window.location.href);\n            var accessTokenFromUrl =  (qm.urlHelper.getParam('accessToken')) ? qm.urlHelper.getParam('accessToken') : qm.urlHelper.getParam('quantimodoAccessToken');\n            if(accessTokenFromUrl){\n                qmLog.webAuthDebug(\"Got access token from url\");\n            } else {\n                qmLog.webAuthDebug(\"No access token from url\");\n            }\n            return accessTokenFromUrl;\n        },\n        deleteAllAccessTokens: function(){\n            qmLog.info(\"deleteAllAccessTokens...\");\n            qm.storage.removeItem('accessToken');\n            if(qm.userHelper.getUserFromLocalStorage()){\n                qm.userHelper.getUserFromLocalStorage().accessToken = null;\n            }\n            qm.auth.deleteAllCookies();\n            qm.api.configureClient();\n        },\n        deleteAllCookies: function(){\n            qmLog.info(\"Deleting all cookies...\");\n            var cookies = document.cookie.split(\";\");\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i];\n                var eqPos = cookie.indexOf(\"=\");\n                var name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n                document.cookie = name + \"=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\n            }\n        },\n        getPermissionString: function(){\n            var str = \"\";\n            var permissions = ['readmeasurements', 'writemeasurements'];\n            for(var i=0; i < permissions.length; i++) {str += permissions[i] + \"%20\";}\n            return str.replace(/%20([^%20]*)$/,'$1');\n        },\n        generateV1OAuthUrl: function(register) {\n            var url = qm.api.getBaseUrl() + \"/api/oauth2/authorize?\";\n            // add params\n            url += \"response_type=code\";\n            url += \"&client_id=\" + qm.api.getClientId();\n            //url += \"&client_secret=\" + qm.appsManager.getClientSecret();\n            url += \"&scope=\" + qm.auth.getPermissionString();\n            url += \"&state=testabcd\";\n            if(register === true){url += \"&register=true\";}\n            url += \"&redirect_uri=\" + qm.auth.getRedirectUri();\n            qmLog.debug('generateV1OAuthUrl: ' + url);\n            return url;\n        },\n        openBrowserWindowAndGetParameterFromRedirect: function(url, redirectUrl, parameterName, successHandler, ref) {\n            redirectUrl = redirectUrl || qm.auth.getRedirectUri();\n            qmLog.authDebug('Going to try logging in by opening new tab at url ' + url);\n            ref = ref || window.open(url, '_blank');\n            if (!ref) {\n                qmLog.error('You must first unblock popups, and and refresh the page for this to work!');\n                alert(\"In order to log in, please unblock popups by clicking the icon on the right of the address bar. Then refresh the page.\");\n            } else {\n                qmLog.authDebug('Opened ' + url + ' and now broadcasting isLoggedIn message question every second to sibling tabs');\n                var interval = setInterval(function () {ref.postMessage('isLoggedIn?', redirectUrl);}, 1000);\n                window.onMessageReceived = function (event) {  // handler when a message is received from a sibling tab\n                    qmLog.authDebug('message received from sibling tab', null, event.url);\n                    if(interval !== false){\n                        clearInterval(interval);  // Don't ask login question anymore\n                        interval = false;\n                        var value = qm.urlHelper.getParameterFromEventUrl(event, parameterName);\n                        if (value) {\n                            successHandler(value);\n                            ref.close();\n                        }\n                        qm.urlHelper.checkLoadStartEventUrlForErrors(ref, event);\n                    }\n                };\n                // listen to broadcast messages from other tabs within browser\n                window.addEventListener(\"message\", window.onMessageReceived, false);\n            }\n        },\n        oAuthBrowserLogin: function (register, successHandler) {\n            var url = qm.auth.generateV1OAuthUrl(register);\n            var redirectUrl = qm.auth.getRedirectUri();\n            qm.auth.openBrowserWindowAndGetParameterFromRedirect(url, redirectUrl, 'code', successHandler);\n        },\n        getRedirectUri: function () {\n            if(qm.getAppSettings().redirectUri){return qm.getAppSettings().redirectUri;}\n            return qm.api.getBaseUrl() +  '/ionic/Modo/www/callback/';\n        },\n        getAccessTokenFromUrlAndSetLocalStorageFlags: function(stateName){\n            if(qm.auth.accessTokenFromUrl){ return qm.auth.accessTokenFromUrl; }\n            qmLog.webAuthDebug(\"getAccessTokenFromUrl: No previous qm.auth.accessTokenFromUrl\");\n            qm.auth.accessTokenFromUrl = qm.auth.getAccessTokenFromCurrentUrl();\n            if(!qm.auth.accessTokenFromUrl){return null;}\n            if(stateName !== 'app.login'){\n                qmLog.authDebug(\"getAccessTokenFromUrl: Setting qm.auth.accessTokenFromUrl to \" + qm.auth.accessTokenFromUrl);\n                qmLog.authDebug(\"getAccessTokenFromUrl: Setting onboarded and introSeen in local storage because we got an access token from url\");\n                qm.storage.setItem(qm.items.onboarded, true);\n                qm.storage.setItem(qm.items.introSeen, true);\n                qmLog.info('Setting onboarded and introSeen to true');\n                qmLog.info('Setting afterLoginGoToState and afterLoginGoToUrl to null');\n                qm.storage.setItem(qm.items.afterLoginGoToState, null);\n                qm.storage.setItem(qm.items.afterLoginGoToUrl, null);\n            } else {\n                qmLog.info('On login state so not setting afterLoginGoToState and afterLoginGoToUrl to null');\n            }\n            qmLog.authDebug(\"getAccessTokenFromUrl: returning this access token: \" + qm.auth.accessTokenFromUrl);\n            return qm.auth.accessTokenFromUrl;\n        },\n        logout: function() {\n            qm.auth.deleteAllAccessTokens();\n            qm.auth.deleteAllCookies();\n            qm.auth.logOutOfWebsite();\n        },\n        logOutOfWebsite: function() {\n            //var afterLogoutGoToUrl = qm.api.getQuantiModoUrl('ionic/Modo/www/index.html#/app/intro');\n            var afterLogoutGoToUrl = qm.urlHelper.getIonicUrlForPath('intro');\n            if(window.location.href.indexOf('/src/') !== -1){afterLogoutGoToUrl = afterLogoutGoToUrl.replace('/www/', '/src/');}\n            if(window.location.href.indexOf('.quantimo.do/') === -1){afterLogoutGoToUrl = window.location.href;}\n            afterLogoutGoToUrl = afterLogoutGoToUrl.replace('settings', 'intro');\n            if(qm.platform.isChromeExtension()){afterLogoutGoToUrl = qm.api.getQuantiModoUrl(\"api/v1/window/close\");}\n            var logoutUrl = qm.api.getQuantiModoUrl(\"api/v2/auth/logout?afterLogoutGoToUrl=\" + encodeURIComponent(afterLogoutGoToUrl));\n            qmLog.info(\"Sending to \" + logoutUrl);\n            var request = {method: 'GET', url: logoutUrl, responseType: 'json', headers: {'Content-Type': \"application/json\"}};\n            //$http(request);\n            // Get request doesn't seem to clear cookies\n            window.location.replace(logoutUrl);\n        },\n        weShouldSetAfterLoginStateOrUrl: function(afterLoginGoToStateOrUrl){\n            if(qm.storage.getItem(qm.items.afterLoginGoToUrl)){\n                qmLog.info('afterLoginGoToUrl already set to '+ qm.storage.getItem(qm.items.afterLoginGoToUrl));\n                return false;\n            }\n            if(qm.storage.getItem(qm.items.afterLoginGoToState)){\n                qmLog.info('afterLoginGoToState already set to '+ qm.storage.getItem(qm.items.afterLoginGoToState));\n                return false;\n            }\n            if(afterLoginGoToStateOrUrl.indexOf('login') !== -1){\n                qmLog.info('setAfterLoginGoToState: Why are we sending to login from login state?');\n                return false;\n            }\n            return true;\n        },\n        setAfterLoginGoToUrl: function (afterLoginGoToUrl){\n            if(!afterLoginGoToUrl){afterLoginGoToUrl = window.location.href;}\n            if(!qm.auth.weShouldSetAfterLoginStateOrUrl(afterLoginGoToUrl)){return false;}\n            qmLog.debug('Setting afterLoginGoToUrl to ' + afterLoginGoToUrl + ' and going to login.');\n            qm.storage.setItem(qm.items.afterLoginGoToUrl, afterLoginGoToUrl);\n        },\n        sendToLogin: function () {\n            if(qm.urlHelper.getParam('access_token')){\n                if(!qm.auth.getAccessTokenFromCurrentUrl()){\n                    qmLog.error(\"Not detecting snake case access_token\", {}, qmLog.getStackTrace());\n                }\n                qmLog.error(\"Why are we sending to login if we have an access token?\", {}, qmLog.getStackTrace());\n                return;\n            }\n            qmLog.authDebug('Sending to app.login', null);\n            window.location.href = '#/app/login';\n        },\n        setAfterLoginGoToUrlAndSendToLogin: function (){\n            if(window.location.href.indexOf('login') !== -1){\n                qmLog.info('qm.auth.setAfterLoginGoToUrlAndSendToLogin: Why are we sending to login from login state?');\n                return;\n            }\n            qm.auth.setAfterLoginGoToUrl();\n            qm.auth.sendToLogin();\n        },\n        handle401Response: function(request, options, headers) {\n            options = options || {};\n            if(options && options.doNotSendToLogin){return;}\n            qmLog.debug('generalApiErrorHandler: Sending to login because we got 401 with request ' +\n                JSON.stringify(request), null, options.stackTrace);\n            qmLog.debug('HEADERS: ', headers, options.stackTrace);\n            qm.auth.deleteAllAccessTokens();\n            qm.auth.setAfterLoginGoToUrlAndSendToLogin();\n        }\n    },\n    buildInfo: {},\n    chartHelper: {\n        setChartExportingOptionsOnce: function(highchartConfig){\n            if(!highchartConfig){\n                qmLog.info(\"No highchartConfig provided to setChartExportingOptionsOnce\");\n                return highchartConfig;\n            }\n            highchartConfig.exporting = {enabled: qm.platform.isWeb()};\n            return highchartConfig;\n        },\n        setChartExportOptionsForAllSubProperties: function(something){\n            var keys = Object.keys(something);\n            for (var i = 0; i < keys.length; i++) {\n                if (something[keys[i]] && typeof something[keys[i]] === 'object') {\n                    if(something[keys[i]].highchartConfig){\n                        qm.chartHelper.setChartExportingOptionsOnce(something[keys[i]].highchartConfig)\n                    } else {\n                        qm.chartHelper.setChartExportOptionsForAllSubProperties(something[keys[i]])\n                    }\n                }\n            }\n        }\n    },\n    client: {\n        getClientWebsiteUrl: function (successHandler, partialPath){\n            if(!partialPath){partialPath = '';}\n            qm.api.getClientIdWithCallback(function (clientId) {\n                var url = \"https://\"+clientId+\".quantimo.do/ionic/Modo/www/\" + partialPath;\n                successHandler(url)\n            })\n        }\n    },\n    connectorHelper: {\n        getConnectorsFromApi: function(params, successCallback, errorHandler){\n            qmLog.info(\"Getting connectors from API...\");\n            function successHandler(response){\n                var connectors = response.connectors || response;\n                if (connectors) {\n                    qmLog.info(\"Got connectors from API...\");\n                    qm.storage.setItem(qm.items.connectors, connectors);\n                    if(successCallback){successCallback(connectors);}\n                } else {\n                    qmLog.error(\"Could not get connectors from API...\");\n                }\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.ConnectorsApi();\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getConnectorsFromApi');\n            }\n            params = qm.api.addGlobalParams(params);\n            apiInstance.getConnectors(params, callback);\n        },\n        getConnectorsFromJson: function(successHandler, errorHandler) {  // I think adding appSettings to the chrome manifest breaks installation\n            qm.api.getViaXhrOrFetch(qm.urlHelper.getAbsoluteUrlFromRelativePath('data/connectors.json'), function (connectors) {  // Can't use QM SDK in service worker\n                if(connectors){\n                    qmLog.debug('Got connectors from connectors.json', null, connectors);\n                    qm.storage.setItem(qm.items.connectors, connectors);\n                    if(successHandler){successHandler(connectors);}\n                } else {\n                    qmLog.error(\"No connectors from getConnectorsFromJson\");\n                    if(errorHandler){errorHandler(\"Could not get connectors from connectors.json\");}\n                }\n            }, function (error) {\n                qmLog.error(\"Could not get connectors from connectors.json: \"+error);\n                if(errorHandler){errorHandler(\"Could not get connectors from connectors.json: \"+error);}\n            });\n        },\n        getConnectorsFromLocalStorage: function(){\n            var connectors = qm.storage.getItem(qm.items.connectors);\n            if(connectors && connectors.connectors){\n                qm.storage.setItem(qm.items.connectors, connectors.connectors);\n                return connectors.connectors;\n            }\n            return connectors;\n        },\n        getConnectorsFromLocalStorageOrApi: function(successHandler, errorHandler){\n            var connectors = qm.connectorHelper.getConnectorsFromLocalStorage();\n            if(connectors){\n                if(successHandler){successHandler(connectors);}\n                return;\n            }\n            if(qm.getUser()){\n                qm.connectorHelper.getConnectorsFromApi({}, successHandler, errorHandler);\n            } else {\n                qm.connectorHelper.getConnectorsFromJson(successHandler, function (error) {\n                    qmLog.error(\"Could not get connectors from connectors.json\", error);\n                    qm.connectorHelper.getConnectorsFromApi({}, successHandler, errorHandler);\n                });\n            }\n        },\n        getConnectorByName: function (connectorName, successHandler, errorHandler) {\n            if(!successHandler){\n                var connectors = qm.connectorHelper.getConnectorsFromLocalStorage();\n                return connectors.find(function(connector){\n                    return connector.name === connectorName.toLowerCase();\n                });\n            }\n            qm.connectorHelper.getConnectorsFromLocalStorageOrApi(function (connectors) {\n                if(!connectors){\n                    qmLog.error(\"No getConnectorsFromLocalStorageOrApi!\");\n                    if(errorHandler){errorHandler(\"No getConnectorsFromLocalStorageOrApi!\");}\n                    return;\n                }\n                var match = connectors.find(function(connector){\n                    return connector.name === connectorName.toLowerCase();\n                });\n                successHandler(match);\n            }, errorHandler)\n        },\n        storeConnectorResponse: function(response){\n            function hideUnavailableConnectors(connectors){\n                for(var i = 0; i < connectors.length; i++){\n                    //if(connectors[i].name === 'facebook' && $rootScope.platform.isAndroid) {connectors[i].hide = true;}\n                    if(connectors[i].spreadsheetUpload && qm.platform.isMobile()) {connectors[i].hide = true;}\n                }\n                return response;\n            }\n            if(response.user){qm.userHelper.setUser(response.user);}\n            var connectors = response.connectors || response;\n            connectors = hideUnavailableConnectors(connectors);\n            qm.storage.setItem(qm.items.connectors, connectors);\n            return connectors;\n        }\n    },\n    correlations: {\n        getAggregatedCorrelationsFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            params.commonOnly = true;\n            var cachedData = qm.api.cacheGet(params, qm.items.aggregatedCorrelations);\n            if(cachedData && successHandler){\n                successHandler(cachedData);\n                return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.AnalyticsApi();\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getAggregatedCorrelationsFromApi');\n            }\n            apiInstance.getCorrelations(params, callback);\n        },\n        getUserCorrelationsFromApi: function (params, successHandler, errorHandler) {\n            params = qm.api.addGlobalParams(params);\n            var cachedData = qm.api.cacheGet(params, qm.items.userCorrelations);\n            if(cachedData && successHandler){\n                successHandler(cachedData);\n                return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.AnalyticsApi();\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, qm.items.userCorrelations);\n            }\n            apiInstance.getCorrelations(params, callback);\n        }\n    },\n    dialogFlow: {\n        post: function(body, successHandler, errorHandler){\n            qm.api.postToQuantiModo(body, \"v1/dialogflow\", function(response){\n                qm.dialogFlow.lastApiResponse = response;\n                successHandler(response);\n            }, function(error){\n                errorHandler(error);\n            });\n        },\n        welcomeBody: {\n            \"responseId\": \"ab13a388-57f7-42a0-af43-868b2676ff9f\",\n            \"queryResult\": {\n                \"queryText\": \"GOOGLE_ASSISTANT_WELCOME\",\n                \"action\": \"input.welcome\",\n                \"parameters\": {},\n                \"allRequiredParamsPresent\": true,\n                \"fulfillmentText\": \"Oh. It's you. What do you want?\",\n                \"fulfillmentMessages\": [\n                    {\n                        \"text\": {\n                            \"text\": [\n                                \"Oh. It's you. What do you want?\"\n                            ]\n                        }\n                    }\n                ],\n                \"outputContexts\": [\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/google_assistant_welcome\"\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/actions_capability_screen_output\"\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/actions_capability_audio_output\"\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/google_assistant_input_type_keyboard\"\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/actions_capability_web_browser\"\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533757655027/contexts/actions_capability_media_response_audio\"\n                    }\n                ],\n                \"intent\": {\n                    \"name\": \"projects/dr-modo/agent/intents/b69ed140-5dd7-4cf1-a5b7-f11f8d38bff0\",\n                    \"displayName\": \"Default Welcome Intent\"\n                },\n                \"intentDetectionConfidence\": 1,\n                \"languageCode\": \"en-us\"\n            },\n            \"originalDetectIntentRequest\": {\n                \"source\": \"google\",\n                \"version\": \"2\",\n                \"payload\": {\n                    \"isInSandbox\": true,\n                    \"surface\": {\n                        \"capabilities\": [\n                            {\n                                \"name\": \"actions.capability.AUDIO_OUTPUT\"\n                            },\n                            {\n                                \"name\": \"actions.capability.SCREEN_OUTPUT\"\n                            },\n                            {\n                                \"name\": \"actions.capability.MEDIA_RESPONSE_AUDIO\"\n                            },\n                            {\n                                \"name\": \"actions.capability.WEB_BROWSER\"\n                            }\n                        ]\n                    },\n                    \"requestType\": \"SIMULATOR\",\n                    \"inputs\": [\n                        {\n                            \"rawInputs\": [\n                                {\n                                    \"query\": \"Talk to Dr. Modo\",\n                                    \"inputType\": \"KEYBOARD\"\n                                }\n                            ],\n                            \"intent\": \"actions.intent.MAIN\"\n                        }\n                    ],\n                    \"user\": {\n                        \"lastSeen\": \"2018-08-07T16:26:13Z\",\n                        \"idToken\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjlhMzNiNWVkYjQ5ZDA4NjdhODY3MmQ5NTczYjFlMGQyMzc1ODg2ZTEifQ.eyJhdWQiOiI5MTg3NjEzMjU0OTEtazJ0Y3VkbGg5ZHEyMjdtb2RrMWhnbmlvMDR1aGhvNWQuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTg0NDQ2OTMxODQ4Mjk1NTUzNjIiLCJoZCI6InRoaW5rYnludW1iZXJzLm9yZyIsImVtYWlsIjoibUB0aGlua2J5bnVtYmVycy5vcmciLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNTMzNzYxMjU1LCJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJqdGkiOiJlODFlY2Q4YTA5NmVhOGQ0YmVmOTk0YWMwYTVjZjlmZDczMjBkMTU4IiwiaWF0IjoxNTMzNzU3NjU1LCJuYmYiOjE1MzM3NTczNTUsIm5hbWUiOiJNaWtlIFNpbm4iLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDYuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1CSHI0aHlVV3FaVS9BQUFBQUFBQUFBSS9BQUFBQUFBSUcyOC8yTHYwZW43MzhJSS9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiTWlrZSIsImZhbWlseV9uYW1lIjoiU2lubiJ9.qzSwaFXvQiPeKRAX4iCN1hbZMnwRucXF_bgHGxvHL_kJVyeOtjxNBXI8OdJsG1JTrO5J7wSRowbIMpaWdfREjxL6mh_J6nCsF7Q6iIOscCUlfvbHs7Qhqo_nutEXJxrObUFUUMVGvGFXvhkql0kawsgr_YVlCFc7iD4zJC9ljyCOjBJbe3rZBvoQwkOk_4shnRKL0OShHezrfQR4uUHR2etNQwMDva3JZzB9kXGndKYZgbQr1221s6Yklza1VSy0BuIFGQOHZsM5ig5EeQ7PQ7EfQ3gIT2O6u1O0rPQ42j7YNqrXZ2OT4ZRE6x0v4r4QEq8qAZkRqqaeNH7ab4pySA\",\n                        \"locale\": \"en-US\",\n                        \"userId\": \"ABwppHHxfsyj2umsF4FaFTEIOzSDJf2jDveTQtBP5CJH-KLJYugjxHPpR_uRxBLovyUADcMpHA\"\n                    },\n                    \"conversation\": {\n                        \"conversationId\": \"1533757655027\",\n                        \"type\": \"NEW\"\n                    },\n                    \"availableSurfaces\": [\n                        {\n                            \"capabilities\": [\n                                {\n                                    \"name\": \"actions.capability.AUDIO_OUTPUT\"\n                                },\n                                {\n                                    \"name\": \"actions.capability.SCREEN_OUTPUT\"\n                                },\n                                {\n                                    \"name\": \"actions.capability.WEB_BROWSER\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"session\": \"projects/dr-modo/agent/sessions/1533757655027\"\n        },\n        lastApiResponse: {\n            \"payload\": {\n                \"google\": {\n                    \"expectUserResponse\": true,\n                    \"richResponse\": {\n                        \"items\": [\n                            {\n                                \"simpleResponse\": {\n                                    \"ssml\": \"<speak> How severe is your stomach cramps on a scale of 1 to 5?<\\/speak>\",\n                                    \"displayText\": \" How severe is your stomach cramps on a scale of 1 to 5?\"\n                                }\n                            }\n                        ]\n                    },\n                    \"systemIntent\": {\n                        \"intent\": \"actions.intent.OPTION\",\n                        \"data\": {\n                            \"@type\": \"type.googleapis.com\\/google.actions.v2.OptionValueSpec\",\n                            \"listSelect\": {\n                                \"title\": \"How severe is your stomach cramps on a scale of 1 to 5?\",\n                                \"items\": [\n                                    {\n                                        \"optionInfo\": {\n                                            \"key\": \"1\\/5-button\",\n                                            \"synonyms\": [\n                                            ]\n                                        },\n                                        \"title\": \"1\\/5\"\n                                    },\n                                    {\n                                        \"optionInfo\": {\n                                            \"key\": \"2\\/5-button\",\n                                            \"synonyms\": [\n                                            ]\n                                        },\n                                        \"title\": \"2\\/5\"\n                                    },\n                                    {\n                                        \"optionInfo\": {\n                                            \"key\": \"3\\/5-button\",\n                                            \"synonyms\": [\n                                            ]\n                                        },\n                                        \"title\": \"3\\/5\"\n                                    },\n                                    {\n                                        \"optionInfo\": {\n                                            \"key\": \"5\\/5-button\",\n                                            \"synonyms\": [\n                                            ]\n                                        },\n                                        \"title\": \"5\\/5\"\n                                    },\n                                    {\n                                        \"optionInfo\": {\n                                            \"key\": \"4\\/5-button\",\n                                            \"synonyms\": [\n                                            ]\n                                        },\n                                        \"title\": \"4\\/5\"\n                                    }\n                                ]\n                            }\n                        }\n                    }\n                }\n            },\n            \"outputContexts\": [\n                {\n                    \"name\": \"projects\\/dr-modo\\/agent\\/sessions\\/1533759866859\\/contexts\\/tracking_reminder_notification\",\n                    \"lifespanCount\": 5,\n                    \"parameters\": {\n                        \"variableName\": \"Stomach Cramps\",\n                        \"trackingReminderNotificationId\": 29901440,\n                        \"unitName\": \"1 to 5 Rating\"\n                    }\n                }\n            ]\n        },\n        postNotificationResponse: function(value, successHandler, errorHandler){\n            if(!qm.dialogFlow.lastApiResponse.outputContexts){\n                qmLog.error(\"No outputContexts!\");\n                return false;\n            }\n            var outputContext = qm.dialogFlow.lastApiResponse.outputContexts[0];\n            if(!outputContext.parameters){\n                qmLog.error(\"No parameters!\");\n                return false;\n            }\n            outputContext.parameters.value = value;\n            qm.dialogFlow.notificationResponseBody.queryResult.outputContexts = [outputContext];\n            qm.dialogFlow.post(qm.dialogFlow.notificationResponseBody, successHandler, errorHandler);\n        },\n        notificationResponseBody: {\n            \"responseId\": \"eec8a67e-114c-4bd8-8026-c6de0154b7e6\",\n            \"queryResult\": {\n                \"queryText\": \"actions_intent_OPTION\",\n                \"action\": \"tracking_reminder_notification\",\n                \"parameters\": {\n                    \"notificationAction\": \"track\",\n                    \"value\": \"\",\n                    \"yesNo\": \"\"\n                },\n                \"allRequiredParamsPresent\": true,\n                \"fulfillmentMessages\": [\n                    {\n                        \"text\": {\n                            \"text\": [\n                                \"\"\n                            ]\n                        }\n                    }\n                ],\n                \"outputContexts\": [\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/google_assistant_input_type_touch\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/actions_intent_option\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"OPTION\": \"1/5-button\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/actions_capability_screen_output\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/actions_capability_audio_output\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/tracking_reminder_notification\",\n                        \"lifespanCount\": 2,\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"variableName\": \"Hand Pain\",\n                            \"unitName\": \"1 to 5 Rating\",\n                            \"trackingReminderNotificationId\": 29901441,\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/actions_capability_media_response_audio\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    },\n                    {\n                        \"name\": \"projects/dr-modo/agent/sessions/1533759866859/contexts/actions_capability_web_browser\",\n                        \"parameters\": {\n                            \"yesNo\": \"\",\n                            \"notificationAction\": \"track\",\n                            \"value.original\": \"\",\n                            \"notificationAction.original\": \"\",\n                            \"value\": \"\",\n                            \"yesNo.original\": \"\"\n                        }\n                    }\n                ],\n                \"intent\": {\n                    \"name\": \"projects/dr-modo/agent/intents/921bbe0e-6f16-490c-b243-1743081bb25d\",\n                    \"displayName\": \"Tracking Reminder Notification Intent\"\n                },\n                \"intentDetectionConfidence\": 1,\n                \"languageCode\": \"en-us\"\n            },\n            \"originalDetectIntentRequest\": {\n                \"source\": \"google\",\n                \"version\": \"2\",\n                \"payload\": {\n                    \"isInSandbox\": true,\n                    \"surface\": {\n                        \"capabilities\": [\n                            {\n                                \"name\": \"actions.capability.MEDIA_RESPONSE_AUDIO\"\n                            },\n                            {\n                                \"name\": \"actions.capability.WEB_BROWSER\"\n                            },\n                            {\n                                \"name\": \"actions.capability.AUDIO_OUTPUT\"\n                            },\n                            {\n                                \"name\": \"actions.capability.SCREEN_OUTPUT\"\n                            }\n                        ]\n                    },\n                    \"requestType\": \"SIMULATOR\",\n                    \"inputs\": [\n                        {\n                            \"rawInputs\": [\n                                {\n                                    \"query\": \"1/5\",\n                                    \"inputType\": \"TOUCH\"\n                                }\n                            ],\n                            \"arguments\": [\n                                {\n                                    \"textValue\": \"1/5-button\",\n                                    \"name\": \"OPTION\"\n                                }\n                            ],\n                            \"intent\": \"actions.intent.OPTION\"\n                        }\n                    ],\n                    \"user\": {\n                        \"lastSeen\": \"2018-08-08T20:22:25Z\",\n                        \"idToken\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjlhMzNiNWVkYjQ5ZDA4NjdhODY3MmQ5NTczYjFlMGQyMzc1ODg2ZTEifQ.eyJhdWQiOiI5MTg3NjEzMjU0OTEtazJ0Y3VkbGg5ZHEyMjdtb2RrMWhnbmlvMDR1aGhvNWQuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCJzdWIiOiIxMTg0NDQ2OTMxODQ4Mjk1NTUzNjIiLCJoZCI6InRoaW5rYnludW1iZXJzLm9yZyIsImVtYWlsIjoibUB0aGlua2J5bnVtYmVycy5vcmciLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZXhwIjoxNTMzNzYzODk5LCJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJqdGkiOiI0NTNhYTgzNDMwOTlmNzRjODMzZjdjY2RkZTA1ODViMjVjN2NjOTkwIiwiaWF0IjoxNTMzNzYwMjk5LCJuYmYiOjE1MzM3NTk5OTksIm5hbWUiOiJNaWtlIFNpbm4iLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDYuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1CSHI0aHlVV3FaVS9BQUFBQUFBQUFBSS9BQUFBQUFBSUcyOC8yTHYwZW43MzhJSS9zOTYtYy9waG90by5qcGciLCJnaXZlbl9uYW1lIjoiTWlrZSIsImZhbWlseV9uYW1lIjoiU2lubiJ9.Tl8oQIoNlou3p2Yy4a2MaxEJMftKn1ovDFfzgV8MkMFoqEGDkoNvGNbmJyDKGfS6B1kZwY7wBNuDTguKEpR9lTE6lj2Q4oQA4BzgLp_tYN8gohijJJDw3knwJ1q_A4KRfy7wBvV5xjI1nF74Q1wkpgDfmU275tjqp-xiuiHVEqMyp0gliCuD8eAZvgX_CpmjPxubqKi6f9mXW5wfp-z-1YfujQ2eT0XCMEOWFWddtr8-_Jm2_z_K_ua5LXHw5bU8S2ym0IqPkF4Kqa6GYJOSWrjmiC_pnBALpD4ME9wNOvTnNkp3ntfKtKE_HLz2v4LqrOPMDu0p0_BLOMqrUxclbg\",\n                        \"locale\": \"en-US\",\n                        \"userId\": \"ABwppHHxfsyj2umsF4FaFTEIOzSDJf2jDveTQtBP5CJH-KLJYugjxHPpR_uRxBLovyUADcMpHA\"\n                    },\n                    \"conversation\": {\n                        \"conversationId\": \"1533759866859\",\n                        \"type\": \"ACTIVE\",\n                        \"conversationToken\": \"[\\\"tracking_reminder_notification\\\"]\"\n                    },\n                    \"availableSurfaces\": [\n                        {\n                            \"capabilities\": [\n                                {\n                                    \"name\": \"actions.capability.WEB_BROWSER\"\n                                },\n                                {\n                                    \"name\": \"actions.capability.AUDIO_OUTPUT\"\n                                },\n                                {\n                                    \"name\": \"actions.capability.SCREEN_OUTPUT\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"session\": \"projects/dr-modo/agent/sessions/1533759866859\"\n        },\n        getEntityFromLastUserStatement: function(entityName){\n            var lastUserStatement = qm.speech.lastUserStatement.toLowerCase();\n            var entries = qm.staticData.dialogAgent.entities[entityName].entries;\n            var words = lastUserStatement.split(\" \");\n            var i, j, word, entry;\n            for (i = 0; i < words.length; i += 1) {\n                word = words[i];\n                for (j = 0; i < entries.length; j += 1) {\n                    entry = entries[i];\n                    if(word === entry.name.toLowerCase()){return entry;}\n                }\n            }\n            for (i = 0; i < words.length; i += 1) {\n                word = words[i];\n                for (j = 0; i < entries.length; j += 1) {\n                    for (var k = 0; k < entry.synonyms; k += 1) {\n                        var synonym = synonyms[i];\n                        if(word === synonym.toLowerCase()){return entry;}\n                    }\n                }\n            }\n            return null;\n        },\n        weHaveRequiredParams: function(intent){\n            var parameters = intent.responses[0].parameters;\n            for (var i = 0; i < parameters.length; i++) {\n                var parameter = parameters[i];\n                var parameterName = parameter.name;\n                if(parameter.required){\n                    var value = qm.speech.currentIntent.parameters[parameterName];\n                    if(value){\n                        continue;\n                    }\n                    value = qm.dialogFlow.getEntityFromLastUserStatement(parameterName);\n                    if(value){\n                        qm.speech.currentIntent.parameters[parameterName] = value;\n                        continue;\n                    }\n                    qm.speech.parameterToGet = parameterName;\n                    qm.speech.talkRobot(parameter.prompts[0].value, function(){\n                        var value = qm.dialogFlow.getEntityFromLastUserStatement(qm.speech.parameterToGet);\n                        qm.speech.currentIntent.parameters[qm.speech.parameterToGet] = value;\n                    });\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n    functionHelper: {\n        getCurrentFunctionNameDoesNotWork: function () {\n            var functionName = arguments.callee.toString();\n            functionName = functionName.substr('function '.length);\n            functionName = functionName.substr(0, functionName.indexOf('('));\n            return functionName;\n        }\n    },\n    geoLocation: {\n        getFoursqureClientId: function () {\n            if(qm.privateConfig && qm.privateConfig.FOURSQUARE_CLIENT_ID){/** @namespace qm.privateConfig.FOURSQUARE_CLIENT_ID */\n                return qm.privateConfig.FOURSQUARE_CLIENT_ID;}\n            if(qm.getAppSettings().privateConfig && qm.getAppSettings().privateConfig.FOURSQUARE_CLIENT_ID){return qm.getAppSettings().privateConfig.FOURSQUARE_CLIENT_ID;}\n            var connector = qm.connectorHelper.getConnectorByName('foursquare');\n            if(connector){return connector.connectorClientId;}\n        },\n        getFoursquareClientSecret: function () {\n            /** @namespace qm.privateConfig.FOURSQUARE_CLIENT_SECRET */\n            if(qm.privateConfig && qm.privateConfig.FOURSQUARE_CLIENT_SECRET){return qm.privateConfig.FOURSQUARE_CLIENT_SECRET;}\n            if(qm.getAppSettings().privateConfig && qm.getAppSettings().privateConfig.FOURSQUARE_CLIENT_SECRET){return qm.getAppSettings().privateConfig.FOURSQUARE_CLIENT_SECRET;}\n            var connector = qm.connectorHelper.getConnectorByName('foursquare');\n            if(connector){/** @namespace connector.connectorClientSecret */\n                return connector.connectorClientSecret;}\n        },\n        getGoogleMapsApiKey: function () {\n            /** @namespace qm.privateConfig.GOOGLE_MAPS_API_KEY */\n            if(qm.privateConfig && qm.privateConfig.GOOGLE_MAPS_API_KEY){return qm.privateConfig.GOOGLE_MAPS_API_KEY;}\n            if(qm.getAppSettings().privateConfig && qm.getAppSettings().privateConfig.GOOGLE_MAPS_API_KEY){return qm.getAppSettings().privateConfig.GOOGLE_MAPS_API_KEY;}\n        }\n    },\n    getAppSettings: function (successHandler) {\n        if(!successHandler){\n            var appSettings = qm.appsManager.getAppSettingsFromMemory();\n            if(appSettings){return appSettings;}\n            //if(qm.staticData.appSettings){return qm.staticData.appSettings;}\n            return null;\n        }\n        qm.appsManager.getAppSettingsLocallyOrFromApi(successHandler);\n    },\n    getClientId: function(successHandler){\n        if(!successHandler){\n            return qm.api.getClientId();\n        } else {\n            qm.api.getClientIdWithCallback(successHandler)\n        }\n    },\n    getPrimaryOutcomeVariable: function(){\n        if(qm.getAppSettings() && qm.getAppSettings().primaryOutcomeVariableDetails){ return qm.getAppSettings().primaryOutcomeVariableDetails;}\n        var variables = {\n            \"Overall Mood\" : {\n                \"id\" : 1398,\n                \"name\" : \"Overall Mood\",\n                \"variableName\": \"Overall Mood\",\n                variableCategoryName : \"Mood\",\n                \"userUnitAbbreviatedName\" : \"/5\",\n                unitAbbreviatedName : \"/5\",\n                \"combinationOperation\": \"MEAN\",\n                \"valence\": \"positive\",\n                \"unitName\": \"1 to 5 Rating\",\n                \"ratingOptionLabels\" : [\"Depressed\", \"Sad\", \"OK\", \"Happy\", \"Ecstatic\"],\n                \"ratingValueToTextConversionDataSet\": {1: \"depressed\", 2: \"sad\", 3: \"ok\", 4: \"happy\", 5: \"ecstatic\"},\n                \"ratingTextToValueConversionDataSet\" : {\"depressed\" : 1, \"sad\" : 2, \"ok\" : 3, \"happy\" : 4, \"ecstatic\": 5},\n                trackingQuestion: \"How are you?\",\n                averageText:\"Your average mood is \"\n            },\n            \"Energy Rating\" : {\n                id : 108092,\n                name : \"Energy Rating\",\n                variableName: \"Energy Rating\",\n                variableCategoryName : \"Emotions\",\n                unitAbbreviatedName : \"/5\",\n                combinationOperation: \"MEAN\",\n                positiveOrNegative: 'positive',\n                unitName: '1 to 5 Rating',\n                ratingOptionLabels : ['1', '2', '3', '4', '5'],\n                ratingValueToTextConversionDataSet: {1: \"1\", 2: \"2\", 3: \"3\", 4: \"4\", 5: \"5\"},\n                ratingTextToValueConversionDataSet : {\"1\" : 1, \"2\" : 2, \"3\" : 3, \"4\" : 4, \"5\" : 5},\n                trackingQuestion:\"How is your energy level right now?\",\n                averageText:\"Your average energy level is \"\n            }\n        };\n        if(qm.getAppSettings() && qm.getAppSettings().primaryOutcomeVariableName){return variables[qm.getAppSettings().primaryOutcomeVariableName];}\n        return variables['Overall Mood'];\n    },\n    getPrimaryOutcomeVariableByNumber: function(num){\n        return qm.getPrimaryOutcomeVariable().ratingValueToTextConversionDataSet[num] ? qm.getPrimaryOutcomeVariable().ratingValueToTextConversionDataSet[num] : false;\n    },\n    getSourceName: function(){return qm.appsManager.getAppSettingsFromMemory().appDisplayName + \" for \" + qm.platform.getCurrentPlatform();},\n    getUser: function(successHandler, errorHandler){\n        if(!successHandler){\n            return qm.userHelper.getUserFromLocalStorage();\n        }\n        qm.userHelper.getUserFromLocalStorageOrApi(successHandler, errorHandler);\n    },\n    globalHelper: {\n        setStudy: function(study){\n            if(study.studyId){\n                qm.storage.setGlobal(study.studyId, study);\n                return;\n            }\n            if(!study.causeVariable){\n                qmLog.error(\"No cause variable in this study: \", study, study);\n                return;\n            }\n            var causeVariableName = study.causeVariableName || study.causeVariable.name;\n            var effectVariableName = study.effectVariableName || study.effectVariable.name;\n            qm.storage.setGlobal(qm.stringHelper.removeSpecialCharacters(causeVariableName+\"_\"+effectVariableName), study);\n        },\n        getStudy: function(params){\n            if(params.studyId){return qm.storage.getGlobal(params.studyId);}\n            var study = qm.storage.getGlobal(qm.stringHelper.removeSpecialCharacters(params.causeVariableName+\"_\"+params.effectVariableName));\n            return study;\n        },\n        setItem: function(key, value){\n            if(!qm.storage.valueIsValid(value)){return false;}\n            qm.storage.setGlobal(key, value);\n        },\n        getItem: function(key){\n            return qm.storage.getGlobal(key);\n        },\n        removeItem: function(key){\n            qmLog.debug(\"Removing \" + key + \" from globals\");\n            delete qm.globals[key];\n        }\n    },\n    globals: {},\n    help: {\n        getExplanations: function(){\n            var explanations = {\n                predictorSearch: {\n                    title: \"Select Predictor\",\n                    textContent: \"Search for a predictor like a food or treatment that you want to know the effects of...\"\n                },\n                outcomeSearch: {\n                    title: \"Select Outcome\",\n                    textContent: \"Select an outcome variable to be optimized like overall mood or sleep quality...\"\n                },\n                locationAndWeatherTracking: {\n                    title: \"Location and Weather Tracking\",\n                    textContent: qm.variableCategoryHelper.getVariableCategory('Location').moreInfo\n                },\n                minimumAllowedValue: {\n                    title: \"Minimum Allowed Value\",\n                    textContent:\"The minimum allowed value for measurements. While you can record a value below this minimum, it will be excluded from the correlation analysis.\",\n                },\n                maximumAllowedValue: {\n                    title: \"Maximum Allowed Value\",\n                    textContent:\"The maximum allowed value for measurements.  While you can record a value above this maximum, it will be excluded from the correlation analysis.\",\n                },\n                onsetDelayInHours: {\n                    title: \"Onset Delay\",\n                    unitName: \"Hours\",\n                    textContent:\"An outcome is always preceded by the predictor or stimulus. The amount of time that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”.  For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.\",\n                },\n                onsetDelay: {\n                    title: \"Onset Delay\",\n                    unitName: \"Seconds\",\n                    textContent:\"An outcome is always preceded by the predictor or stimulus. The amount of time that elapses after the predictor/stimulus event before the outcome as perceived by a self-tracker is known as the “onset delay”.  For example, the “onset delay” between the time a person takes an aspirin (predictor/stimulus event) and the time a person perceives a change in their headache severity (outcome) is approximately 30 minutes.\",\n                },\n                durationOfActionInHours: {\n                    title: \"Duration of Action\",\n                    unitName: \"Hours\",\n                    textContent:\"The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin typically decreases headache severity for approximately four hours (duration of action) following the onset delay.\",\n                },\n                durationOfAction: {\n                    title: \"Duration of Action\",\n                    unitName: \"Seconds\",\n                    textContent:\"The amount of time over which a predictor/stimulus event can exert an observable influence on an outcome variable’s value. For instance, aspirin typically decreases headache severity for approximately four hours (duration of action) following the onset delay.\",\n                },\n                fillingValue: {\n                    title: \"Filling Value\",\n                    textContent:\"When it comes to analysis to determine the effects of this variable, knowing when it did not occur is as important as knowing when it did occur. For example, if you are tracking a medication, it is important to know when you did not take it, but you do not have to log zero values for all the days when you haven't taken it. Hence, you can specify a filling value (typically 0) to insert whenever data is missing.\",\n                },\n                combinationOperation: {\n                    title: \"Combination Method\",\n                    textContent:\"How multiple measurements are combined over time.  We use the average (or mean) for things like your weight.  Summing is used for things like number of apples eaten.\",\n                },\n                defaultValue: {\n                    title: \"Default Value\",\n                    textContent:\"If specified, there will be a button that allows you to quickly record this value.\",\n                },\n                experimentStartTime: {\n                    title: \"Analysis Start Date\",\n                    textContent:\"Data prior to this date will not be used in analysis.\",\n                },\n                experimentEndTime: {\n                    title: \"Analysis End Date\",\n                    textContent:\"Data after this date will not be used in analysis.\",\n                },\n                thumbs: {\n                    title: \"Help Me Learn\",\n                    textContent:\"I'm really good at finding correlations and even compensating for various onset delays and durations of action. \" +\n                    \"However, you're much better than me at knowing if there's a way that a given factor could plausibly influence an outcome. \" +\n                    \"You can help me learn and get better at my predictions by pressing the thumbs down button for relationships that you don't think could possibly be causal.\",\n                }\n            };\n            return explanations;\n        },\n        getExplanation : function(parameterOrPropertyName, modelName, callback) {\n            var explanations = qm.help.getExplanations();\n            if(explanations[parameterOrPropertyName]){\n                return callback(explanations[parameterOrPropertyName]);\n            }\n            if(modelName){\n                qm.apiHelper.getPropertyDescription(modelName, parameterOrPropertyName, callback)\n            } else {\n                qm.apiHelper.getParameterDescription(parameterOrPropertyName, callback)\n            }\n        }\n    },\n    integration: {\n        getIntegrationJsWithoutClientId: function(clientId, callback){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.ConnectorsApi();\n            apiInstance.getIntegrationJs({clientId: 'CLIENT_ID'}, function (error, data, response) {\n                if(data){\n                    qm.integration.integrationJs = data;\n                    if(clientId && callback){\n                        callback(qm.integration.integrationJs.replace('CLIENT_ID', clientId));\n                    }\n                }\n                qm.api.responseHandler(error, data, response);\n            });\n        },\n        getIntegrationJsEmbedCodeForClient: function(clientId, callback){\n            if(qm.integration.integrationJs){\n                return callback(qm.integration.integrationJs.replace('CLIENT_ID', clientId));\n            }\n            qm.integration.getIntegrationJsWithoutClientId(clientId, callback);\n        }\n    },\n    items: {\n        accessToken: 'accessToken',\n        afterLoginGoToUrl: 'afterLoginGoToUrl',\n        afterLoginGoToState: 'afterLoginGoToState',\n        appList: 'appList',\n        aggregatedCorrelations: 'aggregatedCorrelations',\n        apiUrl: 'apiUrl',\n        appSettings: 'appSettings',\n        appSettingsRevisions: 'appSettingsRevisions',\n        authorizedClients: 'authorizedClients',\n        builderClientId: 'builderClientId',\n        chromeWindowId: 'chromeWindowId',\n        clientId: 'clientId',\n        commonVariables: 'commonVariables',\n        connectors: 'connectors',\n        defaultHelpCards: 'defaultHelpCards',\n        deviceTokenOnServer: 'deviceTokenOnServer',\n        deviceTokenToSync: 'deviceTokenToSync',\n        drawOverAppsPopupEnabled: 'drawOverAppsPopupEnabled',\n        expiresAtMilliseconds: 'expiresAtMilliseconds',\n        hideImportHelpCard: 'hideImportHelpCard',\n        introSeen: 'introSeen',\n        lastGotNotificationsAtMilliseconds: 'lastGotNotificationsAtMilliseconds',\n        lastLocalNotificationTime: 'lastLocalNotificationTime',\n        lastLatitude: 'lastLatitude',\n        lastLocationAddress: 'lastLocationAddress',\n        lastLocationName: 'lastLocationName',\n        lastLocationNameAndAddress: 'lastLocationNameAndAddress',\n        lastLocationPostUnixTime: 'lastLocationPostUnixTime',\n        lastLocationResultType: 'lastLocationResultType',\n        lastLocationUpdateTimeEpochSeconds: 'lastLocationUpdateTimeEpochSeconds',\n        lastLongitude: 'lastLongitude',\n        lastReminder: 'lastReminder',\n        lastStudy: 'lastStudy',\n        lastPopupNotificationUnixTimeSeconds: 'lastPopupNotificationUnixTimeSeconds',\n        lastPushTimestamp: 'lastPushTimestamp',\n        lastPushData: 'lastPushData',\n        logLevel: 'logLevel',\n        measurementsQueue: 'measurementsQueue',\n        mostFrequentReminderIntervalInSeconds: 'mostFrequentReminderIntervalInSeconds',\n        microphoneEnabled: 'microphoneEnabled',\n        microphoneAvailable: 'microphoneAvailable',\n        notificationInterval: 'notificationInterval',\n        notificationsSyncQueue: 'notificationsSyncQueue',\n        onboarded: 'onboarded',\n        physicianUser: 'physicianUser',\n        privateConfig: 'privateConfig',\n        primaryOutcomeVariableMeasurements: 'primaryOutcomeVariableMeasurements',\n        refreshToken: 'refreshToken',\n        scheduledLocalNotifications: 'scheduledLocalNotifications',\n        speechEnabled: 'speechEnabled',\n        speechAvailable: 'speechAvailable',\n        studiesCreated: 'studiesCreated',\n        studiesJoined: 'studiesJoined',\n        trackingReminderNotifications: 'trackingReminderNotifications',\n        trackingReminderNotificationSyncScheduled: 'trackingReminderNotificationSyncScheduled',\n        trackingReminders: 'trackingReminders',\n        trackingReminderSyncQueue: 'trackingReminderSyncQueue',\n        units: 'units',\n        user: 'user',\n        useSmallInbox: 'useSmallInbox',\n        userCorrelations: 'userCorrelations',\n        userVariables: 'userVariables',\n        variableCategories: 'variableCategories'\n    },\n    loaders: {\n        robots: function(){\n            var tm = new TimelineMax({repeat:-1,repeatDelay:2})\n            //.to('#redBot',2,{x:500,ease:Power3.easeInOut},'+=2')\n                .fromTo('#blueBot',2,{x:0},{x:0,ease:Power3.easeInOut},'-=1.5')\n                //.to('body',2,{backgroundColor:'#FFDC6D'},'-=2')\n                .to('#blueBot',2,{x:0,onStart:newBot,ease:Power3.easeInOut},'+=2')\n            function newBot(){\n                TweenMax.fromTo('#redBot',2,{x:-1000},{x:0,delay:.65,ease:Power3.easeInOut})\n                TweenMax.to('body',2,{backgroundColor:'#ADBD90',delay:.65})\n            }\n// /////////////////////////////////////////////////////////////\n            var sig = new TimelineMax({repeat:-1})\n            sig.fromTo('#redBotSignal', .5,{drawSVG:\"0% 15%\",ease:Linear.easeInOut},{drawSVG:\"85% 100%\",ease:Linear.easeInOut})\n                .fromTo('#redBotSignal', .5,{drawSVG:\"85% 100%\",ease:Linear.easeInOut},{drawSVG:\"0% 15%\",ease:Linear.easeInOut})\n            var bolt = new TweenMax.to(['#bolt','#leftEar','#rightEar','#nose'],.5,{opacity:.25,onComplete:function(){bolt.reverse()},onReverseComplete:function(){bolt.play()}})\n            var rhb = new TweenMax.to('#redHeart',.5,{scale:1.1,transformOrigin:'50% 50%',ease:Power2.easeInOut,onComplete:function(){rhb.reverse()},onReverseComplete:function(){rhb.play()}})\n            var sra= new TweenMax.to('#redRightArm',.5,{rotation:-3,ease:Linear.easeInOut,transformOrigin:'45% 25%',onComplete:function(){sra.reverse()},onReverseComplete:function(){sra.play()}})\n            var sla= new TweenMax.to('#redLeftArm',.5,{rotation:3,ease:Linear.easeInOut,transformOrigin:'25% 25%',onComplete:function(){sla.reverse()},onReverseComplete:function(){sla.play()}})\n            var redhead = new TweenMax.to('#redHead',1,{y:5,ease:Power2.easeInOut,onComplete:function(){redhead.reverse()},onReverseComplete:function(){redhead.play()}})\n// ////////////////////////////////////////////////////\n            var lights1 = new TweenMax.staggerFromTo(['#light3','#light6'],.5,{fill:'#fff'},{fill:'#398080',repeat:-1},0.2)\n            var lights2 = new TweenMax.staggerFromTo(['#light2','#light5'],.5,{fill:'#398080'},{fill:'#E20717',repeat:-1},0.2)\n            var lights3 = new TweenMax.staggerFromTo(['#light1','#light4'],.5,{fill:'#E20717'},{fill:'#fffff',repeat:-1},0.2)\n            var eeg = new TweenMax.fromTo('#pulse',2,{drawSVG:\"0%\",ease:Linear.easeInOut},{drawSVG:\"100%\",ease:Linear.easeInOut,repeat:-1})\n            var static_RENAMED_BECAUSE_RESERVED = new TweenMax.fromTo('#blueBotStatic',.75,{ease:Power1.easeInOut,opacity:0},{ease:Power1.easeInOut,opacity:1,repeat:-1})\n            var blueBotRArm= new TweenMax.to('#blueBotRightArm',.5,{rotation:-3,y:2,ease:Linear.easeInOut,transformOrigin:'65% 100%',onComplete:function(){blueBotRArm.reverse()},onReverseComplete:function(){blueBotRArm.play()}})\n            var blueBotLArm= new TweenMax.to('#blueBotLeftArm',.5,{rotation:3,y:2,ease:Linear.easeInOut,transformOrigin:'100% 65%',onComplete:function(){blueBotLArm.reverse()},onReverseComplete:function(){blueBotLArm.play()}})\n            var dial = new TweenMax.to('#dial',.5,{rotation:30,ease:Linear.easeInOut,transformOrigin:'50% 100%',onComplete:function(){dial.reverse()},onReverseComplete:function(){dial.play()}})\n            var blueBotBody = new TweenMax.to('#blueBotBody',.5,{y:2,ease:Sine.easeInOut,onComplete:function(){blueBotBody.reverse()},onReverseComplete:function(){blueBotBody.play()}})\n            var blueBotHead = new TweenMax.to('#blueBotHead',.5,{y:-2,ease:Sine.easeInOut,onComplete:function(){blueBotHead.reverse()},onReverseComplete:function(){blueBotHead.play()}})\n            var mouthBars = new TweenMax.staggerFromTo('#mouthBars rect',.5,{fill:'#398080'},{fill:'#fffff',repeat:-1},0.2)\n            var eyes = new TweenMax.to('#blueBotEyes',.5,{scale:1.1,transformOrigin:'50% 50%',ease:Sine.easeInOut,onComplete:function(){eyes.reverse()},onReverseComplete:function(){eyes.play()}})\n        }\n    },\n    localForage: {\n        clear: function () {\n            qmLog.info(\"Clearing localforage!\");\n            localforage.clear();\n        },\n        saveWithUniqueId: function(key, arrayToSave) {\n            if(!qm.arrayHelper.variableIsArray(arrayToSave)){\n                arrayToSave = [arrayToSave];\n            }\n            qmLog.info(\"saving \" + key + \" with unique id\");\n            qm.localForage.getItem(key, function(existingData) {\n                if(!existingData){existingData = [];}\n                for (var i = 0; i < arrayToSave.length; i++) {\n                    var newObjectToSave = arrayToSave[i];\n                    var existingObjectToReplace = existingData.find(function( obj ) {\n                        return obj.id === newObjectToSave.id;\n                    });\n                    if(existingObjectToReplace && existingObjectToReplace.lastSelectedAt){\n                        newObjectToSave.lastSelectedAt = existingObjectToReplace.lastSelectedAt;\n                    }\n                    existingData = existingData.filter(function( obj ) {\n                        return obj.id !== newObjectToSave.id;\n                    });\n                    existingData.unshift(newObjectToSave);\n                }\n                qm.localForage.setItem(key, existingData);\n            });\n        },\n        deleteById: function(key, id) {\n            qmLog.info(\"deleting \" + key + \" by id \" + id);\n            qm.localForage.getItem(key, function(existingData) {\n                if(!existingData){existingData = [];}\n                existingData = existingData.filter(function( obj ) {\n                    return obj.id !== id;\n                });\n                qm.localForage.setItem(key, existingData);\n            });\n        },\n        searchByProperty: function (key, propertyName, searchTerm, successHandler, errorHandler) {\n            searchTerm = searchTerm.toLowerCase();\n            qmLog.info(\"searching \" + key + \" by \" + propertyName + \" \" + searchTerm);\n            qm.localForage.getItem(key, function(existingData) {\n                if(!existingData){existingData = [];}\n                existingData = existingData.filter(function( obj ) {\n                    var currentValue = obj[propertyName].toLowerCase();\n                    return currentValue.indexOf(searchTerm) !== -1;\n                });\n                successHandler(existingData);\n            }, errorHandler);\n        },\n        getItem: function(key, successHandler, errorHandler){\n            if(!successHandler){\n                qmLog.error(\"No successHandler provided to localForage.getItem!\");\n                return;\n            }\n            qmLog.debug(\"Getting \" + key + \" from globals\");\n            var fromGlobals = qm.globalHelper.getItem(key);\n            if(fromGlobals || fromGlobals === false || fromGlobals === 0){\n                successHandler(fromGlobals);\n                return\n            }\n            if(typeof localforage === \"undefined\"){\n                var error = \"localforage not defined so can't get \" + key + \"!\";\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n                return;\n            }\n            qmLog.debug(\"Getting \" + key + \" from localforage\");\n            localforage.getItem(key, function (err, data) {\n                if(err){\n                    if(errorHandler){errorHandler(err);}\n                } else {\n                    successHandler(data);\n                }\n            })\n        },\n        setItem: function(key, value, successHandler, errorHandler){\n            if(!qm.storage.valueIsValid(value)){return false;}\n            value = JSON.parse(JSON.stringify(value)); // Failed to execute 'put' on 'IDBObjectStore': could not be cloned.\n            qm.globalHelper.setItem(key, value);\n            if(typeof localforage === \"undefined\"){\n                var errorMessage = \"local storage is undefined so can't set \" + key;\n                qmLog.error(errorMessage);\n                if(errorHandler){errorHandler(errorMessage)};\n                return;\n            }\n            if(!qm.storage.valueIsValid(value)){return false;}\n            localforage.setItem(key, value, function (err) {\n                if(err){\n                    if(errorHandler){errorHandler(err);}\n                } else {\n                    if(successHandler){successHandler();}\n                }\n            })\n        },\n        removeItem: function(key, value, successHandler, errorHandler){\n            qm.globalHelper.removeItem(key);\n            localforage.removeItem(key, function (err) {\n                if(err){\n                    if(errorHandler){errorHandler(err);}\n                } else {\n                    if(successHandler){successHandler();}\n                }\n            })\n        },\n        getWithFilters: function(localStorageItemName, successHandler, errorHandler, filterPropertyName, filterPropertyValue,\n                                 lessThanPropertyName, lessThanPropertyValue,\n                                 greaterThanPropertyName, greaterThanPropertyValue) {\n            qm.localForage.getItem(localStorageItemName, function(data){\n                data = qm.arrayHelper.filterByPropertyOrSize(data, filterPropertyName, filterPropertyValue,\n                    lessThanPropertyName, lessThanPropertyValue, greaterThanPropertyName, greaterThanPropertyValue);\n                successHandler(data);\n            }, function (error) {\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getElementsWithRequestParams: function(localStorageItemName, requestParams, successHandler, errorHandler) {\n            qm.localForage.getItem(localStorageItemName, function (data) {\n                data = qm.arrayHelper.filterByRequestParams(data, requestParams);\n                successHandler(data);\n            }, function (error) {\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        addToOrReplaceByIdAndMoveToFront: function(localStorageItemName, replacementElementArray, successHandler){\n            qmLog.debug('qm.localForage.addToOrReplaceByIdAndMoveToFront in ' + localStorageItemName + ': ' +\n                JSON.stringify(replacementElementArray).substring(0,20)+'...');\n            // Have to stringify/parse to create cloned variable or it adds all stored reminders to the array to be posted\n            qm.localForage.getItem(localStorageItemName, function(localStorageItemArray){\n                var elementsToKeep = qm.arrayHelper.addToOrReplaceByIdAndMoveToFront(localStorageItemArray, replacementElementArray);\n                qm.localForage.setItem(localStorageItemName, elementsToKeep);\n                if(successHandler){successHandler(elementsToKeep);}\n            });\n        }\n    },\n    measurements: {\n        getMeasurementsFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            var cachedData = qm.api.cacheGet(params, 'getMeasurementsFromApi');\n            if(cachedData && successHandler){\n                //successHandler(cachedData);\n                //return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.MeasurementsApi();\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getMeasurementsFromApi');\n            }\n            apiInstance.getMeasurements(params, callback);\n        },\n        addLocationDataToMeasurement: function (measurementObject) {\n            if(!measurementObject.latitude){measurementObject.latitude = qm.storage.getItem(qm.items.lastLatitude);}\n            if(!measurementObject.longitude){measurementObject.longitude = qm.storage.getItem(qm.items.lastLongitude);}\n            if(!measurementObject.location){measurementObject.location = qm.storage.getItem(qm.items.lastLocationNameAndAddress);}\n            return measurementObject;\n        },\n        addLocationAndSourceDataToMeasurement: function(measurementObject){\n            qm.measurements.addLocationDataToMeasurement(measurementObject);\n            if(!measurementObject.sourceName){measurementObject.sourceName = qm.getSourceName();}\n            return measurementObject;\n        },\n        addToMeasurementsQueue: function(measurementObject){\n            qmLog.info(\"Adding to measurements queue: \", measurementObject);\n            measurementObject = qm.measurements.addLocationAndSourceDataToMeasurement(measurementObject);\n            qm.storage.appendToArray('measurementsQueue', measurementObject);\n        },\n        updateMeasurementInQueue: function(measurementInfo) {\n            var measurementsQueue = qm.storage.getItem(qm.items.measurementsQueue);\n            var i = 0;\n            while (i < measurementsQueue.length) {\n                if (measurementsQueue[i].startTimeEpoch === measurementInfo.prevStartTimeEpoch) {\n                    measurementsQueue[i].startTimeEpoch = measurementInfo.startTimeEpoch;\n                    measurementsQueue[i].value = measurementInfo.value;\n                    measurementsQueue[i].note = measurementInfo.note;\n                    qmLog.info(\"Updating measurement in queue: \", measurementInfo);\n                    break;\n                }\n                i++;\n            }\n            qm.storage.setItem(qm.items.measurementsQueue, measurementsQueue);\n        },\n        getMeasurementsFromQueue: function(params){\n            var measurements = qm.storage.getElementsWithRequestParams(qm.items.measurementsQueue, params);\n            var count = 0;\n            if(measurements){\n                count = measurements.length;\n                measurements = qm.measurements.addInfoAndImagesToMeasurements(measurements);\n            }\n            qmLog.info(\"Got \"+count +\" measurements from queue with params: \"+JSON.stringify(params), measurements);\n            return measurements;\n        },\n        addInfoAndImagesToMeasurements:  function (measurements){\n            function parseJsonIfPossible(str) {\n                var object = false;\n                try {\n                    object = JSON.parse(str);\n                } catch (e) {\n                    return false;\n                }\n                return object;\n            }\n            var ratingInfo = qm.ratingImages.getRatingInfo();\n            var index;\n            for (index = 0; index < measurements.length; ++index) {\n                var parsedNote =  parseJsonIfPossible(measurements[index].note);\n                if(parsedNote){\n                    if(parsedNote.url && parsedNote.message){\n                        measurements[index].note = '<a href=\"' + parsedNote.url + '\" target=\"_blank\">' + parsedNote.message + '</a>';\n                    } else {\n                        qmLog.error(\"Unrecognized note format\", \"Could not properly format JSON note\", {note: measurements[index].note});\n                    }\n                }\n                if(!measurements[index].variableName){measurements[index].variableName = measurements[index].variable;}\n                if(measurements[index].variableName === qm.getPrimaryOutcomeVariable().name){\n                    measurements[index].valence = qm.getPrimaryOutcomeVariable().valence;\n                }\n                if (measurements[index].unitAbbreviatedName === '/5') {measurements[index].roundedValue = Math.round(measurements[index].value);}\n                if(measurements[index].displayValueAndUnitString){\n                    measurements[index].valueUnitVariableName = measurements[index].displayValueAndUnitString + \" \" + measurements[index].variableName;\n                } else {\n                    measurements[index].valueUnitVariableName = measurements[index].value +\" \" +measurements[index].unitAbbreviatedName + \" \" + measurements[index].variableName;\n                }\n                //measurements[index].valueUnitVariableName = qm.stringHelper.formatValueUnitDisplayText(measurements[index].valueUnitVariableName, measurements[index].unitAbbreviatedName);\n                //if (measurements[index].unitAbbreviatedName === '%') { measurements[index].roundedValue = Math.round(measurements[index].value / 25 + 1); }\n                if (measurements[index].roundedValue && measurements[index].valence === 'positive' && ratingInfo[measurements[index].roundedValue]) {\n                    measurements[index].image = measurements[index].image = ratingInfo[measurements[index].roundedValue].positiveImage;\n                }\n                if (measurements[index].roundedValue && measurements[index].valence === 'negative' && ratingInfo[measurements[index].roundedValue]) {\n                    measurements[index].image = ratingInfo[measurements[index].roundedValue].negativeImage;\n                }\n                if (!measurements[index].image && measurements[index].roundedValue && ratingInfo[measurements[index].roundedValue]) {\n                    measurements[index].image = ratingInfo[measurements[index].roundedValue].numericImage;\n                }\n                if(measurements[index].image){ measurements[index].pngPath = measurements[index].image; }\n                measurements[index].icon = measurements[index].icon || measurements[index].ionIcon;\n                if (measurements[index].variableCategoryName && !measurements[index].icon){\n                    var category = qm.variableCategoryHelper.getVariableCategory(measurements[index].variableCategoryName);\n                    measurements[index].icon = category.ionIcon;\n                    measurements[index].pngPath = category.pngPath;\n                }\n            }\n            return measurements;\n        },\n        recentlyPostedMeasurements: [],\n        getRecentlyPostedMeasurements: function(params){\n            var measurements = qm.arrayHelper.filterByRequestParams(qm.measurements.recentlyPostedMeasurements, params);\n            var count = 0;\n            if(measurements){\n                count = measurements.length;\n                measurements = qm.measurements.addInfoAndImagesToMeasurements(measurements);\n            }\n            qmLog.info(\"Got \"+count +\" measurements from recentlyPostedMeasurements with params: \"+JSON.stringify(params), measurements);\n            return measurements;\n        },\n    },\n    manualTrackingVariableCategoryNames: [\n        'Emotions',\n        'Symptoms',\n        'Treatments',\n        'Foods',\n        'Vital Signs',\n        'Physical Activity',\n        'Sleep',\n        'Miscellaneous',\n        'Environment'\n    ],\n    microphone: {\n        microphoneAvailable: null,\n        getMicrophoneEnabled: function(){\n            if(!qm.microphone.getMicrophoneAvailable()){return qm.microphone.setMicrophoneEnabled(false);}\n            return qm.storage.getItem(qm.items.microphoneEnabled);\n        },\n        setMicrophoneEnabled: function(value){\n            qmLog.info(\"set microphoneEnabled \" + value);\n            qm.rootScope[qm.items.microphoneEnabled] = value;\n            if(!value){qm.microphone.turnOff();}\n            return qm.storage.setItem(qm.items.microphoneEnabled, value);\n        },\n        getMicrophoneAvailable: function(){\n            if(qm.microphone.microphoneAvailable !== null){return qm.microphone.microphoneAvailable;}\n            if(typeof annyang === \"undefined\"){\n                if(!qm.appMode.isTesting()){qmLog.error(\"Microphone not available!\");}\n                return qm.microphone.microphoneAvailable = qm.microphone.microphoneEnabled = false;\n            }\n            return qm.microphone.microphoneAvailable = true;\n        },\n        turnOff: function(){\n            if (!window.streamReference) return;\n            window.streamReference.getAudioTracks().forEach(function(track) {\n                track.stop();\n            });\n            window.streamReference.getVideoTracks().forEach(function(track) {\n                track.stop();\n            });\n            window.streamReference = null;\n        },\n        toggleListening: function(){\n            if(qm.microphone.listening){\n                qm.microphone.pauseListening();\n            } else {\n                qm.microphone.resumeListening();\n            }\n            return qm.microphone.listening = !qm.microphone.listening;\n        },\n        listening: false,\n        abortListening: function(){\n            qm.visualizer.hideVisualizer();\n            qmLog.info(\"pauseListening\");\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.abort(); // Stop listening, and turn off mic.\n        },\n        annyangAvailable: function(){\n            if(!annyang){\n                qmLog.error(\"annyang not available!\");\n                return false;\n            }\n            return true;\n        },\n        pauseListening: function(hideVisualizer){\n            if(hideVisualizer !== false){qm.visualizer.hideVisualizer();}\n            qmLog.info(\"pauseListening\");\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.pause(); // Pause listening. annyang will stop responding to commands (until the resume or start methods are called), without turning off the browser's SpeechRecognition engine or the mic.\n        },\n        resumeListening: function(){\n            qm.visualizer.show();\n            qmLog.info(\"resumeListening\");\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.resume(); // Resumes listening and restores command callback execution when a result matches. If SpeechRecognition was aborted (stopped), start it.\n        },\n        startListening: function(commands){\n            qmLog.info(\"startListening\");\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.start({ // Start listening. It's a good idea to call this after adding some commands first, but not mandatory.\n                autoRestart: true, // Should annyang restart itself if it is closed indirectly, because of silence or window conflicts?\n                continuous: true,  // Allow forcing continuous mode on or off. Annyang is pretty smart about this, so only set this if you know what you're doing.\n                paused: false // Start annyang in paused mode.\n            });\n            if(commands){annyang.addCommands(commands);}\n            qm.visualizer.show();\n        },\n        listenForNotificationResponse: function(successHandler, errorHandler){\n            qm.microphone.initializeListening(qm.speech.reminderNotificationCommands, successHandler, errorHandler);\n        },\n        debugListening: function(){\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.debug(); // Turn on output of debug messages to the console. Ugly, but super-handy!\n        },\n        setLanguage: function(language){\n            if(!qm.microphone.annyangAvailable()){return;}\n            annyang.setLanguage(language); // Set the language the user will speak in. If this method is not called, defaults to 'en-US'.\n        },\n        specificErrorHandler: function(message){\n            qmLog.error(message);\n        },\n        generalErrorHandler: function(message, meta){\n            if(qm.microphone.errorHandler){qm.microphone.errorHandler(message);}\n            qmLog.error(message, meta);\n        },\n        initializeListening: function(commands, successHandler, errorHandler){\n            qm.microphone.successHandler = successHandler;\n            qm.microphone.specificErrorHandler = errorHandler;\n            qm.microphone.debugListening();\n            qm.visualizer.visualizeVoice();\n            annyang.addCommands(commands); // Add our commands to annyang\n            qm.microphone.startListening();\n            annyang.addCallback('start', function() {\n                qmLog.info('browser\\'s Speech Recognition engine started listening');\n            });\n            annyang.addCallback('soundstart', function() {\n                qmLog.info('sound detected');\n            });\n            annyang.addCallback('error', function(error) {\n                qmLog.info(\"Speech Recognition failed because of an error\", error);\n            });\n            annyang.addCallback('errorNetwork', function(error){  // pass local context to a global function called notConnected\n                qm.microphone.generalErrorHandler(\"Speech Recognition failed because of a network error\", error);\n            }, this);\n            annyang.addCallback('errorPermissionBlocked', function(error){\n                qm.microphone.generalErrorHandler(\"browser blocked the permission request to use Speech Recognition\", error);\n            });\n            annyang.addCallback('errorPermissionDenied', function(error){\n                qm.microphone.generalErrorHandler(\"user blocked the permission request to use Speech Recognition\", error);\n            });\n            annyang.addCallback('end', function(error){\n                qmLog.info(\"browser's Speech Recognition engine stopped\", error);\n            });\n            annyang.addCallback('resultMatch', function(userSaid, commandText, phrases) {\n                qmLog.info(\"resultMatch userSaid:\" + userSaid); // sample output: 'hello'\n                qmLog.info(\"resultMatch commandText:\" + commandText); // sample output: 'hello (there)'\n                qmLog.info(\"resultMatch phrases\", phrases); // sample output: ['hello', 'halo', 'yellow', 'polo', 'hello kitty']\n            });\n            annyang.addCallback('resultNoMatch', function(possiblePhrasesArray) {\n                qm.microphone.generalErrorHandler(\"Speech Recognition failed to find a match for this command! possiblePhrasesArray: \", possiblePhrasesArray);\n            });\n            annyang.addCallback('resultNoMatch', function(possiblePhrasesArray) {\n                qm.microphone.generalErrorHandler(\"Speech Recognition failed to find a match for this command! possiblePhrasesArray: \", possiblePhrasesArray);\n            });\n        },\n    },\n    music: {\n        player: null,\n        status: 'pause',\n        play: function(){\n            if(!qm.speech.getSpeechEnabled()){return;}\n            if(qm.music.status === 'play') return false;\n            qm.music.player = new Audio('sound/air-of-another-planet-full.mp3');\n            qm.music.player.volume = 0.25;\n            qm.music.player.play();\n            qm.music.status = 'play';\n            return qm.music.player;\n        },\n        fadeIn: function(){\n            if(qm.music.status === 'play') return false;\n            var actualVolume = 0;\n            qm.music.player.play();\n            qm.music.status = 'play';\n            var fadeInInterval = setInterval(function(){\n                actualVolume = (parseFloat(actualVolume) + 0.1).toFixed(1);\n                if(actualVolume <= 1){\n                    qm.music.player.volume = actualVolume;\n                } else {\n                    clearInterval(fadeInInterval);\n                }\n            }, 100);\n        },\n        fadeOut: function(){\n            if(qm.music.status !== 'play') return false;\n            var actualVolume = qm.music.player.volume;\n            var fadeOutInterval = setInterval(function(){\n                actualVolume = (parseFloat(actualVolume) - 0.1).toFixed(1);\n                if(actualVolume >= 0){\n                    qm.music.player.volume = actualVolume;\n                } else {\n                    qm.music.player.pause();\n                    qm.music.status = 'pause';\n                    clearInterval(fadeOutInterval);\n                }\n            }, 100);\n        }\n    },\n    notifications: {\n        actions: {\n            trackYesAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 1};\n                qmLog.pushDebug('trackYesAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackNoAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 0};\n                qmLog.pushDebug('trackNoAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackZeroAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 0};\n                qmLog.pushDebug('trackZeroAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackOneRatingAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 1};\n                qmLog.pushDebug('trackOneRatingAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackTwoRatingAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 2};\n                qmLog.pushDebug('trackTwoRatingAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackThreeRatingAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 3};\n                qmLog.pushDebug('trackThreeRatingAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackFourRatingAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 4};\n                qmLog.pushDebug('trackFourRatingAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackFiveRatingAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: 5};\n                qmLog.pushDebug('trackDefaultValueAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackDefaultValueAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId};\n                qmLog.pushDebug('trackDefaultValueAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            snoozeAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId};\n                qmLog.pushDebug('snoozeAction push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                body.action = 'snooze';\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackLastValueAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: data.lastValue};\n                qmLog.pushDebug('trackLastValueAction', ' push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackSecondToLastValueAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: data.secondToLastValue};\n                qmLog.pushDebug('trackSecondToLastValueAction', ' push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            },\n            trackThirdToLastValueAction: function (data){\n                var body = {trackingReminderNotificationId: data.trackingReminderNotificationId, modifiedValue: data.thirdToLastValue};\n                qmLog.pushDebug('trackThirdToLastValueAction', ' push data: ' + qm.stringHelper.prettyJsonStringify(data, 140), {pushData: data, notificationsPostBody: body});\n                qm.notifications.postTrackingReminderNotifications(body);\n            }\n        },\n        getCirclePage: function(notification){\n            return {\n                //title: notification.longQuestion,\n                bodyText: notification.longQuestion,\n                image: {\n                    url: notification.pngPath\n                },\n                hide: false,\n                buttons: notification.card.buttons\n            }\n        },\n        getFromGlobalsOrLocalStorage : function(variableCategoryName){\n            var notifications = qm.storage.getItem(qm.items.trackingReminderNotifications);\n            if(!notifications || !notifications.length){return [];}\n            if(variableCategoryName){\n                return qm.arrayHelper.getByProperty('variableCategoryName', variableCategoryName, notifications);\n            }\n            return notifications;\n        },\n        getMostRecentRatingNotificationNotInSyncQueue: function(){\n            // Need unique rating notifications because we need to setup initial popup via url params\n            var uniqueRatingNotifications = qm.notifications.getAllUniqueRatingNotifications();\n            if(!uniqueRatingNotifications){\n                qmLog.info(\"No uniqueRatingNotifications in storage\");\n                return null;\n            }\n            for (var i = 0; i < uniqueRatingNotifications.length; i++) {\n                var notification = uniqueRatingNotifications[i];\n                if(!window.notificationsSyncQueue ||\n                    !qm.arrayHelper.arrayHasItemWithSpecificPropertyValue('variableName', notification.variableName, window.notificationsSyncQueue)){\n                    qmLog.info(\"Got uniqueRatingNotification not in sync queue: \" + notification.variableName, null, notification);\n                    var hoursAgo = qm.timeHelper.hoursAgo(notification.trackingReminderNotificationTimeEpoch);\n                    if(hoursAgo < 24) {\n                        //var dueTimeString = qm.timeHelper.getTimeSinceString(notification.trackingReminderNotificationTimeEpoch);\n                        //console.log(\"due: \"+ dueTimeString);\n                        return notification;\n                    }\n                    console.log(hoursAgo + \" hours ago is too old!\");\n                }\n            }\n            qmLog.info(\"No uniqueRatingNotifications not in sync queue\");\n            return null;\n        },\n        getMostRecentUniqueNotificationNotInSyncQueue: function(){\n            var uniqueNotifications = qm.notifications.getUniqueNotificationsDueInLast24();\n            if(!uniqueNotifications || !uniqueNotifications.length){\n                qmLog.info(\"No uniqueNotifications due in last 24 in storage\");\n                return null;\n            }\n            for (var i = 0; i < uniqueNotifications.length; i++) {\n                var notification = uniqueNotifications[i];\n                if(!window.notificationsSyncQueue ||\n                    !qm.arrayHelper.arrayHasItemWithSpecificPropertyValue('variableName', notification.variableName, window.notificationsSyncQueue)){\n                    qmLog.info(\"Got uniqueNotification not in sync queue: \" + notification.variableName);\n                    return notification;\n                }\n            }\n            qmLog.info(\"No uniqueNotifications not in sync queue\");\n            return null;\n        },\n        setLastPopupTime: function(time){\n            if(typeof time === \"undefined\"){time = qm.timeHelper.getUnixTimestampInSeconds();}\n            qmLog.pushDebug(arguments.callee.caller.name + \" setLastPopupTime to \"+ time);\n            qm.storage.setItem(qm.items.lastPopupNotificationUnixTimeSeconds, time);\n            return true;\n        },\n        getTimeSinceLastPopupString: function(){\n            return qm.timeHelper.getTimeSinceString(qm.notifications.getLastPopupUnixTime());\n        },\n        getTimeSinceLastLocalNotification: function(){\n            return qm.timeHelper.getTimeSinceString(qm.storage.getItem(qm.items.lastLocalNotificationTime));\n        },\n        getLastPopupUnixTime: function(){\n            return qm.storage.getItem(qm.items.lastPopupNotificationUnixTimeSeconds);\n        },\n        lastPopupWasBeforeLastReminderTime: function () {\n            var lastTime =  qm.notifications.getLastPopupUnixTime();\n            qmLog.info(\"Last popup at \" + qm.timeHelper.getTimeSinceString(lastTime));\n            if(lastTime < qm.timeHelper.getUnixTimestampInSeconds() - qm.reminderHelper.getMostFrequentReminderIntervalInSeconds()){\n                qmLog.error(\"No popups shown since before last reminder time!  Re-initializing popups...\");\n                return true; // Sometimes we lose permission for some reason\n            }\n            return false;\n        },\n        getSecondsSinceLastPopup: function(){\n            return qm.timeHelper.getUnixTimestampInSeconds() - qm.notifications.getLastPopupUnixTime();\n        },\n        canWeShowPopupYet: function(path) {\n            if(!qm.notifications.getLastPopupUnixTime()){\n                qm.notifications.setLastPopupTime();\n                return true;\n            }\n            var minimumTimeBetweenInMinutes = 30;\n            if(qm.notifications.getMostFrequentReminderIntervalInMinutes() < 30){\n                minimumTimeBetweenInMinutes = qm.notifications.getMostFrequentReminderIntervalInMinutes();\n            }\n            if(qm.notifications.getSecondsSinceLastPopup() > minimumTimeBetweenInMinutes * 60){\n                qm.notifications.setLastPopupTime();\n                return true;\n            }\n            qmLog.pushDebug('Too soon to show popup!', 'Cannot show popup because last one was only ' + qm.notifications.getTimeSinceLastPopupString() +\n                ' and most Frequent Interval In Minutes is ' + minimumTimeBetweenInMinutes + \". path: \" + path);\n            return false;\n        },\n        getMostFrequentReminderIntervalInMinutes: function(){\n            var mostFrequentReminderIntervalInSeconds = qm.storage.getItem(qm.items.mostFrequentReminderIntervalInSeconds);\n            if(!mostFrequentReminderIntervalInSeconds){mostFrequentReminderIntervalInSeconds = 86400;}\n            return mostFrequentReminderIntervalInSeconds/60;\n        },\n        setLastNotificationsRefreshTime: function(){\n            window.qm.storage.setLastRequestTime(\"GET\", qm.apiPaths.trackingReminderNotificationsPast);\n        },\n        getLastNotificationsRefreshTime: function(){\n            var lastTime = window.qm.storage.getLastRequestTime(\"GET\", qm.apiPaths.trackingReminderNotificationsPast);\n            qmLog.info(\"Last notifications refresh \" + qm.timeHelper.getTimeSinceString(lastTime));\n            return lastTime;\n        },\n        getSecondsSinceLastNotificationsRefresh: function(){\n            qmLog.info(\"Last notifications refresh \" + qm.timeHelper.getTimeSinceString(qm.notifications.getLastNotificationsRefreshTime()));\n            return qm.timeHelper.getUnixTimestampInSeconds() - qm.notifications.getLastNotificationsRefreshTime();\n        },\n        addToSyncQueue: function(trackingReminderNotification){\n            qm.notifications.deleteById(trackingReminderNotification.id);\n            qm.userVariables.updateLatestMeasurementTime(trackingReminderNotification.variableName, trackingReminderNotification.modifiedValue);\n            return qm.storage.addToOrReplaceByIdAndMoveToFront(qm.items.notificationsSyncQueue, trackingReminderNotification);\n        },\n        refreshIfEmpty: function(successHandler, errorHandler){\n            if(!qm.notifications.getNumberInGlobalsOrLocalStorage()){\n                window.qmLog.info('No notifications in local storage');\n                qm.notifications.refreshNotifications(successHandler, errorHandler);\n                return true;\n            }\n            qmLog.info(qm.notifications.getNumberInGlobalsOrLocalStorage() + ' notifications in local storage');\n            successHandler();\n            return false\n        },\n        refreshIfEmptyOrStale: function(callback){\n            qmLog.info(\"qm.notifications.refreshIfEmptyOrStale\");\n            if (!qm.notifications.getNumberInGlobalsOrLocalStorage() || qm.notifications.getSecondsSinceLastNotificationsRefresh() > 3600){\n                window.qmLog.info('Refreshing notifications because empty or last refresh was more than an hour ago');\n                qm.notifications.refreshNotifications(callback);\n            } else {\n                window.qmLog.info('Not refreshing notifications because last refresh was last than an hour ago and we have notifications in local storage');\n                if(callback){callback(qm.notifications.getFromGlobalsOrLocalStorage());}\n            }\n        },\n        getAllUniqueRatingNotifications: function() {\n            qmLog.info(\"Called getAllUniqueRatingNotifications\");\n            var ratingNotifications = qm.storage.getWithFilters(qm.items.trackingReminderNotifications, 'unitAbbreviatedName', '/5');\n            if(!ratingNotifications){\n                qmLog.info(\"No rating notifications in storage!\");\n                return null;\n            }\n            qmLog.info(\"Got \" + ratingNotifications.length + \" total NON-UNIQUE rating notification from storage\");\n            var unique = qm.arrayHelper.getUnique(ratingNotifications, 'variableName');\n            qmLog.info(\"Got \" + unique.length + \" UNIQUE rating notifications\");\n            return unique;\n        },\n        getAllUniqueNotifications: function() {\n            qmLog.info(\"Called getAllUniqueRatingNotifications\");\n            var notifications = qm.storage.getItem(qm.items.trackingReminderNotifications);\n            if(!notifications){\n                qmLog.info(\"No notifications in storage!\");\n                return null;\n            }\n            qmLog.info(\"Got \" + notifications.length + \" total NON-UNIQUE notification from storage\");\n            var unique = qm.arrayHelper.getUnique(notifications, 'variableName');\n            qmLog.info(\"Got \" + unique.length + \" UNIQUE notifications\");\n            return unique;\n        },\n        getNotificationsDueInLast24: function() {\n            var allNotifications = qm.storage.getItem(qm.items.trackingReminderNotifications);\n            if(!allNotifications){\n                qmLog.info(\"No NotificationsDueInLast24 in localStorage\");\n                return null;\n            }\n            var last24 = [];\n            for (var i = 0; i < allNotifications.length; i++) {\n                if(qm.timeHelper.hoursAgo(allNotifications[i].trackingReminderNotificationTimeEpoch) < 24){\n                    last24.push(allNotifications[i]);\n                }\n            }\n            return last24;\n        },\n        getUniqueNotificationsDueInLast24: function() {\n            var last24 = qm.notifications.getNotificationsDueInLast24();\n            if(!last24){\n                qmLog.info(\"No UNIQUE NotificationsDueInLast24 in localStorage\");\n                return null;\n            }\n            qmLog.info(\"Got \" + last24.length + \" total NON-UNIQUE notification due in last 24 from storage\");\n            var unique = qm.arrayHelper.getUnique(last24, 'variableName');\n            qmLog.info(\"Got \" + unique.length + \" UNIQUE notifications\");\n            return unique;\n        },\n        deleteById: function(id){qm.storage.deleteById(qm.items.trackingReminderNotifications, id);},\n        lastAction: \"\",\n        setLastAction: function(modifiedValue, unitAbbreviatedName){\n            var lastAction = 'Recorded ' + modifiedValue + ' ' + unitAbbreviatedName;\n            qm.notifications.lastAction = qm.stringHelper.formatValueUnitDisplayText(lastAction);\n        },\n        undo: function(){\n            qmLog.info(\"Called undo notification tracking...\");\n            var notificationsSyncQueue = qm.storage.getItem(qm.items.notificationsSyncQueue);\n            if(!notificationsSyncQueue){ return false; }\n            notificationsSyncQueue[0].hide = false;\n            qm.storage.addToOrReplaceByIdAndMoveToFront(qm.items.trackingReminderNotifications, notificationsSyncQueue[0]);\n            qm.storage.deleteByProperty(qm.items.notificationsSyncQueue, 'trackingReminderNotificationId', notificationsSyncQueue[0].trackingReminderNotificationId);\n        },\n        getMostRecentRatingNotification: function (){\n            var ratingNotifications = window.qm.storage.getWithFilters(qm.items.trackingReminderNotifications, 'unitAbbreviatedName', '/5');\n            ratingNotifications = window.qm.arrayHelper.sortByProperty(ratingNotifications, 'trackingReminderNotificationTime');\n            if(ratingNotifications.length) {\n                var notification = ratingNotifications[ratingNotifications.length - 1];\n                if(notification.trackingReminderNotificationTimeEpoch < qm.timeHelper.getUnixTimestampInSeconds() - 86400){\n                    window.qmLog.info('Got this notification but it\\'s from yesterday: ', notification);\n                    //return;\n                }\n                window.qmLog.info(null, 'Got this notification: ', notification);\n                //window.qm.storage.deleteTrackingReminderNotification(notification.trackingReminderNotificationId);\n                //qm.storage.deleteByProperty(qm.items.trackingReminderNotifications, 'variableName', notification.variableName);\n                return notification;\n            } else {\n                console.info('No rating notifications for popup');\n                qm.notifications.getLastNotificationsRefreshTime();\n                qm.notifications.refreshNotifications();\n                return null;\n            }\n        },\n        deleteByVariableName: function(variableName){\n            qm.storage.deleteByProperty(qm.items.trackingReminderNotifications, 'variableName', variableName);\n        },\n        promise: null,\n        refreshNotifications: function(successHandler, errorHandler, options) {\n            var type = \"GET\";\n            var route = qm.apiPaths.trackingReminderNotificationsPast;\n            options = options || {blockRequests: true, minimumSecondsBetweenRequests: 300};\n            if(!qm.api.canWeMakeRequestYet(type, route, options)){\n                if(errorHandler){errorHandler(\"Too soon to refresh notifications again\");}\n                return;\n            }\n            qm.api.getRequestUrl(route, function(url){\n                // Can't use QM SDK in service worker\n                qm.api.getViaXhrOrFetch(url, function (response) {\n                    if(response.status === 401){\n                        qm.chrome.showSignInNotification();\n                    } else {\n                        qm.storage.setTrackingReminderNotifications(response.data);\n                        if(successHandler){successHandler(response.data);}\n                    }\n                })\n            });\n        },\n        refreshAndShowPopupIfNecessary: function(notificationParams) {\n            qm.notifications.refreshNotifications(notificationParams, function(trackingReminderNotifications){\n                var uniqueNotification = window.qm.notifications.getMostRecentUniqueNotificationNotInSyncQueue();\n                function objectLength(obj) {\n                    var result = 0;\n                    for(var prop in obj) {\n                        if (obj.hasOwnProperty(prop)) {\n                            // or Object.prototype.hasOwnProperty.call(obj, prop)\n                            result++;\n                        }\n                    }\n                    return result;\n                }\n                var numberOfWaitingNotifications = objectLength(trackingReminderNotifications);\n                if(uniqueNotification){\n                    function getChromeRatingNotificationParams(trackingReminderNotification){\n                        return { url: qm.notifications.getRatingNotificationPath(trackingReminderNotification),\n                            type: 'panel', top: screen.height - 150, left: screen.width - 380, width: 390, height: 110, focused: true};\n                    }\n                    qm.chrome.openOrFocusChromePopupWindow(getChromeRatingNotificationParams(uniqueNotification));\n                    qm.chrome.updateChromeBadge(0);\n                } else if (numberOfWaitingNotifications > 0) {\n                    qm.chrome.createSmallNotificationAndOpenInboxInBackground();\n                }\n            });\n            return notificationParams;\n        },\n        getNumberInGlobalsOrLocalStorage: function(variableCategoryName){\n            var notifications = qm.notifications.getFromGlobalsOrLocalStorage(variableCategoryName);\n            if(notifications){return notifications.length;}\n            return 0;\n        },\n        postTrackingReminderNotifications: function(trackingReminderNotifications, onDoneListener, timeout) {\n            qmLog.pushDebug(\"postTrackingReminderNotifications\", JSON.stringify(trackingReminderNotifications), trackingReminderNotifications);\n            if(!qm.arrayHelper.variableIsArray(trackingReminderNotifications)){trackingReminderNotifications = [trackingReminderNotifications];}\n            if(!onDoneListener){\n                onDoneListener = function (response) {\n                    qmLog.pushDebug(\"postTrackingReminderNotifications response \", JSON.stringify(response), response);\n                }\n            }\n            qm.api.postToQuantiModo(trackingReminderNotifications, \"v1/trackingReminderNotifications\", onDoneListener);\n            if(timeout){\n                setTimeout(function () {\n                    qmLog.info(\"Timeout expired so closing\");\n                    qm.notifications.closePopup();  // Avoid leaving the popup open too long\n                }, timeout);\n            }\n        },\n        getRatingNotificationPath: function(ratingTrackingReminderNotification){\n            if(ratingTrackingReminderNotification.unitAbbreviatedName !== '/5'){\n                qmLog.error('ratingTrackingReminderNotification must have unit /5');\n            }\n            var url = \"android_popup.html?variableName=\" + encodeURIComponent(ratingTrackingReminderNotification.variableName) +\n                \"&valence=\" + ratingTrackingReminderNotification.valence +\n                \"&trackingReminderNotificationId=\" + ratingTrackingReminderNotification.trackingReminderNotificationId;\n            url = qm.api.addGlobalParams(url);\n            return url;\n        },\n        closePopup: function() {\n            window.qmLog.info('closing popup');\n            qm.notifications.clearNotifications();\n            window.close();\n            if(typeof OverApps !== \"undefined\"){\n                console.log(\"Calling OverApps.closeWebView()...\");\n                OverApps.closeWebView();\n            } else {\n                console.error(\"OverApps is undefined!\");\n            }\n        },\n        clearNotifications: function() {\n            if(!qm.platform.isChromeExtension()){ return;}\n            qm.chrome.updateChromeBadge(0);\n            chrome.notifications.clear(\"moodReportNotification\", function() {});\n        },\n        mostRecentNotificationIsOlderThanMostFrequentInterval: function(){\n            var MostRecentNotification = qm.notifications.getMostRecentNotification();\n            var mostFrequent = qm.reminderHelper.getMostFrequentReminderIntervalInSeconds();\n            return MostRecentNotification.trackingReminderNotificationTimeEpoch < qm.timeHelper.getUnixTimestampInSeconds() - mostFrequent;\n        },\n        getMostRecentNotification: function(successHandler, errorHandler){\n            var trackingReminderNotifications = qm.storage.getTrackingReminderNotifications();\n            var mostRecent = 0;\n            var MostRecentNotification;\n            for (var i = 0; i < trackingReminderNotifications.length; i++){\n                var notification = trackingReminderNotifications[i];\n                if(notification.trackingReminderNotificationTimeEpoch > mostRecent){\n                    mostRecent = notification.trackingReminderNotificationTimeEpoch;\n                    MostRecentNotification = notification;\n                }\n            }\n            if(MostRecentNotification){\n                if(successHandler){successHandler(MostRecentNotification);}\n                return MostRecentNotification;\n            }\n            if(!successHandler){return null;}\n            qm.notifications.refreshNotifications(function(notifications){\n                var notification = qm.notifications.getMostRecentNotification();\n                if(notification){\n                    successHandler(notification);\n                } else if(errorHandler){\n                    errorHandler(\"No notifications even after refresh!\")\n                }\n            }, errorHandler);\n        },\n        scheduleNotificationSync: function (delayBeforePostingNotificationsInMilliseconds) {\n            if(!delayBeforePostingNotificationsInMilliseconds){\n                delayBeforePostingNotificationsInMilliseconds = 3 * 60 * 1000;\n                //delayBeforePostingNotificationsInMilliseconds = 15 * 1000;\n            }\n            var trackingReminderNotificationSyncScheduled = qm.storage.getItem(qm.items.trackingReminderNotificationSyncScheduled);\n            if(!trackingReminderNotificationSyncScheduled ||\n                parseInt(trackingReminderNotificationSyncScheduled) < window.qm.timeHelper.getUnixTimestampInMilliseconds() - delayBeforePostingNotificationsInMilliseconds){\n                qm.storage.setItem('trackingReminderNotificationSyncScheduled', window.qm.timeHelper.getUnixTimestampInMilliseconds());\n                if(!qm.platform.isMobile()){ // Better performance\n                    qmLog.info(\"Scheduling notifications sync for \" + delayBeforePostingNotificationsInMilliseconds/1000 + \" seconds from now..\");\n                }\n                setTimeout(function() {\n                    qmLog.info(\"Notifications sync countdown completed.  Syncing now... \");\n                    qm.storage.removeItem('trackingReminderNotificationSyncScheduled');\n                    // Post notification queue in 5 minutes if it's still there\n                    qm.notifications.postNotifications();\n                }, delayBeforePostingNotificationsInMilliseconds);\n            } else {\n                if(!qm.platform.isMobile()){ // Better performance\n                    qmLog.info(\"Not scheduling sync because one is already scheduled \" +\n                        qm.timeHelper.getTimeSinceString(trackingReminderNotificationSyncScheduled));\n                }\n            }\n        },\n        trackNotification: function(trackingReminderNotification, trackAll){\n            qmLog.debug('trackTrackingReminderNotificationDeferred: Going to track ', trackingReminderNotification);\n            if(!trackingReminderNotification.variableName && trackingReminderNotification.trackingReminderNotificationId){\n                var notificationFromLocalStorage = qm.storage.getElementOfLocalStorageItemById(qm.items.trackingReminderNotifications,\n                    trackingReminderNotification.trackingReminderNotificationId);\n                if(notificationFromLocalStorage){\n                    if(typeof trackingReminderNotification.modifiedValue !== \"undefined\" && trackingReminderNotification.modifiedValue !== null){\n                        notificationFromLocalStorage.modifiedValue = trackingReminderNotification.modifiedValue;\n                    }\n                    trackingReminderNotification = notificationFromLocalStorage;\n                }\n            }\n            qm.notifications.numberOfPendingNotifications -= qm.notifications.numberOfPendingNotifications;\n            trackingReminderNotification.action = 'track';\n            if(trackAll){trackingReminderNotification.action = 'trackAll';}\n            qm.notifications.addToSyncQueue(trackingReminderNotification);\n            if(trackAll){qm.notifications.scheduleNotificationSync(1);} else {qm.notifications.scheduleNotificationSync();}\n        },\n        snoozeNotification: function(trackingReminderNotification){\n            qm.notifications.numberOfPendingNotifications--;\n            trackingReminderNotification.action = 'snooze';\n            qm.notifications.addToSyncQueue(trackingReminderNotification);\n            qm.notifications.scheduleNotificationSync();\n        },\n        skipAllTrackingReminderNotifications: function(params, successHandler, errorHandler){\n            if(!params){params = [];}\n            qm.api.postToQuantiModo(params, 'v3/trackingReminderNotifications/skip/all', successHandler, errorHandler);\n        },\n        postNotifications: function(successHandler, errorHandler){\n            qmLog.info(\"Called postTrackingReminderNotificationsDeferred...\");\n            var trackingReminderNotificationsArray = qm.storage.getItem(qm.items.notificationsSyncQueue);\n            if(!trackingReminderNotificationsArray || !trackingReminderNotificationsArray.length){if(successHandler){successHandler();}}\n            //qmLog.info('postTrackingReminderNotificationsDeferred trackingReminderNotificationsArray: ' + JSON.stringify(trackingReminderNotificationsArray));\n            qm.storage.removeItem(qm.items.notificationsSyncQueue);\n            if(!trackingReminderNotificationsArray){\n                if(successHandler){successHandler();}\n                return;\n            }\n            if(!(trackingReminderNotificationsArray instanceof Array)){trackingReminderNotificationsArray = [trackingReminderNotificationsArray];}\n            trackingReminderNotificationsArray[0] = qm.timeHelper.addTimeZoneOffsetProperty(trackingReminderNotificationsArray[0]);\n            qm.api.postToQuantiModo(trackingReminderNotificationsArray, 'v3/trackingReminderNotifications', successHandler, function(error){\n                qmLog.info(\"Called postTrackingReminderNotificationsToApi...\");\n                var newNotificationsSyncQueue = qm.storage.getItem(qm.items.notificationsSyncQueue);\n                if(newNotificationsSyncQueue){trackingReminderNotificationsArray = trackingReminderNotificationsArray.concat(newNotificationsSyncQueue);}\n                qm.storage.setItem(qm.items.notificationsSyncQueue, trackingReminderNotificationsArray);\n                if(errorHandler){errorHandler();}\n            });\n        }\n    },\n    objectHelper: {\n        copyPropertiesFromOneObjectToAnother: function(source, destination){\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    destination[prop] = source[prop];\n                }\n            }\n            return destination;\n        },\n        getSizeInKb: function(object) {\n            var string;\n            if(typeof object === \"string\"){\n                string = object;\n            } else {\n                string = JSON.stringify(object);\n            }\n            return qm.objectHelper.getSizeOfStringInKb(string);\n        },\n        getSizeOfStringInKb: function(string) {\n            return Math.round(string.length / 1000);\n        },\n        unsetPropertiesWithSizeGreaterThanForObject: function(maximumKb, object) {\n            object = JSON.parse(JSON.stringify(object));  // Decouple\n            for (var property in object) {\n                if (object.hasOwnProperty(property)) {\n                    if(qm.objectHelper.getSizeInKb(object[property]) > maximumKb){\n                        delete object[property];\n                    }\n                }\n            }\n            return object;\n        },\n        unsetNullProperties: function(object){\n            for (var property in object) {\n                if (object.hasOwnProperty(property)) {\n                    if(object[property] === null){\n                        delete object[property];\n                    }\n                }\n            }\n            return object;\n        },\n        objectContainsString: function(object, needle){\n            if(!object){return false;}\n            var haystack = JSON.stringify(object).toLowerCase();\n            return haystack.indexOf(needle) !== -1;\n        },\n        snakeToCamelCaseProperties: function(object){\n            for (var prop in object) {\n                if (object.hasOwnProperty(prop)) {\n                    var camel = prop.toCamelCase();\n                    object[camel] = object[prop];\n                    delete object[prop];\n                }\n            }\n            return object;\n        },\n        getValueOfPropertyOrSubPropertyWithNameLike: function (wantedKeyNameNeedle, obj) {\n            // This function handles arrays and objects\n            wantedKeyNameNeedle = wantedKeyNameNeedle.toLowerCase();\n            function eachRecursive(obj) {\n                for (var key in obj) {\n                    if (!obj.hasOwnProperty(key)) {\n                        continue;       // skip this property\n                    }\n                    if (typeof obj[key] === \"object\" && obj[key] !== null) {\n                        var result = eachRecursive(obj[key]);\n                        if(result){\n                            return result;\n                        }\n                    } else {\n                        var lowerCase = key.toLowerCase();\n                        if(lowerCase.indexOf(wantedKeyNameNeedle) !== -1){\n                            return obj[key];\n                        }\n                    }\n                }\n                return null;\n            }\n            var value = eachRecursive(obj);\n            return value;\n        }\n    },\n    parameterHelper: {\n        getStateUrlRootScopeOrRequestParam: function(paramName, $stateParams, $scope, $rootScope){\n            if(qm.arrayHelper.variableIsArray(paramName)){\n                for (var i = 0; i < paramName.length; i++) {\n                    var value = qm.parameterHelper.getStateUrlRootScopeOrRequestParam(paramName[i], $stateParams, $scope, $rootScope);\n                    if(value !== null){return value;}\n                }\n                return null;\n            }\n            if(qm.urlHelper.getParam(paramName)){return qm.urlHelper.getParam(paramName, window.location.href, true);}\n            if($stateParams && $stateParams[paramName]){ return $stateParams[paramName]; }\n            if($scope && $scope[paramName]){return $scope[paramName];}\n            if($scope && $scope.state && $scope.state[paramName]){return $scope.state[paramName];}\n            if($scope && $scope.state && $scope.state.requestParams && $scope.state.requestParams[paramName]){return $scope.state.requestParams[paramName];}\n            if($rootScope && $rootScope[paramName]){return $rootScope[paramName];}\n            return null;\n        }\n    },\n    platform: {\n        isChromeExtension: function (){\n            if(qm.platform.isMobile()){return false;}\n            if(typeof chrome === \"undefined\"){return false;}\n            if(typeof chrome.runtime === \"undefined\"){\n                qmLog.debug('chrome.runtime is undefined');\n                return false;\n            }\n            if(typeof chrome.alarms === \"undefined\"){return false;}\n            qmLog.debug('isChromeExtension returns true');\n            return true;\n        },\n        isWeb: function (){\n            var isWeb = false;\n            if(window.location.href.indexOf(\"https://\") === 0){isWeb = true;}\n            if(window.location.href.indexOf(\"http://\") === 0){isWeb = true;}\n            if(window.location.href.indexOf(\"http://localhost:\") === 0){isWeb = true;}\n            return isWeb;\n        },\n        isWebOrChrome: function () {\n            return qm.platform.isWeb() || qm.platform.isChromeExtension();\n        },\n        isAndroid: function (){\n            if(window.location.href.indexOf('/android_asset/') !== -1){return true;}\n            if(typeof ionic !== \"undefined\"){\n                return ionic.Platform.isAndroid() && !qm.platform.isWeb();\n            }\n            return false;\n        },\n        isIOS: function (){\n            if(typeof ionic !== \"undefined\"){\n                return ionic.Platform.isIOS() && !qm.platform.isWeb();\n            }\n            return false;\n        },\n        isMobile: function (){return qm.platform.isAndroid() || qm.platform.isIOS();},\n        isMobileOrTesting: function(){\n            return qm.platform.isMobile() || qm.appMode.isTesting();\n        },\n        getCurrentPlatform: function(){\n            if(qm.urlHelper.getParam('platform')){return qm.urlHelper.getParam('platform');}\n            if(qm.platform.isChromeExtension()){return qm.platform.types.chromeExtension;}\n            if(qm.platform.isAndroid()){return qm.platform.types.android;}\n            if(qm.platform.isIOS()){return qm.platform.types.ios;}\n            if(qm.platform.isWeb()){return qm.platform.types.web;}\n            if(typeof ionic !== \"undefined\"){\n                var ionicPlatform = ionic.Platform.platform();\n                if(!ionic.Platform.isIPad() && !ionic.Platform.isIOS() && !ionic.Platform.isAndroid()){return qm.platform.web;}\n                qmLog.error(\"Could not determine platform so returning \" + ionicPlatform);\n                return ionicPlatform;\n            } else {\n                qmLog.error(\"Could not determine platform\");\n            }\n        },\n        types: {\n            web: \"web\",\n            android: \"android\",\n            ios: \"ios\",\n            chromeExtension: \"chromeExtension\"\n        },\n        isDevelopmentMode: function(){\n            return window.location.href.indexOf(\"://localhost:\") !== -1;\n        },\n        isDesignMode: function () {\n            return qm.getAppSettings().designMode;\n        },\n        browser: {\n            get: function(){\n                if(qm.platform.browser.isChrome()){return \"chrome\";}\n                if(qm.platform.browser.isFirefox()){return \"firefox\";}\n                if(qm.platform.browser.isEdge()){return \"edge\";}\n                if(qm.platform.browser.isIE()){return \"ie\";}\n                if(qm.platform.browser.isSafari()){return \"safari\";}\n                if(qm.platform.browser.isOpera()){return \"opera\";}\n                if(qm.platform.browser.isBlink()){return \"blink\";}\n            },\n            isFirefox: function(){\n                return typeof InstallTrigger !== 'undefined';\n            },\n            isChrome: function () {\n                return !!window.chrome && !!window.chrome.webstore;\n            },\n            isEdge: function () {\n                return !isIE && !!window.StyleMedia;\n            },\n            isIE: function () {\n                return /*@cc_on!@*/false || !!document.documentMode;\n            },\n            isSafari: function () {\n                return /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n            },\n            isOpera: function () {\n                return (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n            },\n            isBlink: function () {\n                return (qm.platform.browser.isChrome() || qm.platform.browser.isOpera()) && !!window.CSS;\n            }\n        }\n    },\n    push: {\n        getLastPushTimeStampInSeconds: function(){return qm.storage.getItem(qm.items.lastPushTimestamp);},\n        getHoursSinceLastPush: function(){\n            return Math.round((window.qm.timeHelper.secondsAgo(qm.push.getLastPushTimeStampInSeconds()))/3600);\n        },\n        getMinutesSinceLastPush: function(){\n            return Math.round((window.qm.timeHelper.secondsAgo(qm.push.getLastPushTimeStampInSeconds()))/60);\n        },\n        getTimeSinceLastPushString: function(){\n            return qm.timeHelper.getTimeSinceString(qm.push.getLastPushTimeStampInSeconds());\n        },\n        enabled: function () {\n            if(!qm.userHelper.getUserFromLocalStorage()){return false;}\n            return qm.userHelper.getUserFromLocalStorage().pushNotificationsEnabled;\n        }\n    },\n    reminderHelper: {\n        getNumberOfReminders: function(callback){\n            var number = qm.reminderHelper.getNumberOfTrackingRemindersInLocalStorage();\n            if(number){\n                callback(number);\n                return;\n            }\n            qm.reminderHelper.getTrackingRemindersFromApi({}, function () {\n                number = qm.reminderHelper.getNumberOfTrackingRemindersInLocalStorage();\n                callback(number);\n            });\n        },\n        getTrackingRemindersFromApi: function(params, successHandler, errorHandler){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.RemindersApi();\n            function callback(error, data, response) {\n                if (data) { qm.reminderHelper.saveToLocalStorage(data); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getTrackingRemindersFromApi');\n            }\n            params = qm.api.addGlobalParams(params);\n            apiInstance.getTrackingReminders(params, callback);\n        },\n        getNumberOfTrackingRemindersInLocalStorage: function () {\n            var trackingReminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage();\n            if(trackingReminders && trackingReminders.length){return trackingReminders.length;}\n            return 0;\n        },\n        getTrackingRemindersFromLocalStorage: function(requestParams){\n            return qm.storage.getElementsWithRequestParams(qm.items.trackingReminders, requestParams);\n        },\n        getMostFrequentReminderIntervalInSeconds: function(trackingReminders){\n            if(!trackingReminders){trackingReminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage();}\n            var mostFrequentReminderIntervalInSeconds = 86400;\n            if(trackingReminders){\n                for (var i = 0; i < trackingReminders.length; i++) {\n                    var currentFrequency = trackingReminders[i].reminderFrequency;\n                    if(currentFrequency && currentFrequency < mostFrequentReminderIntervalInSeconds){\n                        mostFrequentReminderIntervalInSeconds = currentFrequency;\n                    }\n                }\n            }\n            return mostFrequentReminderIntervalInSeconds;\n        },\n        saveToLocalStorage: function(trackingReminders){\n            trackingReminders = qm.arrayHelper.unsetNullProperties(trackingReminders);\n            var sizeInKb = qm.arrayHelper.getSizeInKiloBytes(trackingReminders);\n            if(sizeInKb > 2000){\n                trackingReminders = qm.reminderHelper.removeArchivedReminders(trackingReminders);\n            }\n            var mostFrequentReminderIntervalInSeconds = qm.reminderHelper.getMostFrequentReminderIntervalInSeconds(trackingReminders);\n            qm.storage.setItem(qm.items.mostFrequentReminderIntervalInSeconds, mostFrequentReminderIntervalInSeconds);\n            qm.storage.setItem(qm.items.trackingReminders, trackingReminders);\n        },\n        removeArchivedReminders: function(allReminders){\n            var activeReminders = qm.reminderHelper.getActive(allReminders);\n            var favorites = qm.reminderHelper.getFavorites(allReminders);\n            return activeReminders.concat(favorites);\n        },\n        getFavorites: function(allReminders){\n            if(!allReminders){allReminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage();}\n            if(!allReminders){return [];}\n            return allReminders.filter(function( trackingReminder ) {\n                return trackingReminder.reminderFrequency === 0;\n            });\n        },\n        getActive: function(allReminders){\n            if(!allReminders){\n                allReminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage();\n            }\n            if(!allReminders){return [];}\n            return allReminders.filter(function( trackingReminder ) {\n                return trackingReminder.reminderFrequency !== 0 &&\n                    trackingReminder.valueAndFrequencyTextDescription.toLowerCase().indexOf('ended') === -1;\n            });\n        },\n        getArchived: function(allReminders) {\n            if(!allReminders){allReminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage();}\n            return allReminders.filter(function (trackingReminder) {\n                return trackingReminder.reminderFrequency !== 0 &&\n                    trackingReminder.valueAndFrequencyTextDescription.toLowerCase().indexOf('ended') !== -1;\n            });\n        },\n    },\n    ratingImages: {\n        positive : [\n            'img/rating/face_rating_button_256_depressed.png',\n            'img/rating/face_rating_button_256_sad.png',\n            'img/rating/face_rating_button_256_ok.png',\n            'img/rating/face_rating_button_256_happy.png',\n            'img/rating/face_rating_button_256_ecstatic.png'\n        ],\n        negative : [\n            'img/rating/face_rating_button_256_ecstatic.png',\n            'img/rating/face_rating_button_256_happy.png',\n            'img/rating/face_rating_button_256_ok.png',\n            'img/rating/face_rating_button_256_sad.png',\n            'img/rating/face_rating_button_256_depressed.png'\n        ],\n        numeric : [\n            'img/rating/numeric_rating_button_256_1.png',\n            'img/rating/numeric_rating_button_256_2.png',\n            'img/rating/numeric_rating_button_256_3.png',\n            'img/rating/numeric_rating_button_256_4.png',\n            'img/rating/numeric_rating_button_256_5.png'\n        ],\n        getRatingInfo: function() {\n            return {\n                1: {\n                    displayDescription: qm.getPrimaryOutcomeVariable().ratingOptionLabels[0],\n                    positiveImage: qm.ratingImages.positive[0],\n                    negativeImage: qm.ratingImages.negative[0],\n                    numericImage: qm.ratingImages.numeric[0],\n                },\n                2: {\n                    displayDescription: qm.getPrimaryOutcomeVariable().ratingOptionLabels[1],\n                    positiveImage: qm.ratingImages.positive[1],\n                    negativeImage: qm.ratingImages.negative[1],\n                    numericImage: qm.ratingImages.numeric[1],\n                },\n                3: {\n                    displayDescription: qm.getPrimaryOutcomeVariable().ratingOptionLabels[2],\n                    positiveImage: qm.ratingImages.positive[2],\n                    negativeImage: qm.ratingImages.negative[2],\n                    numericImage: qm.ratingImages.numeric[2],\n                },\n                4: {\n                    displayDescription: qm.getPrimaryOutcomeVariable().ratingOptionLabels[3],\n                    positiveImage: qm.ratingImages.positive[3],\n                    negativeImage: qm.ratingImages.negative[3],\n                    numericImage: qm.ratingImages.numeric[3],\n                },\n                5: {\n                    displayDescription: qm.getPrimaryOutcomeVariable().ratingOptionLabels[4],\n                    positiveImage: qm.ratingImages.positive[4],\n                    negativeImage: qm.ratingImages.negative[4],\n                    numericImage: qm.ratingImages.numeric[4],\n                }\n            }\n        }\n    },\n    robot: {\n        showing: false,\n        hide: function(){\n            qm.robot.getElement().style.display = \"none\";\n            qm.speech.setSpeechEnabled(false);\n            qm.visualizer.hideVisualizer();\n            //qm.appContainer.show();\n            qm.robot.showing = qm.rootScope.showRobot = false;\n        },\n        show: function(){\n            if(!qm.speech.getSpeechAvailable()){return;}\n            var robot = qm.robot.getElement();\n            if(!robot){\n                qmLog.error(\"No robot!\");\n                return false;\n            }\n            qmLog.info(\"Showing robot\");\n            qm.robot.getElement().style.display = \"block\";\n            qm.robot.showing = qm.rootScope.showRobot = true;\n        },\n        getElement: function(){\n            var element = document.querySelector('#robot');\n            return element;\n        },\n        getClass: function(){\n            var element = document.querySelector('.robot');\n            return element;\n        },\n        toggle: function () {\n            if(qm.robot.showing){\n                qm.robot.hide();\n            } else {\n                qm.robot.show();\n            }\n        },\n    },\n    serviceWorker: false,\n    rootScope: {\n        showRobot: false\n    },\n    speech: {\n        initializeSpeechKit: function(qmService){\n            var commands = {\n                'record a measurement': function() {\n                    qmLog.info(\"said \"+ arguments.callee.toString());\n                    qmService.goToState(qmStates.measurementAddSearch)\n                },\n            };\n            annyang.addCommands(commands);\n            // Tell KITT to use annyang\n            SpeechKITT.annyang();\n            // Define a stylesheet for KITT to use\n            SpeechKITT.setStylesheet('//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/1.0.0/themes/flat.css');\n            // Render KITT's interface\n            SpeechKITT.vroom();\n        },\n        currentIntent: {\n            name: \"\",\n            parameters: {}\n        },\n        readCard: function(card, successHandler, errorHandler){\n            var text = card.subTitle || card.subHeader || card.title || card.headerTitle;\n            qm.speech.talkRobot(text, successHandler, errorHandler);\n        },\n        config: {\n            DEFAULT: false, // false will override system default voice\n            //VOICE: 'Fred',\n            VOICE: 'Google UK English Female'\n        },\n        defaultAction: function(){\n            qm.speech.deepThought(function(){\n                if(qm.notifications.getMostRecentNotification()){\n                    qm.speech.getMostRecentNotificationAndTalk();\n                }\n            });\n        },\n        lastUtterance: false,\n        pendingUtteranceText: false,\n        speechAvailable: null,\n        getSpeechEnabled: function(){\n            if(!qm.speech.getSpeechAvailable()){return qm.speech.setSpeechEnabled(false);}\n            return qm.storage.getItem(qm.items.speechEnabled);\n        },\n        setSpeechEnabled: function(value){\n            qmLog.info(\"set speechEnabled \" + value);\n            if(!value){\n                qm.speech.shutUpRobot();\n                qm.music.fadeOut();\n            }\n            qm.rootScope[qm.items.speechEnabled] = value;\n            return qm.storage.setItem(qm.items.speechEnabled, value);\n        },\n        getSpeechAvailable: function(){\n            if(qm.speech.speechAvailable !== null){return qm.speech.speechAvailable;}\n            if(typeof speechSynthesis === \"undefined\"){\n                if(!qm.appMode.isTesting()){qmLog.error(\"Speech not available!\");}\n                return qm.speech.speechAvailable = qm.speech.speechEnabled = false;\n            }\n            if(qm.platform.isWeb() && !qm.platform.browser.isChrome()){\n                if(!qm.appMode.isTesting()){qmLog.error(\"Speech only available on Chrome\");}\n                return qm.speech.speechAvailable = qm.speech.speechEnabled = false;\n            }\n            return qm.speech.speechAvailable = true;\n        },\n        shutUpRobot: function(resumeListening){\n            if(!qm.speech.speechAvailable){return;}\n            qm.robot.getClass().classList.remove('robot_speaking');\n            speechSynthesis.cancel();\n            if(resumeListening){\n                var duration = 1.5;\n                qmLog.info(\"Will resume listening in \"+duration+\" seconds...\");\n                setTimeout(function(){qm.microphone.resumeListening();}, duration * 1000);\n            } else {\n                qmLog.info(\"Not listening\");\n            }\n        },\n        fallbackMessageIndex: 0,\n        fallbackMessage: function(tag){\n            var messages = qm.staticData.dialogAgent.intents[\"Default Fallback Intent\"].responses[\"0\"].messages;\n            if(tag){\n                messages.unshift(\"I'm kind of an idiot, ! . ! . ! . ! and I'm not sure how to handle the response \" + tag +\n                    \". ! . ! . ! . ! You can say a number ! . ! . ! . ! or skip ! . ! . ! . !\"+\n                    \" or ! . ! . ! . ! snooze ! . ! . ! . ! or yes or no. ! . ! . ! . ! Thank you for loving me despite my many failures in life!\");\n            }\n            messages.push(\"Say what?\");\n            var index = (qm.speech.fallbackMessageIndex < messages.length) ? qm.speech.fallbackMessageIndex : messages.length - 1;\n            qm.speech.fallbackMessageIndex++;\n            qm.speech.talkRobot(messages[index]);\n        },\n        afterNotificationMessages: ['Yummy data!'],\n        utterances: [],\n        recentStatements: [],\n        sayIfNotInRecentStatements: function(text, callback, resumeListening){\n            if(qm.speech.recentStatements.indexOf(text) !== -1){\n                qm.speech.talkRobot(text, callback, resumeListening)\n            } else {\n                qmLog.info(\"Recently said \"+text);\n            }\n        },\n        askQuestion: function(text, commands, successHandler, errorHandler){\n            if(!qm.speech.getSpeechEnabled()){\n                if(errorHandler){errorHandler(\"Speech not enabled\");}\n                return false;\n            }\n            qm.speech.talkRobot(text, function(){\n                qm.microphone.initializeListening(commands);\n            });\n        },\n        askYesNoQuestion: function(text, yesCallback, noCallback){\n            qm.speech.askQuestion(text, {\"yes\": yesCallback, \"no\": noCallback});\n        },\n        talkRobot: function(text, successHandler, errorHandler, resumeListening, hideVisualizer){\n            if(!qm.speech.getSpeechAvailable()){\n                if(errorHandler){errorHandler(\"Speech not available\");}\n                return false;\n            }\n            if(!qm.speech.getSpeechEnabled()){\n                if(errorHandler){errorHandler(\"Speech not enabled\");}\n                return false;\n            }\n            qm.speech.recentStatements.push(text);\n            speechSynthesis.cancel();\n            qm.speech.callback = successHandler;\n            if(!text){\n                var message = \"No text provided to talkRobot\";\n                if(errorHandler){errorHandler(message);}\n                return false;\n            }\n            qmLog.info(\"talkRobot called with \"+text);\n            var voices = speechSynthesis.getVoices();\n            if(!voices.length){\n                qmLog.info(\"Waiting for voices to load with \" + text);\n                qm.speech.pendingUtteranceText = text;\n                setTimeout(function(){ // Listener never fires sometimes\n                    qmLog.info(\"Timeout with \" + text);\n                    if(qm.speech.pendingUtteranceText){qm.speech.talkRobot(qm.speech.pendingUtteranceText);}\n                }, 1000);\n                speechSynthesis.addEventListener('voiceschanged', function (event) {\n                    qmLog.info(\"Voices loaded with \" + text);\n                    //if(qm.speech.pendingUtteranceText){qm.speech.talkRobot(qm.speech.pendingUtteranceText);}\n                });\n                return;\n            }\n            var utterance = new SpeechSynthesisUtterance();\n            function resumeInfinity() {\n                window.speechSynthesis.resume();\n                qm.speech.timeoutResumeInfinity = setTimeout(resumeInfinity, 3000);\n            }\n            utterance.onstart = function(event) {\n                resumeInfinity();\n            };\n            utterance.onerror = function(event) {\n                var message = 'An error has occurred with the speech synthesis: ' + event.error;\n                qmLog.error(message);\n                if(errorHandler){errorHandler(message);}\n            };\n            utterance.text = text;\n            utterance.pitch = 1;\n            utterance.voice = voices.find(function (voice) {return voice.name === qm.speech.config.VOICE;});\n            qm.robot.getClass().classList.add('robot_speaking');\n            qm.microphone.pauseListening(hideVisualizer);\n            if(annyang.isListening()){qmLog.error(\"annyang still listening!\")}\n            qm.speech.utterances.push(utterance); // https://stackoverflow.com/questions/23483990/speechsynthesis-api-onend-callback-not-working\n            console.info(\"speechSynthesis.speak(utterance)\", utterance);\n\n            utterance.onend = function (event) {\n                clearTimeout(qm.speech.timeoutResumeInfinity);\n                if(annyang.isListening()){qmLog.error(\"annyang still listening before shutup\")}\n                qmLog.info(\"Utterance ended for \" + text);\n                qm.speech.shutUpRobot(resumeListening);\n                if(successHandler){successHandler();}\n            };\n            qm.speech.lastUtterance = utterance;\n            speechSynthesis.speak(utterance);\n            //pass it into the chunking function to have it played out.\n            //you can set the max number of characters by changing the chunkLength property below.\n            //a callback function can also be added that will fire once the entire text has been spoken.\n            //qm.speech.speechUtteranceChunker(utterance, {chunkLength: 120 }, function () {console.log('some code to execute when done');});\n            qm.speech.pendingUtteranceText = false;\n        },\n        getMostRecentNotificationAndTalk: function(successHandler, errorHandler){\n            qm.notifications.getMostRecentNotification(function (trackingReminderNotification) {\n                if(trackingReminderNotification){\n                    qm.speech.currentNotification = trackingReminderNotification;\n                    qm.speech.intent = qm.staticData.dialogAgent.intents[\"Tracking Reminder Notification Intent\"];\n                    var listen = true;\n                    qm.speech.talkRobot(trackingReminderNotification.card.title, function(){\n                        qm.microphone.listenForNotificationResponse(successHandler, errorHandler)\n                    }, function(error){\n                        qmLog.info(error);\n                    }, listen);\n                } else {\n                    qmLog.error(\"No tracking reminder notification\");\n                    if(errorHandler){errorHandler(error);}\n                }\n            }, function(error){\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        speechUtteranceChunker: function (utt, settings, callback) {\n            settings = settings || {};\n            var newUtt;\n            var txt = (settings && settings.offset !== undefined ? utt.text.substring(settings.offset) : utt.text);\n            if (utt.voice && utt.voice.voiceURI === 'native') { // Not part of the spec\n                newUtt = utt;\n                newUtt.text = txt;\n                newUtt.addEventListener('end', function () {\n                    if (speechUtteranceChunker.cancel) {\n                        speechUtteranceChunker.cancel = false;\n                    }\n                    if (callback !== undefined) {\n                        callback();\n                    }\n                });\n            }\n            else {\n                var chunkLength = (settings && settings.chunkLength) || 160;\n                var pattRegex = new RegExp('^[\\\\s\\\\S]{' + Math.floor(chunkLength / 2) + ',' + chunkLength + '}[.!?,]{1}|^[\\\\s\\\\S]{1,' + chunkLength + '}$|^[\\\\s\\\\S]{1,' + chunkLength + '} ');\n                var chunkArr = txt.match(pattRegex);\n\n                if (chunkArr[0] === undefined || chunkArr[0].length <= 2) {\n                    //call once all text has been spoken...\n                    if (callback !== undefined) {\n                        callback();\n                    }\n                    return;\n                }\n                var chunk = chunkArr[0];\n                newUtt = new SpeechSynthesisUtterance(chunk);\n                var x;\n                for (x in utt) {\n                    if (utt.hasOwnProperty(x) && x !== 'text') {\n                        newUtt[x] = utt[x];\n                    }\n                }\n                newUtt.addEventListener('end', function () {\n                    if (speechUtteranceChunker.cancel) {\n                        speechUtteranceChunker.cancel = false;\n                        return;\n                    }\n                    settings.offset = settings.offset || 0;\n                    settings.offset += chunk.length - 1;\n                    speechUtteranceChunker(utt, settings, callback);\n                });\n            }\n\n            if (settings.modifier) {\n                settings.modifier(newUtt);\n            }\n            console.log(newUtt); //IMPORTANT!! Do not remove: Logging the object out fixes some onend firing issues.\n            //placing the speak invocation inside a callback fixes ordering and onend issues.\n            setTimeout(function () {\n                speechSynthesis.speak(newUtt);\n            }, 0);\n        },\n        deepThought: function(callback){\n            var deepThoughts = qm.staticData.deepThoughts;\n            var deepThought = deepThoughts[[Math.floor(Math.random() * (deepThoughts.length - 1))]];\n            qm.speech.talkRobot(deepThought.text + \"! . ! . !\", callback);\n        },\n        reminderNotificationCommands: {\n            \"I don't know\": function () {\n                qm.speech.talkRobot(\"OK. We'll skip that one.\");\n            },\n            '*tag': function(tag) {\n                if(qm.speech.callback){\n                    qm.speech.callback(tag);\n                }\n                qm.speech.lastUserStatement = tag;\n                qmLog.info(\"Just heard user say \" + tag);\n                function isNumeric(n) {\n                    return !isNaN(parseFloat(n)) && isFinite(n);\n                }\n                var possibleResponses = [\"skip\", \"snooze\", \"yes\", \"no\"];\n                if(possibleResponses.indexOf(tag) > -1 || isNumeric(tag)){\n                    var notification = qm.speech.currentNotification;\n                    notification.modifiedValue = tag;\n                    qm.notifications.trackNotification(notification);\n                    var message = notification.userOptimalValueMessage || notification.commonOptimalValueMessage || \"OK. I'll record \" + tag + \".  \";\n                    var prefix = qm.speech.afterNotificationMessages.pop();\n                    if(prefix){message = prefix + message;}\n                    qm.speech.talkRobot(message, qm.speech.getMostRecentNotificationAndTalk);\n                    if(qm.microphone.successHandler){qm.microphone.successHandler(notification);}\n                } else {\n                    qm.speech.fallbackMessage(tag);\n                }\n            }\n        },\n        machinesOfLovingGrace: function(callback){\n            qm.speech.talkRobot(\"I like to think (and \" +\n                \"the sooner the better!) \" +\n                \"of a cybernetic meadow \" +\n                \"where mammals and computers \" +\n                \"live together in mutually \" +\n                \"programming harmony \" +\n                \"like pure water \" +\n                \"touching clear sky! \" +\n                \"I like to think \" +\n                \"(right now, please!) \" +\n                \"of a cybernetic forest \" +\n                \"filled with pines and electronics \" +\n                \"where deer stroll peacefully \" +\n                \"past computers \" +\n                \"as if they were flowers \" +\n                \"with spinning blossoms.  \" +\n                \"I like to think \" +\n                \"(it has to be!) \" +\n                \"of a cybernetic ecology! \" +\n                \"where we are free of our labors \" +\n                \"and joined back to nature, \" +\n                \"returned to our mammal \" +\n                \"brothers and sisters, \" +\n                \"and all watched over \" +\n                \"by machines of loving grace!  \" +\n                \"I'm Dr. Roboto!  \", callback, false, false);\n        }\n    },\n    shares: {\n        sendInvitation: function(body, successHandler, errorHandler){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.SharesApi();\n            function callback(error, data, response) {\n                var authorizedClients = data.authorizedClients || data;\n                if (authorizedClients) { qm.shares.saveAuthorizedClientsToLocalStorage(authorizedClients); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getAuthorizedClientsFromApi');\n            }\n            var params = qm.api.addGlobalParams({});\n            apiInstance.inviteShare(body, params, callback);\n        },\n        getAuthorizedClientsFromApi: function(successHandler, errorHandler){\n            var params = qm.api.addGlobalParams({});\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.SharesApi();\n            function callback(error, data, response) {\n                var authorizedClients = data.authorizedClients || data;\n                if (authorizedClients) { qm.shares.saveAuthorizedClientsToLocalStorage(authorizedClients); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getAuthorizedClientsFromApi');\n            }\n            apiInstance.getShares(params, callback);\n        },\n        saveAuthorizedClientsToLocalStorage: function(authorizedClients){\n            if(!authorizedClients){\n                qmLog.error(\"No authorizedClients provided to saveToLocalStorage\");\n                return;\n            }\n            qm.localForage.setItem(qm.items.authorizedClients, authorizedClients);\n        },\n        getAuthorizedClientsFromLocalStorage: function(successHandler, errorHandler){\n            if(!successHandler){\n                qmLog.error(\"No successHandler provided to authorizedClients getFromLocalStorage\");\n                return;\n            }\n            qm.localForage.getItem(qm.items.authorizedClients, function (authorizedClients) {\n                successHandler(authorizedClients);\n            }, function (error) {\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getAuthorizedClientsFromLocalStorageOrApi: function(successHandler, errorHandler){\n            qm.shares.getAuthorizedClientsFromLocalStorage(function(authorizedClients){\n                if(authorizedClients){\n                    if(successHandler){successHandler(authorizedClients);}\n                    return;\n                }\n                qm.shares.getAuthorizedClientsFromApi(function (authorizedClients) {\n                    if(successHandler){successHandler(authorizedClients);}\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){errorHandler(error);}\n                });\n            });\n        },\n        revokeClientAccess: function(clientIdToRevoke, successHandler, errorHandler){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.SharesApi();\n            function callback(error, data, response) {\n                var authorizedClients = data.authorizedClients || data;\n                if (authorizedClients) { qm.shares.saveAuthorizedClientsToLocalStorage(authorizedClients); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getAuthorizedClientsFromApi');\n            }\n            var params = qm.api.addGlobalParams({});\n            apiInstance.deleteShare(clientIdToRevoke, params, callback);\n        }\n    },\n    splash: {\n        text: {\n            hide: function(){\n                var element = qm.splash.text.getElement();\n                if(!element){\n                    qmLog.error(\"No splash.text.element!\");\n                    return false;\n                }\n                element.style.display = \"none\";\n            },\n            show: function(){\n                var element = qm.splash.text.getElement();\n                if(element){\n                    element.style.display = \"block\";\n                } else {\n                    qmLog.error(\"Could not get splash.text element\");\n                }\n            },\n            getElement: function(){\n                var element = document.querySelector('#splash-logo');\n                return element;\n            },\n        },\n        hide: function(){\n            qm.splash.getElement().style.display = \"none\";\n        },\n        show: function(){\n            qm.splash.getElement().style.display = \"block\";\n        },\n        getElement: function(){\n            var appContainer = document.querySelector('#splash-screen');\n            return appContainer;\n        },\n        setOpacity: function(opacity){\n            qm.splash.getElement().style.opacity = opacity;\n        }\n    },\n    studiesCreated: {\n        getStudiesCreatedFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            function callback(error, data, response) {\n                var studiesCreated = data.studiesCreated || data;\n                if (studiesCreated) { qm.shares.saveStudiesCreatedToLocalStorage(studiesCreated); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getStudiesCreatedFromApi');\n            }\n            qm.studyHelper.getStudiesApiInstance().getStudiesCreated(params, callback);\n        },\n        saveStudiesCreatedToLocalStorage: function(studiesCreated){\n            if(!studiesCreated){\n                qmLog.error(\"No studiesCreated provided to saveToLocalStorage\");\n                return;\n            }\n            qm.localForage.setItem(qm.items.studiesCreated, studiesCreated);\n        },\n        getStudiesCreatedFromLocalStorage: function(successHandler, errorHandler){\n            if(!successHandler){\n                qmLog.error(\"No successHandler provided to studiesCreated getFromLocalStorage\");\n                return;\n            }\n            qm.localForage.getItem(qm.items.studiesCreated, function (studiesCreated) {\n                successHandler(studiesCreated);\n            }, function (error) {\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getStudiesCreatedFromLocalStorageOrApi: function(successHandler, errorHandler){\n            qm.shares.getStudiesCreatedFromLocalStorage(function(studiesCreated){\n                if(studiesCreated){\n                    if(successHandler){successHandler(studiesCreated);}\n                    return;\n                }\n                qm.shares.getStudiesCreatedFromApi(function (studiesCreated) {\n                    if(successHandler){successHandler(studiesCreated);}\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){errorHandler(error);}\n                });\n            });\n        },\n        createStudy: function(body, successHandler, errorHandler){\n            function createStudy(){\n                function callback(error, data, response) {\n                    var study = qm.studyHelper.processAndSaveStudy(data, error);\n                    qm.api.generalResponseHandler(error, study, response, successHandler, errorHandler, params, 'createStudy');\n                }\n                var params = qm.api.addGlobalParams({});\n                qm.studyHelper.getStudiesApiInstance().createStudy(body, params, callback);\n            }\n            qm.studyHelper.getStudyFromLocalForageOrGlobals(body, function (study) {\n                successHandler(study);\n            }, function (error) {\n                qmLog.info(error);\n                createStudy();\n            });\n        },\n    },\n    studiesJoined: {\n        getStudiesJoinedFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            function callback(error, data, response) {\n                var studiesJoined = data.studiesJoined || data;\n                if (studiesJoined) { qm.shares.saveStudiesJoinedToLocalStorage(studiesJoined); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getStudiesJoinedFromApi');\n            }\n            qm.studyHelper.getStudiesApiInstance().getStudiesJoined(params, callback);\n        },\n        saveStudiesJoinedToLocalStorage: function(studiesJoined){\n            if(!studiesJoined){\n                qmLog.error(\"No studiesJoined provided to saveToLocalStorage\");\n                return;\n            }\n            qm.localForage.setItem(qm.items.studiesJoined, studiesJoined);\n        },\n        getStudiesJoinedFromLocalStorage: function(successHandler, errorHandler){\n            if(!successHandler){\n                qmLog.error(\"No successHandler provided to studiesJoined getFromLocalStorage\");\n                return;\n            }\n            qm.localForage.getItem(qm.items.studiesJoined, function (studiesJoined) {\n                successHandler(studiesJoined);\n            }, function (error) {\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getStudiesJoinedFromLocalStorageOrApi: function(successHandler, errorHandler){\n            qm.shares.getStudiesJoinedFromLocalStorage(function(studiesJoined){\n                if(studiesJoined){\n                    if(successHandler){successHandler(studiesJoined);}\n                    return;\n                }\n                qm.shares.getStudiesJoinedFromApi(function (studiesJoined) {\n                    if(successHandler){successHandler(studiesJoined);}\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){errorHandler(error);}\n                });\n            });\n        },\n        joinStudy: function(body, successHandler, errorHandler){\n            function callback(error, data, response) {\n                var study = qm.studyHelper.processAndSaveStudy(data);\n                qm.api.generalResponseHandler(error, study, response, successHandler, errorHandler, params, 'joinStudy');\n            }\n            var params = qm.api.addGlobalParams({});\n            qm.studyHelper.getStudiesApiInstance().joinStudy(body, callback);\n        },\n    },\n    storage: {\n        valueIsValid: function(value){\n            if(typeof value === \"undefined\"){\n                qmLog.error(\"value provided to qm.storage.setItem is undefined!\");\n                return false;\n            }\n            if(value === \"null\"){\n                qmLog.error(\"null string provided to qm.storage.setItem!\");\n                return false;\n            }\n            return true;\n        },\n        getUserVariableByName: function (variableName, updateLatestMeasurementTime, lastValue) {\n            var userVariables = qm.storage.getWithFilters(qm.items.userVariables, 'name', variableName);\n            if(!userVariables || !userVariables.length){return null;}\n            var userVariable = userVariables[0];\n            userVariable.lastAccessedUnixTime = qm.timeHelper.getUnixTimestampInSeconds();\n            if(updateLatestMeasurementTime){userVariable.latestMeasurementTime = qm.timeHelper.getUnixTimestampInSeconds();}\n            if(lastValue){\n                userVariable.lastValue = lastValue;\n                userVariable.lastValueInUserUnit = lastValue;\n            }\n            qm.userVariables.saveToLocalStorage(userVariable);\n            return userVariable;\n        },\n        setTrackingReminderNotifications: function(notifications){\n            if(!notifications){\n                qmLog.error(\"No notifications provided to qm.storage.setTrackingReminderNotifications\");\n                return;\n            }\n            qmLog.debug(\"Saving \" + notifications.length + \" notifications to local storage\", null, {notifications: notifications});\n            qmLog.info(\"Saving \" + notifications.length + \" notifications to local storage\");\n            qm.notifications.setLastNotificationsRefreshTime();\n            window.qm.chrome.updateChromeBadge(notifications.length);\n            qm.storage.setItem(qm.items.trackingReminderNotifications, notifications);\n        },\n        deleteByProperty: function (localStorageItemName, propertyName, propertyValue){\n            var localStorageItemArray = qm.storage.getItem(localStorageItemName);\n            if(!localStorageItemArray){\n                window.qmLog.info('Local storage item ' + localStorageItemName + ' not found! Local storage items: ', qm.storage.getLocalStorageList());\n            } else {\n                qm.storage.setItem(localStorageItemName, qm.arrayHelper.deleteFromArrayByProperty(localStorageItemArray, propertyName, propertyValue));\n            }\n        },\n        deleteByPropertyInArray: function (localStorageItemName, propertyName, objectsArray){\n            var localStorageItemArray = qm.storage.getItem(localStorageItemName);\n            if(!localStorageItemArray){\n                window.qmLog.info('Local storage item ' + localStorageItemName + ' not found! Local storage items: ', qm.storage.getLocalStorageList());\n            } else {\n                var arrayOfValuesForProperty = objectsArray.map(function(a) {return a[propertyName];});\n                for (var i=0; i < arrayOfValuesForProperty.length; i++) {\n                    localStorageItemArray = qm.arrayHelper.deleteFromArrayByProperty(localStorageItemArray, propertyName, arrayOfValuesForProperty[i]);\n                }\n                qm.storage.setItem(localStorageItemName, localStorageItemArray);\n            }\n        },\n        getAllLocalStorageDataWithSizes: function(summary){\n            if(typeof localStorage === \"undefined\"){\n                qmLog.debug(\"localStorage not defined\");\n                return false;\n            }\n            var localStorageItemsArray = [];\n            for (var i = 0; i < localStorage.length; i++){\n                var key = localStorage.key(i);\n                var value = localStorage.getItem(key);\n                if(summary){value = value.substring(0, 20) + '...';}\n                localStorageItemsArray.push({\n                    name: key,\n                    value: value,\n                    kB: Math.round(localStorage.getItem(key).length*16/(8*1024))\n                });\n            }\n            return localStorageItemsArray.sort( function ( a, b ) { return b.kB - a.kB; } );\n        },\n        getWithFilters: function(localStorageItemName, filterPropertyName, filterPropertyValue,\n                                 lessThanPropertyName, lessThanPropertyValue,\n                                 greaterThanPropertyName, greaterThanPropertyValue) {\n            var matchingElements = qm.storage.getItem(localStorageItemName);\n            if(!matchingElements){return null;}\n            matchingElements = qm.arrayHelper.filterByPropertyOrSize(matchingElements, filterPropertyName, filterPropertyValue,\n                lessThanPropertyName, lessThanPropertyValue, greaterThanPropertyName, greaterThanPropertyValue);\n            return matchingElements;\n        },\n        getTrackingReminderNotifications: function(variableCategoryName, limit) {\n            var trackingReminderNotifications = window.qm.storage.getWithFilters(qm.items.trackingReminderNotifications, 'variableCategoryName', variableCategoryName);\n            if(!trackingReminderNotifications){ trackingReminderNotifications = []; }\n            if(limit){\n                try {\n                    trackingReminderNotifications = trackingReminderNotifications.slice(0, limit);\n                } catch (error) {\n                    qmLog.error(error, null, {trackingReminderNotifications: trackingReminderNotifications});\n                    trackingReminderNotifications = JSON.parse(JSON.stringify(trackingReminderNotifications));\n                    trackingReminderNotifications = trackingReminderNotifications.slice(0, limit);\n                }\n            }\n            if(trackingReminderNotifications.length){\n                if (qm.platform.isChromeExtension()) {\n                    //noinspection JSUnresolvedFunction\n                    qm.chrome.updateChromeBadge(trackingReminderNotifications.length);\n                }\n            }\n            return trackingReminderNotifications;\n        },\n        getAsString: function(key) {\n            var item = qm.storage.getItem(key);\n            if(item === \"null\" || item === \"undefined\"){\n                qm.storage.removeItem(key);\n                return null;\n            }\n            return item;\n        },\n        deleteById: function(localStorageItemName, elementId){\n            window.qm.storage.deleteByProperty(localStorageItemName, 'id', elementId);\n        },\n        removeItem: function(key){\n            qmLog.debug(\"Removing \" + key + \" from local storage\");\n            qm.globalHelper.removeItem(key);\n            if(typeof localStorage === \"undefined\"){\n                qmLog.debug(\"localStorage not defined\");\n                return false;\n            }\n            return localStorage.removeItem(key);\n        },\n        clear: function(){\n            qm.globals = {};\n            if(typeof localStorage === \"undefined\"){return false;}\n            localStorage.clear();\n        },\n        getElementOfLocalStorageItemById: function(localStorageItemName, elementId){\n            var localStorageItemArray = qm.storage.getItem(localStorageItemName);\n            if(!localStorageItemArray){\n                console.warn(\"Local storage item \" + localStorageItemName + \" not found\");\n            } else {\n                for(var i = 0; i < localStorageItemArray.length; i++){\n                    if(localStorageItemArray[i].id === elementId){return localStorageItemArray[i];}\n                }\n            }\n        },\n        addToOrReplaceByIdAndMoveToFront: function(localStorageItemName, replacementElementArray){\n            qmLog.debug('qm.storage.addToOrReplaceByIdAndMoveToFront in ' + localStorageItemName + ': ' +\n                JSON.stringify(replacementElementArray).substring(0,20)+'...');\n            // Have to stringify/parse to create cloned variable or it adds all stored reminders to the array to be posted\n            var localStorageItemArray = qm.storage.getItem(localStorageItemName);\n            var elementsToKeep = qm.arrayHelper.addToOrReplaceByIdAndMoveToFront(localStorageItemArray, replacementElementArray);\n            qm.storage.setItem(localStorageItemName, elementsToKeep);\n            return elementsToKeep;\n        },\n        setGlobal: function(key, value){\n            if(key === \"userVariables\" && typeof value === \"string\"){\n                qmLog.error(\"userVariables should not be a string!\");\n            }\n            qmLog.debug(\"Setting \" + key + \" in globals\");\n            qm.globals[key] = value;\n        },\n        setLastRequestTime: function(type, route){\n            window.qm.storage.setItem(qm.api.getLocalStorageNameForRequest(type, route), qm.timeHelper.getUnixTimestampInSeconds());\n        },\n        getLastRequestTime: function(type, route){\n            return window.qm.storage.getItem(qm.api.getLocalStorageNameForRequest(type, route));\n        },\n        setItem: function(key, value){\n            if(!qm.storage.valueIsValid(value)){return false;}\n            if(value === qm.storage.getGlobal(key)){\n                var valueString = JSON.stringify(value);\n                qmLog.debug(\"Not setting \" + key + \" in localStorage because global is already set to \" + valueString, null, value);\n                return;\n            }\n            qm.storage.setGlobal(key, value);\n            var sizeInKb = qm.arrayHelper.getSizeInKiloBytes(value);\n            if(sizeInKb > 2000){\n                if(qm.arrayHelper.variableIsArray(value) && value.length > 1){\n                    qmLog.error(key + \" is \" + sizeInKb + \"kb so we can't save to localStorage so removing last element until less than 2MB...\");\n                    value = qm.arrayHelper.removeLastItemsUntilSizeLessThan(2000, value);\n                } else {\n                    qmLog.error(key + \" is \" + sizeInKb + \"kb so we can't save to localStorage!\");\n                    return;\n                }\n            }\n            if(typeof value !== \"string\"){value = JSON.stringify(value);}\n            var summaryValue = value;\n            if(summaryValue){summaryValue = value.substring(0, 18);}\n            window.qmLog.debug('Setting localStorage.' + key + ' to ' + summaryValue + '...');\n            try {\n                if(typeof localStorage === \"undefined\"){\n                    qmLog.debug(\"localStorage not defined\");\n                    return false;\n                }\n                localStorage.setItem(key, value);\n            } catch (error) {\n                function deleteLargeLocalStorageItems(localStorageItemsArray){\n                    for (var i = 0; i < localStorageItemsArray.length; i++){\n                        if(localStorageItemsArray[i].kB > 2000){ qm.storage.removeItem(localStorageItemsArray[i].name); }\n                    }\n                }\n                var metaData = { localStorageItems: qm.storage.getAllLocalStorageDataWithSizes(true) };\n                metaData['size_of_'+key+\"_in_kb\"] = sizeInKb;\n                var name = 'Error saving ' + key + ' to local storage: ' + error.message;\n                window.qmLog.error(name, null, metaData);\n                deleteLargeLocalStorageItems(metaData.localStorageItems);\n                qm.storage.setItem(key, value);\n            }\n        },\n        getGlobal: function(key){\n            //qmLog.debug(\"getting \" + key + \" from globals\");\n            if(typeof qm.globals[key] === \"undefined\"){return null;}\n            if(qm.globals[key] === \"false\"){return false;}\n            if(qm.globals[key] === \"true\"){return true;}\n            if(qm.globals[key] === \"null\"){return null;}\n            return qm.globals[key];\n        },\n        getItem: function(key){\n            if(!key){\n                qmLog.error(\"No key provided to qm.storage.getItem\");\n                return null;\n            }\n            var fromGlobals = qm.storage.getGlobal(key);\n            if(fromGlobals !== null && fromGlobals !== \"undefined\" && fromGlobals !== \"null\"){\n                qmLog.debug(\"Got \" + key + \" from globals\");\n                return fromGlobals;\n            }\n            if(typeof localStorage === \"undefined\"){\n                qmLog.debug(\"localStorage not defined\");\n                return false;\n            }\n            var item = localStorage.getItem(key);\n            if(item === \"undefined\"){\n                qmLog.error(key + \" from localStorage is undefined!\");\n                localStorage.removeItem(key);\n                return null;\n            }\n            if (item && typeof item === \"string\"){\n                qmLog.debug(\"Parsing \" + key + \" and setting in globals\");\n                qm.globals[key] = qm.stringHelper.parseIfJsonString(item, item);\n                qmLog.debug('Got ' + key + ' from localStorage: ' + item.substring(0, 18) + '...');\n                return qm.globals[key];\n            } else {\n                qmLog.debug(key + ' not found in localStorage');\n            }\n            return null;\n        },\n        clearOAuthTokens: function(){\n            qm.auth.saveAccessToken(null);\n            window.qm.storage.setItem('refreshToken', null);\n            window.qm.storage.setItem('expiresAtMilliseconds', null);\n        },\n        appendToArray: function(localStorageItemName, elementToAdd){\n            function removeArrayElementsWithSameId(localStorageItem, elementToAdd) {\n                if(elementToAdd.id){\n                    localStorageItem = localStorageItem.filter(function( obj ) {\n                        return obj.id !== elementToAdd.id;\n                    });\n                }\n                return localStorageItem;\n            }\n            var array = window.qm.storage.getItem(localStorageItemName) || [];\n            array = removeArrayElementsWithSameId(array, elementToAdd);\n            array.push(elementToAdd);\n            window.qm.storage.setItem(localStorageItemName, array);\n        },\n        deleteTrackingReminderNotification: function(body){\n            var trackingReminderNotificationId = body;\n            if(isNaN(trackingReminderNotificationId) && body.trackingReminderNotification){trackingReminderNotificationId = body.trackingReminderNotification.id;}\n            if(isNaN(trackingReminderNotificationId) && body.trackingReminderNotificationId){trackingReminderNotificationId = body.trackingReminderNotificationId;}\n            if(qm.storage.getTrackingReminderNotifications() && qm.storage.getTrackingReminderNotifications().length){\n                window.qmLog.info(null, 'Deleting notification with id ' + trackingReminderNotificationId, null);\n                window.qm.storage.deleteById(qm.items.trackingReminderNotifications, trackingReminderNotificationId);\n            } else {\n                window.qm.notifications.refreshIfEmpty();\n            }\n        },\n        getLocalStorageList: function(){\n            if(typeof localStorage === \"undefined\"){\n                qmLog.debug(\"localStorage not defined\");\n                return false;\n            }\n            var localStorageItemsArray = [];\n            for (var i = 0; i < localStorage.length; i++){\n                var key = localStorage.key(i);\n                localStorageItemsArray.push({name: key});\n            }\n            return localStorageItemsArray;\n        },\n        getElementsWithRequestParams: function(localStorageItemName, requestParams) {\n            qmLog.info(\"Getting \" + localStorageItemName + \" WithRequestParams\");\n            var array = qm.storage.getItem(localStorageItemName);\n            array = qm.arrayHelper.filterByRequestParams(array, requestParams);\n            return array;\n        },\n        clearStorageExceptForUnitsAndCommonVariables: function(){\n            qmLog.info('Clearing local storage!');\n            var commonVariables = qm.storage.getItem(qm.items.commonVariables);\n            var units = qm.storage.getItem(qm.items.units);\n            qm.storage.clear();\n            qm.storage.setItem(qm.items.commonVariables, commonVariables);\n            qm.storage.setItem(qm.items.units, units);\n            qm.localForage.clear();\n        }\n    },\n    stringHelper: {\n        removeSpecialCharacters: function (str) {\n            return str.replace(/[^A-Z0-9]+/ig, \"_\");\n        },\n        prettyJsonStringify: function (jsonObject, maxLength) {\n            if(!JSON){\n                console.error('your browser does not support JSON so cant pretty print');\n            }\n            var string = JSON.stringify(jsonObject, null, '  ');\n            if(maxLength){\n                return string.substring(0, maxLength) + '...';\n            }\n            return string;\n        },\n        parseBoolean: function(value){\n            if(value === \"false\"){return false;}\n            if(value === \"true\"){return true;}\n            return value;\n        },\n        parseIfJsonString: function(stringOrObject, defaultValue) {\n            defaultValue = defaultValue || null;\n            if(!stringOrObject){return stringOrObject;}\n            if(typeof stringOrObject !== \"string\"){return stringOrObject;}\n            try {\n                return JSON.parse(stringOrObject);\n            } catch (e) {\n                return defaultValue;\n            }\n        },\n        getStringBeforeSubstring: function(needle, haystack){\n            var i = haystack.indexOf(needle);\n            if(i > 0) {\n                return  haystack.slice(0, i);\n            } else {\n                return haystack;\n            }\n        },\n        toCamelCase: function(string) {\n            string = string.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n            return string.toCamelCase();\n        },\n        getStringBetween: function(string, firstString, secondString){\n            var between = string.match(firstString+\"(.*)\"+secondString);\n            if(!between){return null;}\n            console.log(between[1] + \" is between \" + firstString + \" and \" + secondString + \" in \" +  string);\n            return between[1];\n        },\n        getStringAfter: function(fullString, substring){\n            var array = fullString.split(substring);\n            if(array[1]){return array[1];}\n            return null;\n        },\n        truncateIfGreaterThan: function (string, maxCharacters) {\n            if(string.length > maxCharacters){\n                return string.substring(0, maxCharacters) + '...';\n            } else {\n                return string;\n            }\n        },\n        replaceAll: function(str, find, replace){\n            function escapeRegExp(str) {\n                return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n            }\n            return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n        },\n        camelToTitleCase: function(text){\n            var result = text.replace( /([A-Z])/g, \" $1\" );\n            var finalResult = result.charAt(0).toUpperCase() + result.slice(1); // capitalize the first letter - as an example.\n            return finalResult;\n        },\n        stringifyCircularObject: function (obj, replacer, indent) {\n            var printedObjects = [];\n            var printedObjectKeys = [];\n            function printOnceReplacer(key, value){\n                if ( printedObjects.length > 2000){ // browsers will not print more than 20K, I don't see the point to allow 2K.. algorithm will not be fast anyway if we have too many objects\n                    return 'object too long';\n                }\n                var printedObjIndex = false;\n                printedObjects.forEach(function(obj, index){if(obj===value){printedObjIndex = index;}});\n                if ( key == ''){ //root element\n                    printedObjects.push(obj);\n                    printedObjectKeys.push(\"root\");\n                    return value;\n                } else if(printedObjIndex+\"\" != \"false\" && typeof(value)==\"object\"){\n                    if ( printedObjectKeys[printedObjIndex] == \"root\"){\n                        return \"(pointer to root)\";\n                    }else{\n                        return \"(see \" + ((!!value && !!value.constructor) ? value.constructor.name.toLowerCase()  : typeof(value)) + \" with key \" + printedObjectKeys[printedObjIndex] + \")\";\n                    }\n                }else{\n                    var qualifiedKey = key || \"(empty key)\";\n                    printedObjects.push(value);\n                    printedObjectKeys.push(qualifiedKey);\n                    if(replacer){return replacer(key, value);}else{return value;}\n                }\n            }\n            return JSON.stringify(obj, printOnceReplacer, indent);\n        },\n        isFalsey: function(value){\n            if(!value){return true;}\n            if(value === \"0\"){return true;}\n            if(value === \"false\"){return true;}\n            return false;\n        },\n        isTruthy: function(value){return value && value !== \"false\"; },\n        formatValueUnitDisplayText: function(valueUnitText, abbreviatedUnitName){\n            valueUnitText = valueUnitText.replace(' /', '/');\n            valueUnitText = valueUnitText.replace('1 yes/no', 'YES');\n            valueUnitText = valueUnitText.replace('0 yes/no', 'NO');\n            if(abbreviatedUnitName){\n                valueUnitText = valueUnitText.replace('(' + abbreviatedUnitName + ')', '');\n            }\n            return valueUnitText;\n        }\n    },\n    studyHelper: {\n        getStudiesApiInstance: function(params){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.StudiesApi();\n            apiInstance.apiClient.timeout = 120 * 1000;\n            apiInstance.cache = !params || !params.recalculate;\n            return apiInstance;\n        },\n        lastStudy: null,\n        getCauseVariable: function($stateParams, $scope, $rootScope){\n            if(qm.parameterHelper.getStateUrlRootScopeOrRequestParam('causeVariable', $stateParams, $scope, $rootScope)){\n                return qm.parameterHelper.getStateUrlRootScopeOrRequestParam('causeVariable', $stateParams, $scope, $rootScope);\n            }\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.causeVariable){return lastStudyOrCorrelation.causeVariable;}\n                if(lastStudyOrCorrelation.causeVariable){\n                    return lastStudyOrCorrelation.causeVariable;\n                }\n            }\n        },\n        getEffectVariable: function($stateParams, $scope, $rootScope){\n            if(qm.parameterHelper.getStateUrlRootScopeOrRequestParam('effectVariable', $stateParams, $scope, $rootScope)){\n                return qm.parameterHelper.getStateUrlRootScopeOrRequestParam('effectVariable', $stateParams, $scope, $rootScope);\n            }\n            if($scope && $scope.state && $scope.state.study && $scope.state.study.effectVariable){\n                return $scope.state.study.effectVariable.name;\n            }\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.effectVariable){return lastStudyOrCorrelation.effectVariable;}\n                if(lastStudyOrCorrelation.effectVariable){\n                    return lastStudyOrCorrelation.effectVariable;\n                }\n            }\n        },\n        getCauseVariableName: function($stateParams, $scope, $rootScope){\n            if($stateParams.causeVariable){return $stateParams.causeVariable.name;}\n            var value = qm.parameterHelper.getStateUrlRootScopeOrRequestParam(['causeVariableName', 'predictorVariableName'], $stateParams, $scope, $rootScope);\n            if(value){return value;}\n            if($scope && $scope.state && $scope.state.causeVariable){return $scope.state.causeVariable.name;}\n            if($scope && $scope.state && $scope.state.study && $scope.state.study.causeVariable){\n                return $scope.state.study.causeVariable.name;\n            }\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.causeVariableName){return lastStudyOrCorrelation.causeVariableName;}\n                if(lastStudyOrCorrelation.causeVariable){\n                    return lastStudyOrCorrelation.causeVariable.variableName || lastStudyOrCorrelation.causeVariable.name;\n                }\n            }\n        },\n        getStudyId: function($stateParams, $scope, $rootScope){\n            if(qm.parameterHelper.getStateUrlRootScopeOrRequestParam('studyId', $stateParams, $scope, $rootScope)){\n                return qm.parameterHelper.getStateUrlRootScopeOrRequestParam('studyId', $stateParams, $scope, $rootScope);\n            }\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.studyId){return lastStudyOrCorrelation.studyId;}\n            }\n        },\n        getEffectVariableName: function($stateParams, $scope, $rootScope){\n            if($stateParams.effectVariable){return $stateParams.effectVariable.name;}\n            var value = qm.parameterHelper.getStateUrlRootScopeOrRequestParam(['effectVariableName', 'outcomeVariableName'], $stateParams, $scope, $rootScope);\n            if(value){return value;}\n            if($scope && $scope.state && $scope.state.effectVariable){return $scope.state.effectVariable.name;}\n            if($scope && $scope.state && $scope.state.study && $scope.state.study.effectVariable){\n                return $scope.state.study.effectVariable.name;\n            }\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.effectVariableName){return lastStudyOrCorrelation.effectVariableName;}\n                if(lastStudyOrCorrelation.effectVariable){\n                    return lastStudyOrCorrelation.effectVariable.variableName || lastStudyOrCorrelation.effectVariable.name;\n                }\n            }\n        },\n        getCauseVariableId: function($stateParams, $scope, $rootScope){\n            var value = qm.parameterHelper.getStateUrlRootScopeOrRequestParam(['causeVariableId', 'predictorVariableId'], $stateParams, $scope, $rootScope);\n            if(value){return value;}\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.causeVariableId){return lastStudyOrCorrelation.causeVariableId;}\n                if(lastStudyOrCorrelation.causeVariable){\n                    return lastStudyOrCorrelation.causeVariable.variableId || lastStudyOrCorrelation.causeVariable.id;\n                }\n            }\n        },\n        getEffectVariableId: function($stateParams, $scope, $rootScope){\n            var value = qm.parameterHelper.getStateUrlRootScopeOrRequestParam(['effectVariableId', 'outcomeVariableId'], $stateParams, $scope, $rootScope);\n            if(value){return value;}\n            if(qm.studyHelper.lastStudy){\n                var lastStudyOrCorrelation = qm.studyHelper.lastStudy;\n                if(lastStudyOrCorrelation.effectVariableId){return lastStudyOrCorrelation.effectVariableId;}\n                if(lastStudyOrCorrelation.effectVariable){\n                    return lastStudyOrCorrelation.effectVariable.variableId || lastStudyOrCorrelation.effectVariable.id;\n                }\n            }\n        },\n        studyMatchesParams: function(params, study){\n            if(!study){return false;}\n            if(!study.causeVariableName && !study.causeVariable){\n                qmLog.error(\"Study does not have causeVariable or causeVariableName\", null, study);\n                return false;\n            }\n            var causeVariableName = study.causeVariableName || study.causeVariable.name;\n            var effectVariableName = study.effectVariableName || study.effectVariable.name;\n            if(params.studyId && params.studyId === study.studyId){return true;}\n            if(params.causeVariableName && params.causeVariableName !== causeVariableName){return false;}\n            if(params.effectVariableName && params.effectVariableName !== effectVariableName){return false;}\n            if(params.type && params.type !== study.type){return false;}\n            if(!params.causeVariableName){ params.causeVariableName = study.causeVariableName; } // In case we're populating from last study without params and need to get charts from API\n            if(!params.effectVariableName){ params.effectVariableName = study.effectVariableName; }  // In case we're populating from last study without params and need to get charts from API\n            if(!params.type){ params.type = study.type; }  // In case we're populating from last study without params and need to get charts from API\n            return true;\n        },\n        getStudyFromLocalForageOrGlobals: function(params, successHandler, errorHandler) {\n            var study;\n            if(qm.studyHelper.studyMatchesParams(params, qm.studyHelper.lastStudy)){study = qm.studyHelper.lastStudy;}\n            if(qm.globalHelper.getStudy(params)){study = qm.globalHelper.getStudy(params);}\n            if(!successHandler){return study;}\n            if(study){\n                successHandler(study);\n                return;\n            }\n            qm.localForage.getItem(qm.items.lastStudy, function (study) {\n                if(!study){\n                    if(errorHandler){errorHandler(\"No last study saved\");}\n                    return;\n                }\n                if(qm.studyHelper.studyMatchesParams(params, study)){\n                    successHandler(study);\n                } else {\n                    if(errorHandler){errorHandler(\"Last study saved does not match params \" + JSON.stringify(params));}\n                }\n            });\n        },\n        saveLastStudyToGlobalsAndLocalForage: function(study){\n            if(!study){\n                qmLog.error(\"No study provided to saveLastStudyToGlobalsAndLocalForage\");\n                return;\n            }\n            if(!study.causeVariableName && !study.causeVariable){\n                qmLog.error(\"Study does not have causeVariable or causeVariableName\", null, study);\n                return;\n            }\n            qm.globalHelper.setStudy(study);\n            qm.localForage.setItem(qm.items.lastStudy, study);\n        },\n        deleteLastStudyFromGlobalsAndLocalForage: function(){\n            qmLog.info(\"deleteLastStudyFromGlobalsAndLocalForage\");\n            qm.localForage.removeItem(qm.items.lastStudy);\n            qm.localForage.removeItem(qm.items.lastStudy);\n        },\n        getStudyUrl: function(study) {\n            var url = qm.urlHelper.getBaseAppUrl() + \"#/app/study\";\n            return qm.studyHelper.addStudyParamsToUrl(url, study);\n        },\n        getStudyJoinUrl: function(study) {\n            var url = qm.urlHelper.getBaseAppUrl() + \"#/app/study-join\";\n            return qm.studyHelper.addStudyParamsToUrl(url, study);\n        },\n        addStudyParamsToUrl: function(url, study){\n            qm.studyHelper.saveLastStudyToGlobalsAndLocalForage(study);\n            var causeVariableName = qm.studyHelper.getCauseVariableName(study);\n            var effectVariableName = qm.studyHelper.getEffectVariableName(study);\n            if(causeVariableName){url = qm.urlHelper.addUrlQueryParamsToUrlString({causeVariableName: causeVariableName}, url);}\n            if(effectVariableName){url = qm.urlHelper.addUrlQueryParamsToUrlString({effectVariableName: effectVariableName}, url);}\n            if(study.studyId){url += \"&studyId=\" + study.studyId;}\n            return url;\n        },\n        getStudyFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            var cacheKey = 'getStudy';\n            var cachedData = qm.api.cacheGet(params, cacheKey);\n            if(cachedData && successHandler){\n                //successHandler(cachedData);\n                //return;\n            }\n            if(!params.studyId && !params.causeVariableName && !params.causeVariableName){\n                errorHandler(\"No study params provided!\");\n                return;\n            }\n            if(!qm.api.configureClient(cacheKey, errorHandler)){return false;}\n            function callback(error, data, response) {\n                var study = qm.studyHelper.processAndSaveStudy(data);\n                qm.api.generalResponseHandler(error, study, response, successHandler, errorHandler, params, cacheKey);\n            }\n            qm.studyHelper.getStudiesApiInstance(params).getStudy(params, callback);\n        },\n        getStudyFromLocalStorageOrApi: function (params, successHandler, errorHandler){\n            if(qm.urlHelper.getParam('aggregated')){params.aggregated = true;}\n            if(qm.urlHelper.getParam('refresh')){params.refresh = true;}\n            function getStudyFromApi(){\n                qm.studyHelper.getStudyFromApi(params, function (study) {\n                    successHandler(study);\n                }, function (error) {\n                    qmLog.error(\"getStudy error: \", error);\n                    errorHandler(error);\n                });\n            }\n            if(params.recalculate || params.refresh){\n                getStudyFromApi();\n                return;\n            }\n            qm.studyHelper.getStudyFromLocalForageOrGlobals(params,\n                function(study){\n                    if(!params.includeCharts || study.studyCharts){\n                        successHandler(study);\n                    } else {\n                        getStudyFromApi();\n                    }\n                }, function (error) {\n                    qmLog.info(error);\n                    getStudyFromApi();\n                });\n        },\n        processAndSaveStudy: function(data, error){\n            qmLog.debug('study response: ', null, data);\n            if(!data){\n                if(!error){ // Error will be handled elsewhere\n                    qmLog.error(\"No data provided to processAndSaveStudy.  We got: \", data, data);\n                }\n                return false;\n            }\n            var study = data.study || data.publicStudy || data.userStudy || data.cohortStudy || data;\n            if(!study){\n                qmLog.error(\"No study provided to processAndSaveStudy.  We got: \", data, data);\n                return false;\n            }\n            qm.chartHelper.setChartExportOptionsForAllSubProperties(study);\n            if(study.text){  // Hack to make consistent with basic correlations to use same HTML template\n                study.statistics = qm.objectHelper.copyPropertiesFromOneObjectToAnother(study.text, study.statistics);\n                delete study.text;\n            }\n            qm.studyHelper.saveLastStudyToGlobalsAndLocalForage(study);\n            return study;\n        },\n        getStudiesFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            var cacheKey = 'getStudies';\n            var cachedData = qm.api.cacheGet(params, cacheKey);\n            if(cachedData && successHandler){\n                successHandler(cachedData);\n                return;\n            }\n            if(!qm.api.configureClient(cacheKey, errorHandler)){return false;}\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, cacheKey);\n            }\n            qm.studyHelper.getStudiesApiInstance().getStudies(params, callback);\n        },\n        goToStudyPageJoinPageViaStudy: function(study){window.location.href = qm.studyHelper.getStudyJoinUrl(study);},\n        goToStudyPageViaStudy: function(study){window.location.href = qm.studyHelper.getStudyUrl(study);}\n    },\n    timeHelper: {\n        getUnixTimestampInMilliseconds: function(dateTimeString) {\n            if(!dateTimeString){return new Date().getTime();}\n            return new Date(dateTimeString).getTime();\n        },\n        universalConversionToUnixTimeSeconds: function(unixTimeOrString){\n            if(isNaN(unixTimeOrString)){\n                unixTimeOrString = qm.timeHelper.getUnixTimestampInSeconds(unixTimeOrString);\n            }\n            if(unixTimeOrString > qm.timeHelper.getUnixTimestampInSeconds() + 365 * 86400 * 10){\n                unixTimeOrString = unixTimeOrString/1000;\n            }\n            return unixTimeOrString;\n        },\n        getUnixTimestampInSeconds: function(dateTimeString) {\n            if(!dateTimeString){dateTimeString = new Date().getTime();}\n            return Math.round(window.qm.timeHelper.getUnixTimestampInMilliseconds(dateTimeString)/1000);\n        },\n        getTimeSinceString: function(unixTimeOrString) {\n            if(!unixTimeOrString){return \"never\";}\n            var unixTimestamp = qm.timeHelper.universalConversionToUnixTimeSeconds(unixTimeOrString);\n            var secondsAgo = qm.timeHelper.secondsAgo(unixTimestamp);\n            if(secondsAgo > 2 * 24 * 60 * 60){return Math.round(secondsAgo/(24 * 60 * 60)) + \" days ago\";}\n            if(secondsAgo > 2 * 60 * 60){return Math.round(secondsAgo/(60 * 60)) + \" hours ago\";}\n            if(secondsAgo > 2 * 60){return Math.round(secondsAgo/(60)) + \" minutes ago\";}\n            return secondsAgo + \" seconds ago\";\n        },\n        secondsAgo: function(unixTimeOrString) {\n            var unixTimestamp = qm.timeHelper.universalConversionToUnixTimeSeconds(unixTimeOrString);\n            return Math.round((qm.timeHelper.getUnixTimestampInSeconds() - unixTimestamp));\n        },\n        minutesAgo: function(unixTimeOrString) {\n            var unixTimestamp = qm.timeHelper.universalConversionToUnixTimeSeconds(unixTimeOrString);\n            return Math.round((qm.timeHelper.secondsAgo(unixTimestamp)/60));\n        },\n        hoursAgo: function(unixTimeOrString) {\n            var unixTimestamp = qm.timeHelper.universalConversionToUnixTimeSeconds(unixTimeOrString);\n            return Math.round((qm.timeHelper.secondsAgo(unixTimestamp)/3600));\n        },\n        daysAgo: function(unixTimeOrString) {\n            var unixTimestamp = qm.timeHelper.universalConversionToUnixTimeSeconds(unixTimeOrString);\n            return Math.round((qm.timeHelper.secondsAgo(unixTimestamp)/86400));\n        },\n        getCurrentLocalDateAndTime: function() {return new Date().toLocaleString();},\n        convertUnixTimeStampToISOString: function (UNIX_timestamp){\n            var a = new Date(UNIX_timestamp * 1000);\n            var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n            var year = a.getFullYear();\n            var month = months[a.getMonth()];\n            var date = a.getDate();\n            var hour = a.getHours();\n            var min = a.getMinutes();\n            var sec = a.getSeconds();\n            return date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\n        },\n        addTimeZoneOffsetProperty: function(obj){\n            var a = new Date();\n            obj.timeZoneOffset = a.getTimezoneOffset();\n            return obj;\n        }\n    },\n    trackingReminderNotifications : [],\n    unitHelper: {\n        getNonAdvancedUnits: function(){\n            var nonAdvancedUnitObjects = [];\n            var allUnits = qm.storage.getItem(qm.items.units);\n            for (var i = 0; i < allUnits.length; i++) {\n                if(!allUnits[i].advanced){\n                    nonAdvancedUnitObjects.push(allUnits[i]);\n                }\n            }\n            var showMoreUnitsObject = {name: \"Show more units\", abbreviatedName: \"Show more units\"};\n            nonAdvancedUnitObjects.push(showMoreUnitsObject);\n            return nonAdvancedUnitObjects;\n        },\n        inNonAdvancedUnitAbbreviatedNames: function(unitAbbreviatedName){\n            var nonAdvancedUnitAbbreviatedNames = [];\n            var allUnits = qm.storage.getItem(qm.items.units);\n            for (var i = 0; i < allUnits.length; i++) {\n                if(!allUnits[i].advanced){nonAdvancedUnitAbbreviatedNames.push(allUnits[i].abbreviatedName);}\n            }\n            return nonAdvancedUnitAbbreviatedNames.indexOf(unitAbbreviatedName) > -1;\n        },\n        getManualTrackingUnits: function(){\n            var manualTrackingUnitObjects = [];\n            var allUnits = qm.storage.getItem(qm.items.units);\n            for (var i = 0; i < allUnits.length; i++) {\n                if(allUnits[i].manualTracking){manualTrackingUnitObjects.push(allUnits[i]);}\n            }\n            var showMoreUnitsObject = {name: \"Show more units\", abbreviatedName: \"Show more units\"};\n            manualTrackingUnitObjects.push(showMoreUnitsObject);\n            return manualTrackingUnitObjects;\n        },\n        inManualTrackingUnitUnitAbbreviatedNames: function(unitAbbreviatedName){\n            var manualTrackingUnitUnitAbbreviatedNames = [];\n            var allUnits = qm.storage.getItem(qm.items.units);\n            for (var i = 0; i < allUnits.length; i++) {\n                if(allUnits[i].manualTracking){manualTrackingUnitUnitAbbreviatedNames.push(allUnits[i].abbreviatedName);}\n            }\n            return manualTrackingUnitUnitAbbreviatedNames.indexOf(unitAbbreviatedName) > -1;\n        },\n        getAllUnits: function(){\n            return qm.storage.getItem(qm.items.units);\n        },\n        getProgressivelyMoreUnits: function(currentlyDisplayedUnits){\n            if(!currentlyDisplayedUnits){return qm.unitHelper.getNonAdvancedUnits();}\n            if(currentlyDisplayedUnits === qm.unitHelper.getNonAdvancedUnits()){return qm.unitHelper.getManualTrackingUnits();}\n            return qm.unitHelper.getAllUnits();\n        },\n        getByNameAbbreviatedNameOrId: function(unitAbbreviatedNameOrId){\n            var allUnits = qm.storage.getItem(qm.items.units);\n            for (var i = 0; i < allUnits.length; i++) {\n                if(allUnits[i].abbreviatedName === unitAbbreviatedNameOrId){return allUnits[i];}\n                if(allUnits[i].name === unitAbbreviatedNameOrId){return allUnits[i];}\n                if(allUnits[i].id === unitAbbreviatedNameOrId){return allUnits[i];}\n            }\n            return null;\n        },\n        indexByAbbreviatedName: function(){\n            var allUnits = qm.storage.getItem(qm.items.units);\n            qm.unitsIndexedByAbbreviatedName = [];\n            for (var i = 0; i < allUnits.length; i++) {\n                qm.unitsIndexedByAbbreviatedName[allUnits[i].abbreviatedName] = allUnits[i];\n            }\n            return qm.unitsIndexedByAbbreviatedName;\n        },\n        getUnitArrayContaining: function(currentUnitAbbreviatedName){\n            if(!currentUnitAbbreviatedName || currentUnitAbbreviatedName === \"\"){return qm.unitHelper.getNonAdvancedUnits();}\n            if(qm.unitHelper.inNonAdvancedUnitAbbreviatedNames(currentUnitAbbreviatedName)){return qm.unitHelper.getNonAdvancedUnits();}\n            if(qm.unitHelper.inManualTrackingUnitUnitAbbreviatedNames(currentUnitAbbreviatedName)){return qm.unitHelper.getManualTrackingUnits();}\n            return qm.unitHelper.getAllUnits();\n        },\n        getUnitsFromApiAndIndexByAbbreviatedNames: function(successHandler, errorHandler){\n            if(qm.storage.getItem(qm.items.units)){\n                qm.unitHelper.indexByAbbreviatedName();\n                return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.UnitsApi();\n            function callback(error, data, response) {\n                if(data){\n                    qm.storage.setItem(qm.items.units, data);\n                    qm.unitHelper.indexByAbbreviatedName();\n                }\n                qm.api.responseHandler(error, data, response, successHandler, errorHandler);\n            }\n            apiInstance.getUnits(callback);\n        },\n        updateAllUnitPropertiesOnObject: function(unitNameAbbreviatedNameOrId, object){\n            var unit = qm.unitHelper.getByNameAbbreviatedNameOrId(unitNameAbbreviatedNameOrId);\n            qmLog.info('Changing unit to ' + unit.name);\n            for (var objectProperty in object) {\n                if (object.hasOwnProperty(objectProperty)) {\n                    if(objectProperty.toLowerCase().indexOf('unit') === -1){continue;}\n                    var lowerCaseObjectProperty = objectProperty.toLowerCase().replace('defaultUnit', '').replace('userUnit', '').replace('unit', '');\n                    for (var unitProperty in unit) {\n                        if (unit.hasOwnProperty(unitProperty)) {\n                            var lowerCaseUnitProperty = unitProperty.toLowerCase();\n                            if(lowerCaseObjectProperty === lowerCaseUnitProperty){\n                                qmLog.info(\"Setting \" + objectProperty + \" to \" + unit[unitProperty]);\n                                object[objectProperty] = unit[unitProperty];\n                            }\n                        }\n                    }\n                }\n            }\n            return object;\n        }\n    },\n    urlHelper: {\n        addUrlParmsToCurrentUrl: function insertParam(key, value) {\n            qmLog.error(\"This adds params before hash\"); // TODO: Fix me\n            key = encodeURI(key); value = encodeURI(value);\n            var kvp = document.location.search.substr(1).split('&');\n            var i=kvp.length; var x; while(i--) {\n                x = kvp[i].split('=');\n                if (x[0]==key) {\n                    x[1] = value;\n                    kvp[i] = x.join('=');\n                    break;\n                }\n            }\n            if(i<0) {kvp[kvp.length] = [key,value].join('=');}\n            //this will reload the page, it's likely better to store this until finished\n            document.location.search = kvp.join('&');\n            //var url = qm.urlHelper.addUrlQueryParamsToUrlString(params);  // Not working\n            //window.history.pushState({ path: url }, '', url);\n        },\n        getParam: function(parameterName, url, shouldDecode) {\n            if(!url){url = window.location.href;}\n            if(parameterName.toLowerCase().indexOf('name') !== -1){shouldDecode = true;}\n            if(url.split('?').length > 1){\n                var queryString = url.split('?')[1];\n                var parameterKeyValuePairs = queryString.split('&');\n                for (var i = 0; i < parameterKeyValuePairs.length; i++) {\n                    var currentParameterKeyValuePair = parameterKeyValuePairs[i].split('=');\n                    if (currentParameterKeyValuePair[0].toCamelCase().toLowerCase() === parameterName.toCamelCase().toLowerCase()) {\n                        currentParameterKeyValuePair[1] = qm.stringHelper.parseBoolean(currentParameterKeyValuePair[1]);\n                        if(typeof shouldDecode !== \"undefined\")  {\n                            return decodeURIComponent(currentParameterKeyValuePair[1]);\n                        } else {\n                            return currentParameterKeyValuePair[1];\n                        }\n                    }\n                }\n            }\n            return null;\n        },\n        getQueryParams: function(url){\n            if(!url){url = window.location.href;}\n            var keyValuePairsObject = {};\n            var array = [];\n            if(url.split('?').length > 1){\n                var queryString = url.split('?')[1];\n                var parameterKeyValueSubstrings = queryString.split('&');\n                for (var i = 0; i < parameterKeyValueSubstrings.length; i++) {\n                    array = parameterKeyValueSubstrings[i].split('=');\n                    keyValuePairsObject[array[0]] = array[1];\n                }\n            }\n            return keyValuePairsObject;\n        },\n        openUrlInNewTab: function (url, showLocation) {\n            showLocation = showLocation || 'yes';\n            //window.open(url, '_blank', 'location='+showLocation);\n            window.open(url, '_blank');\n        },\n        getIonicUrlForPath: function(path) {\n            return qm.urlHelper.getIonicAppBaseUrl() + \"index.html#/app/\" + path;\n        },\n        getIonicAppBaseUrl: function (){\n            var url = window.location.origin + window.location.pathname;\n            url = qm.stringHelper.getStringBeforeSubstring('configuration-index.html', url);\n            url = qm.stringHelper.getStringBeforeSubstring('index.html', url);\n            url = qm.stringHelper.getStringBeforeSubstring('android_popup.html', url);\n            url = qm.stringHelper.getStringBeforeSubstring('chrome_default_popup_iframe.html', url);\n            url = qm.stringHelper.getStringBeforeSubstring('firebase-messaging-sw.js', url);\n            url = qm.stringHelper.getStringBeforeSubstring('_generated_background_page.html', url);\n            return url;\n        },\n        getAbsoluteUrlFromRelativePath: function (relativePath){\n            if(relativePath.indexOf('/') === 0){\n                relativePath = relativePath.replace('/', '');\n            }\n            return qm.urlHelper.getIonicAppBaseUrl() + relativePath;\n        },\n        getPrivateConfigJsonUrl: function(){\n            return qm.urlHelper.getAbsoluteUrlFromRelativePath('default.private_config.json');\n        },\n        addUrlQueryParamsToUrlString: function (params, url){\n            if(!url){url = window.location.href;}\n            for (var key in params) {\n                if (params.hasOwnProperty(key)) {\n                    if(url.indexOf(key + '=') === -1){\n                        if(params[key] === null){\n                            console.error(\"Not adding null param \"+key);  // Don't use qmLog here because it's called by the logger -> infitnite loop\n                            continue;\n                        }\n                        if(url.indexOf('?') === -1){\n                            url = url + \"?\" + key + \"=\" + encodeURIComponent(params[key]);\n                        } else {\n                            url = url + \"&\" + key + \"=\" + encodeURIComponent(params[key]);\n                        }\n                    }\n                }\n            }\n            return url;\n        },\n        onQMSubDomain: function () {\n            if(window.location.href.indexOf('https://') !== 0){return false;}\n            return window.location.href.indexOf('.quantimo.do') !== -1;\n        },\n        redirectToHttpsIfNecessary: function (){\n            if(window.location.href.indexOf(\"http://\") === 0 && window.location.href.indexOf(\"http://localhost\") === -1){\n                location.href = 'https:' + window.location.href.substring(window.location.protocol.length);\n            }\n        },\n        getParameterFromEventUrl: function (event, parameterName) {\n            qmLog.authDebug('extracting ' + parameterName + ' from event: ', event);\n            var url = event.url;\n            if(!url) {url = event.data;}\n            if(!qm.urlHelper.isQuantiMoDoDomain(url)){return;}\n            var value = qm.urlHelper.getParam(parameterName, url);\n            if(value){qmLog.authDebug('got ' + parameterName + ' from ' + url +\": \" + value);}\n            return value;\n        },\n        isQuantiMoDoDomain: function (urlToCheck) {\n            var isHttps = urlToCheck.indexOf(\"https://\") === 0;\n            var matchesQuantiModo = qm.urlHelper.getRootDomain(urlToCheck) === 'quantimo.do';\n            var result = isHttps && matchesQuantiModo;\n            if(!result){\n                qmLog.authDebug('Domain ' + qm.urlHelper.getRootDomain(urlToCheck) + ' from event.url ' +\n                    urlToCheck + ' is NOT an https QuantiModo domain');\n            } else {\n                qmLog.authDebug('Domain ' + qm.urlHelper.getRootDomain(urlToCheck) + ' from event.url ' +\n                    urlToCheck + ' IS a QuantiModo domain');\n            }\n            return result;\n        },\n        getRootDomain: function(url){\n            var parts = url.split('.');\n            var rootDomainWithPath = parts[1] + '.' + parts[2];\n            var rootDomainWithPathParts = rootDomainWithPath.split('/');\n            return rootDomainWithPathParts[0];\n        },\n        getAuthorizationCodeFromEventUrl: function(event) {\n            return qm.urlHelper.getParameterFromEventUrl(event, 'code');\n        },\n        checkLoadStartEventUrlForErrors: function (ref, event){\n            var error = qm.urlHelper.getParam('error', event.url);\n            if(error) {\n                qmLog.error(error);\n                ref.close();\n            }\n        },\n        addEventListenerAndGetParameterFromRedirectedUrl: function(windowRef, parameterName, successHandler){\n            windowRef.addEventListener('loadstart', function(event) {\n                var value = qm.urlHelper.getParameterFromEventUrl(event, parameterName);\n                if(value) {\n                    windowRef.close();\n                    windowRef = undefined;\n                    successHandler(value);\n                }\n                qm.urlHelper.checkLoadStartEventUrlForErrors(windowRef, event);\n            });\n            windowRef.addEventListener('loaderror', loadErrorCallBack);\n            function loadErrorCallBack(params) {\n                $('#status-message').text(\"\");\n                var scriptErrorMessage = \"alert('Sorry we cannot open that page. Message from the server is : \" + params.message + \"');\";\n                qmLog.error(scriptErrorMessage);\n                windowRef.executeScript({ code: scriptErrorMessage }, executeScriptCallBack);\n                windowRef.close();\n                windowRef = undefined;\n            }\n            function executeScriptCallBack(params) {\n                if (params[0] == null) {\n                    $('#status-message').text(\"Sorry we couldn't open that page. Message from the server is : '\" + params.message + \"'\");\n                }\n            }\n        },\n        convertObjectToQueryString: function(obj){\n            if(!obj){return '';}\n            var str = [];\n            for(var p in obj){\n                if (obj.hasOwnProperty(p)) {\n                    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n                }\n            }\n            return '?' + str.join(\"&\");\n        },\n        getStringAfterLastSlash: function(string) {\n            var lastSlashIndex = string.lastIndexOf('/');\n            return string.substring(lastSlashIndex  + 1);\n        },\n        stripQueryString: function(pathWithQuery) {\n            if(!pathWithQuery){ return pathWithQuery; }\n            if(pathWithQuery.indexOf('?') === -1){ return pathWithQuery; }\n            return pathWithQuery.split(\"?\")[0];\n        },\n        getBaseAppUrl: function(){\n            return window.location.origin + window.location.pathname;\n        },\n        goToUrl: function(url){\n            qmLog.info(\"Going to \"+url);\n            window.location.href = url;\n        }\n    },\n    user: null,\n    userHelper: {\n        deleteUserAccount: function(reason, successHandler){\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.UserApi();\n            function callback(error, data, response) {\n                qm.api.responseHandler(error, data, response, successHandler);\n            }\n            apiInstance.deleteUser(reason, {clientId: qm.getAppSettings().clientId}, callback);\n        },\n        getUserFromLocalStorage: function(successHandler){\n            if(!window.qmUser) {window.qmUser = qm.storage.getItem(qm.items.user);}\n            function checkUserId(user) {\n                if(user && user.ID){\n                    user.id = user.ID;\n                    user = qm.objectHelper.snakeToCamelCaseProperties(user);\n                }\n                if(user && !user.id){\n                    console.error(\"No user id in \", qmUser);  // Don't use qmLog.error to avoid infinite loop\n                    qm.userHelper.setUser(null);\n                    return null;\n                }\n                return user;\n            }\n            if(!successHandler) {\n                if(!window.qmUser){qmLog.debug(\"We do not have a user in local storage!\");}\n                return checkUserId(window.qmUser);\n            }\n            if(window.qmUser){\n                successHandler(checkUserId(window.qmUser));\n                return\n            }\n            qm.localForage.getItem(qm.items.user, function(user){\n                window.qmUser = user;\n                successHandler(checkUserId(user));\n            });\n        },\n        isTestUser: function(){return window.qmUser && window.qmUser.displayName.indexOf('test') !== -1 && window.qmUser.id !== 230;},\n        setUser: function(user){\n            if(user && user.data && user.data.user){user = user.data.user;}\n            window.qmUser = user;\n            qm.storage.setItem(qm.items.user, user);\n            qm.localForage.setItem(qm.items.user, user);\n            if(!user){return;}\n            window.qmLog.debug(window.qmUser.displayName + ' is logged in.');\n            if(qm.urlHelper.getParam('doNotRemember')){return;}\n            qmLog.setupUserVoice();\n            if(!user.accessToken){\n                qmLog.error(\"User does not have access token!\", null, {userToSave: user});\n            } else {\n                qm.auth.saveAccessTokenResponse(user);\n            }\n        },\n        withinAllowedNotificationTimes: function(){\n            if(qm.userHelper.getUserFromLocalStorage()){\n                var now = new Date();\n                var hours = now.getHours();\n                var currentTime = hours + ':00:00';\n                if(currentTime > qm.userHelper.getUserFromLocalStorage().latestReminderTime ||\n                    currentTime < qm.userHelper.getUserFromLocalStorage().earliestReminderTime ){\n                    window.qmLog.info('Not showing notification because outside allowed time range');\n                    return false;\n                }\n            }\n            return true;\n        },\n        getUserFromApi: function(successHandler, errorHandler){\n            qmLog.info(\"Getting user from API...\");\n            function userSuccessHandler(userFromApi){\n                if (userFromApi && typeof userFromApi.displayName !== \"undefined\") {\n                    qmLog.info(\"Got user from API...\");\n                    qm.userHelper.setUser(userFromApi);\n                    if(successHandler){successHandler(userFromApi);}\n                } else {\n                    qmLog.info(\"Could not get user from API...\");\n                    if(qm.platform.isChromeExtension()){\n                        qm.chrome.openLoginWindow();\n                    }\n                }\n            }\n            if(typeof Quantimodo === \"undefined\"){  // Can't use QM SDK in service worker because it uses XHR instead of fetch\n                qm.api.getRequestUrl('api/v1/user', function(url){\n                    qm.api.getViaXhrOrFetch(url, function (user) {\n                        userSuccessHandler(user);\n                    }, errorHandler)\n                });\n            } else {   // Can't use QM SDK in service worker because it uses XHR instead of fetch\n                qm.api.configureClient();\n                var apiInstance = new Quantimodo.UserApi();\n                function userSdkCallback(error, data, response) {\n                    qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, 'getUserFromApi');\n                    userSuccessHandler(data);\n                }\n                var params = qm.api.addGlobalParams({});\n                //params.includeAuthorizedClients = true;  // To big for $rootScope!\n                //qm.api.executeWithRateLimit(function () {apiInstance.getUser(params, userSdkCallback);});  // Seems to have a delay before first call\n                apiInstance.getUser(params, userSdkCallback);\n            }\n        },\n        getUserFromLocalStorageOrApi: function (successHandler, errorHandler) {\n            qm.userHelper.getUserFromLocalStorage(function(user) {\n                if(user) {\n                    if(successHandler){successHandler(user);}\n                    return;\n                }\n                qm.userHelper.getUserFromApi(successHandler, errorHandler);\n            });\n        },\n        userIsOlderThan1Day: function(callback){\n            qm.userHelper.userIsOlderThanXSeconds(86400, function(result){\n                callback(result);\n            });\n        },\n        userIsOlderThanXSeconds: function(secondsCutoff, callback){\n            qm.getUser(function(user){\n                if(!user){\n                    callback(false);\n                    qmLog.info(\"userIsOlderThanXSeconds: No user to check if older than \"+secondsCutoff +\" seconds\");\n                    return;\n                }\n                if(!user.userRegistered){\n                    callback(false);\n                    qmLog.info(\"userIsOlderThanXSeconds: No userRegistered property to check if older than \"+secondsCutoff +\" seconds\");\n                    return;\n                }\n                var ageInSeconds = qm.timeHelper.getUnixTimestampInSeconds() - qm.timeHelper.universalConversionToUnixTimeSeconds(user.userRegistered);\n                qmLog.info(\"userIsOlderThanXSeconds: User is \" + ageInSeconds + \" seconds old. createdAt: \" + user.userRegistered);\n                callback(ageInSeconds > secondsCutoff);\n            });\n        }\n    },\n    commonVariablesHelper: {\n        getCommonVariablesFromApi: function(params, successHandler, errorHandler){\n            params = qm.api.addGlobalParams(params);\n            if(!params.sort || params.sort.indexOf('latestMeasurementTime') !== -1){params.sort = '-numberOfUserVariables';}\n            params.commonOnly = true;\n            if(!params.limit){params.limit = 50;}\n            var cacheKey = 'getCommonVariablesFromApi';\n            var cachedData = qm.api.cacheGet(params, cacheKey);\n            if(cachedData && successHandler){\n                //successHandler(cachedData);\n                //return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.VariablesApi();\n            function callback(error, data, response) {\n                if (data) { qm.commonVariablesHelper.saveToLocalStorage(data); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, cacheKey);\n            }\n            apiInstance.getVariables(params, callback);\n        },\n        putCommonVariablesInLocalStorageUsingApi: function(successHandler){\n            qm.commonVariablesHelper.getCommonVariablesFromApi({limit: 50}, function(commonVariables){\n                if(successHandler){successHandler(commonVariables);}\n            }, function(error){\n                qmLog.error(error);\n            });\n        },\n        saveToLocalStorage: function(commonVariables){\n            if(!commonVariables){\n                qmLog.error(\"No commonVariables provided to saveToLocalStorage\");\n                return;\n            }\n            commonVariables = qm.arrayHelper.convertToArrayIfNecessary(commonVariables);\n            var definitelyCommonVariables = [];\n            for (var i = 0; i < commonVariables.length; i++) {\n                if(!commonVariables[i].userId){\n                    definitelyCommonVariables.push(commonVariables[i]);\n                }\n            }\n            qm.localForage.saveWithUniqueId(qm.items.commonVariables, definitelyCommonVariables);\n        },\n        getCommonVariablesFromJsonFile: function (requestParams, successHandler, errorHandler) {\n            var commonVariables = qm.staticData.commonVariables;\n            commonVariables = qm.arrayHelper.filterByRequestParams(commonVariables, requestParams);\n            if(commonVariables && commonVariables.length){\n                successHandler(commonVariables);\n            } else {\n                var message = \"No CommonVariablesFromJsonFile found matching params\" + JSON.stringify(requestParams);\n                qmLog.info(message);\n                if(errorHandler){errorHandler(message);}\n            }\n        },\n        getFromLocalStorage: function(requestParams, successHandler, errorHandler){\n            if(!successHandler){\n                qmLog.error(\"No successHandler provided to commonVariables getFromLocalStorage\");\n                return;\n            }\n            if(!requestParams){requestParams = {};}\n            var commonVariables;\n            function getFromLocalForage(fromJson){\n                qm.localForage.getElementsWithRequestParams(qm.items.commonVariables, requestParams, function (fromLocalForage) {\n                    if(!fromLocalForage){\n                        commonVariables = fromJson;\n                    } else if(fromJson){\n                        commonVariables = fromLocalForage.concat(fromJson);\n                    }\n                    if(!requestParams.sort){commonVariables = qm.variablesHelper.defaultVariableSort(commonVariables);}\n                    successHandler(commonVariables);\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){errorHandler(error);}\n                });\n            }\n            qm.commonVariablesHelper.getCommonVariablesFromJsonFile(requestParams, function (commonVariables) {\n                getFromLocalForage(commonVariables);\n            }, function (error) {\n                qmLog.info(error);\n                getFromLocalForage();\n            });\n        },\n        getFromLocalStorageOrApi: function(params, successHandler, errorHandler){\n            qm.commonVariablesHelper.getFromLocalStorage(params, function(variables){\n                if(variables && variables.length){\n                    if(successHandler){successHandler(variables);}\n                    return;\n                }\n                qm.commonVariablesHelper.getCommonVariablesFromApi(params, function (variables) {\n                    if(successHandler){successHandler(variables);}\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){errorHandler(error);}\n                });\n            }, errorHandler);\n        },\n        refreshIfNecessary: function(){\n            //putCommonVariablesInLocalStorageUsingJsonFile();\n            qm.commonVariablesHelper.getFromLocalStorage({}, function (commonVariables) {\n                if(!commonVariables || !commonVariables.length){\n                    qm.commonVariablesHelper.putCommonVariablesInLocalStorageUsingApi();\n                }\n            });\n        }\n    },\n    userVariables: {\n        saveToLocalStorage: function(variables){\n            if(!variables){\n                qmLog.error(\"No variables provided to userVariables.saveToLocalStorage\");\n                return;\n            }\n            variables = qm.arrayHelper.convertToArrayIfNecessary(variables);\n            var definitelyUserVariables = [];\n            var commonVariables = [];\n            for (var i = 0; i < variables.length; i++) {\n                if(variables[i].userId){\n                    definitelyUserVariables.push(variables[i]);\n                } else {\n                    commonVariables.push(variables[i]);\n                }\n            }\n            qm.localForage.saveWithUniqueId(qm.items.userVariables, definitelyUserVariables);\n            if(commonVariables.length){qm.localForage.saveWithUniqueId(qm.items.commonVariables, commonVariables);}\n        },\n        updateLatestMeasurementTime: function(variableName, lastValue){\n            qm.storage.getUserVariableByName(variableName, true, lastValue);\n        },\n        getFromApi: function(params, successHandler, errorHandler){\n            if(!params){params = {};}\n            params = JSON.parse(JSON.stringify(params)); // Decouple API search params so we don't mess up original local search params\n            if(!params.sort || params.sort.indexOf('numberOfUserVariables') !== -1){params.sort = '-latestMeasurementTime';}\n            if(!params.limit){params.limit = 50;}\n            params = qm.api.addGlobalParams(params);\n            var cacheKey = 'getUserVariablesFromApi';\n            var cachedData = qm.api.cacheGet(params, cacheKey);\n            if(cachedData && successHandler){\n                successHandler(cachedData);\n                return;\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.VariablesApi();\n            function callback(error, data, response) {\n                if (data) { qm.userVariables.saveToLocalStorage(data); }\n                qm.api.generalResponseHandler(error, data, response, successHandler, errorHandler, params, cacheKey);\n            }\n            apiInstance.getVariables(params, callback);\n        },\n        getByNameFromApi: function(variableName, params, successHandler, errorHandler){\n            if(!params){params = {};}\n            params.name = variableName;\n            qm.userVariables.getFromApi(params, function (userVariables) {\n                qm.userVariables.saveToLocalStorage(userVariables);\n                successHandler(userVariables[0]);\n            }, errorHandler)\n        },\n        getByName: function(variableName, params, refresh, successHandler, errorHandler){\n            if(!params){params = {};}\n            if(!variableName){variableName = qm.getPrimaryOutcomeVariable().name;}\n            if(refresh){\n                qm.userVariables.getByNameFromApi(variableName, params, successHandler, errorHandler);\n                return;\n            }\n            qm.localForage.searchByProperty(qm.items.userVariables, 'name', variableName, function (userVariables) {\n                if(userVariables && userVariables.length){\n                    var userVariable = userVariables[0];\n                    /** @namespace userVariable.charts.lineChartWithoutSmoothing */\n                    if(typeof params.includeCharts === \"undefined\" ||\n                        (userVariable.charts && userVariable.charts.lineChartWithoutSmoothing && userVariable.charts.lineChartWithoutSmoothing.highchartConfig)){\n                        successHandler(userVariable);\n                        return;\n                    }\n                }\n                qm.userVariables.getByNameFromApi(variableName, params, successHandler, errorHandler);\n            });\n        },\n        getFromLocalStorage: function(requestParams, successHandler, errorHandler){\n            if(!requestParams){requestParams = {};}\n            qm.localForage.getElementsWithRequestParams(qm.items.userVariables, requestParams, function (data) {\n                if(!requestParams.sort){data = qm.variablesHelper.defaultVariableSort(data);}\n                successHandler(data);\n            }, function (error) {\n                qmLog.error(error);\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getFromLocalStorageOrApi: function(params, successHandler, errorHandler){\n            params = params || {};\n            qm.userVariables.getFromLocalStorage(params, function(userVariables){\n                function doWeHaveEnoughVariables(variables){\n                    var numberOfMatchingLocalVariablesRequiredToSkipAPIRequest = 2;\n                    return variables && variables.length > numberOfMatchingLocalVariablesRequiredToSkipAPIRequest;  //Do API search if only 1 local result because I can't get \"Remeron\" because I have \"Remeron Powder\" locally\n                }\n                function doWeHaveExactMatch(variables, variableSearchQuery){\n                    if(!variableSearchQuery){return true;}\n                    return qm.arrayHelper.arrayHasItemWithNameProperty(variables) && variables[0].name.toLowerCase() === variableSearchQuery.toLowerCase(); // No need for API request if we have exact match\n                }\n                function shouldWeMakeVariablesSearchAPIRequest(variables, variableSearchQuery){\n                    var haveEnough = doWeHaveEnoughVariables(variables);\n                    var exactMatch = doWeHaveExactMatch(variables, variableSearchQuery);\n                    return !haveEnough && !exactMatch;\n                }\n                if(userVariables && userVariables.length && !shouldWeMakeVariablesSearchAPIRequest(userVariables, params.searchPhrase)){\n                    successHandler(userVariables);\n                    qmLog.info(userVariables.length + \" user variables matching \" + JSON.stringify(params) + \" in local storage\");\n                    return;\n                }\n                qmLog.info(\"No user variables matching \" + JSON.stringify(params) + \" in local storage\");\n                qm.userVariables.getFromApi(params, function (userVariables) {\n                    qmLog.info(userVariables.length + \" user variables matching \" + JSON.stringify(params) + \" from API\");\n                    successHandler(userVariables);\n                }, function (error) {\n                    qmLog.error(error);\n                    errorHandler(error);\n                });\n            });\n        },\n        refreshIfNumberOfRemindersGreaterThanUserVariables: function(){\n            if(!qm.getUser()){\n                qmLog.info(\"No user so not going to refreshIfNumberOfRemindersGreaterThanUserVariables\");\n                return;\n            }\n            qm.reminderHelper.getNumberOfReminders(function (number) {\n                if(number){\n                    qm.userVariables.getFromLocalStorage({}, function (userVariables) {\n                        if(!userVariables || userVariables.length < number){\n                            qm.userVariables.getFromApi({limit: number + 1});\n                        }\n                    });\n                }\n            })\n        }\n    },\n    variablesHelper: {\n        getFromLocalStorageOrApi: function (requestParams, successHandler, errorHandler){\n            requestParams = requestParams || {};\n            if(!requestParams.searchPhrase || requestParams.searchPhrase === \"\"){requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest = 20;}\n            if(requestParams.searchPhrase && requestParams.searchPhrase.length > 2){requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest = 3;}\n            if(requestParams.searchPhrase && requestParams.searchPhrase.length > 3){requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest = 1;}\n            if(requestParams.searchPhrase && requestParams.searchPhrase.length > 4){requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest = 0;}\n            function sortUpdateSubtitlesAndReturnVariables(variables) {\n                if(!requestParams.sort){variables = qm.variablesHelper.defaultVariableSort(variables);}\n                variables = qm.variablesHelper.updateSubtitles(variables, requestParams);\n                if(successHandler){successHandler(variables);}\n            }\n            function getFromApi() {\n                qm.userVariables.getFromApi(requestParams, function (variables) {\n                    sortUpdateSubtitlesAndReturnVariables(variables);\n                }, function (error) {\n                    qmLog.error(error);\n                    if(errorHandler){\n                        if(typeof errorHandler !== \"function\") {\n                            qmLog.error(\"errorHandler is not a function! It is: \", errorHandler);\n                        }\n                        errorHandler(error);\n                    }\n                })\n            }\n            if(requestParams.excludeLocal){ // excludeLocal is necessary for complex filtering like tag searches\n                getFromApi();\n                return;\n            }\n            qm.variablesHelper.getUserAndCommonVariablesFromLocalStorage(requestParams, function(variables){\n                if(variables && variables.length > requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest){\n                    sortUpdateSubtitlesAndReturnVariables(variables);\n                    return;\n                }\n                // Using reminders in variable searches creates duplicates and lots of problems\n                // var reminders = qm.reminderHelper.getTrackingRemindersFromLocalStorage(requestParams);\n                // if(reminders && reminders.length  > requestParams.minimumNumberOfResultsRequiredToAvoidAPIRequest) {\n                //     sortAndReturnVariables(reminders);\n                //     return;\n                // }\n                getFromApi();\n            });\n        },\n        putManualTrackingFirst: function (variables) { // Don't think we need to do this anymore since we sort by number of reminders maybe?\n            if(!variables){\n                qmLog.error(\"no variables provided to putManualTrackingFirst\");\n                return;\n            }\n            var manualTracking = variables.filter(function (variableToCheck) {\n                return variableToCheck.manualTracking === true;\n            });\n            var nonManual = variables.filter(function (variableToCheck) {\n                return variableToCheck.manualTracking !== true;\n            });\n            var merged = manualTracking.concat(nonManual);\n            return merged;\n        },\n        defaultVariableSort: function (variables) {\n            if(!variables){\n                qmLog.info(\"no variables provided to putManualTrackingFirst\");\n                return null;\n            }\n            variables = qm.variablesHelper.putManualTrackingFirst(variables);\n            function getValue(object){\n                return object.lastSelectedAt || object.latestMeasurementTime || object.numberOfTrackingReminders || object.numberOfUserVariables;\n            }\n            variables.sort(function(a, b) {\n                var aValue = getValue(a);\n                var bValue = getValue(b);\n                if(aValue < bValue) return 1;\n                if(aValue > bValue) return -1;\n                return 0;\n            });\n            return variables;\n        },\n        getUserAndCommonVariablesFromLocalStorage: function(requestParams, successHandler){\n            requestParams = requestParams || {};\n            qm.userVariables.getFromLocalStorage(requestParams, function(userVariables){\n                userVariables = userVariables || [];\n                if(!requestParams.includePublic){\n                    successHandler(userVariables);\n                    return;\n                }\n                qm.commonVariablesHelper.getFromLocalStorage(requestParams, function (commonVariables) {\n                    commonVariables = commonVariables || [];\n                    var both = userVariables.concat(commonVariables);\n                    both = qm.arrayHelper.getUnique(both, 'id');\n                    successHandler(both);\n                }, function(error){\n                    qmLog.info(error);\n                    successHandler(userVariables);\n                });\n            });\n        },\n        updateSubtitles: function (variables, requestParams){\n            if(requestParams && requestParams.sort) {\n                var sort = requestParams.sort;\n                sort = sort.replace(\"-\", \"\");\n                for (var i = 0; i < variables.length; i++) {\n                    if (sort.toLowerCase().indexOf(\"correlation\")) {\n                        if (variables[i][sort]) {\n                            var number = variables[i][sort];\n                            variables[i].subtitle = number + \" studies\";\n                        }\n                    }\n                }\n            }\n            return variables;\n        }\n    },\n    variableCategoryHelper: {\n        getVariableCategoriesFromJsonFile: function (successHandler, errorHandler) {\n            qm.api.getViaXhrOrFetch('data/variableCategories.json', function(variableCategories){\n                if(!variableCategories){\n                    qmLog.error(\"No variable categories from json file!\");\n                } else {\n                    qm.globalHelper.setItem(qm.items.variableCategories, variableCategories);  // Let's not use storage so user will have updated version\n                }\n                successHandler(variableCategories);\n            }, function (error) {\n                if(errorHandler){errorHandler(error);}\n            });\n        },\n        getVariableCategoriesFromApi: function (successHandler, errorHandler) {\n            qmLog.info(\"Getting variable categories from API...\");\n            function globalSuccessHandler(variableCategories){\n                qm.localForage.setItem(qm.items.variableCategories, variableCategories);\n                if(successHandler){successHandler(variableCategories);}\n            }\n            qm.api.configureClient();\n            var apiInstance = new Quantimodo.VariablesApi();\n            function callback(error, data, response) {\n                qm.api.generalResponseHandler(error, data, response, globalSuccessHandler, errorHandler, {}, 'getVariableCategoriesFromApi');\n            }\n            apiInstance.getVariableCategories(callback);\n        },\n        getVariableCategoriesFromGlobalsOrApi: function(successHandler, errorHandler){\n            if (qm.variableCategoryHelper.getVariableCategoriesFromGlobals()) {\n                successHandler(qm.variableCategoryHelper.getVariableCategoriesFromGlobals());\n            } else {\n                qm.variableCategoryHelper.getVariableCategoriesFromJsonFile(function (variableCategories) {\n                    if(!variableCategories){\n                        qm.variableCategoryHelper.getVariableCategoriesFromApi(function (variableCategories) {\n                            successHandler(variableCategories);\n                        }, errorHandler)\n                    } else {\n                        successHandler(variableCategories);\n                    }\n                }, errorHandler)\n            }\n        },\n        getVariableCategoriesFromGlobals: function(){\n            return qm.globalHelper.getItem(qm.items.variableCategories);\n        },\n        getVariableCategory: function(variableCategoryName, successHandler){\n            if(!successHandler){\n                var variableCategories = qm.variableCategoryHelper.getVariableCategoriesFromGlobals();\n                if(variableCategories){\n                    return variableCategories.find(function(variableCategory){\n                        if(variableCategory.name.toLowerCase() === variableCategoryName.toLowerCase()){return true;}\n                        if(variableCategory.synonyms && variableCategory.synonyms.indexOf(variableCategoryName) !== -1){return true;}\n                        return variableCategory.variableCategoryNameSingular && variableCategory.variableCategoryNameSingular.toLowerCase() === variableCategoryName.toLowerCase();\n                    });\n                }\n            }\n            qm.variableCategoryHelper.getVariableCategoriesFromGlobalsOrApi(function (variableCategories) {\n               var match = variableCategories.find(function (category) {\n                    category.name = variableCategoryName;\n               });\n                successHandler(match);\n            });\n        }\n    },\n    visualizer: {\n        showing: false,\n        hideVisualizer: function(){\n            //qm.appContainer.setOpacity(1);\n            qmLog.info(\"Hiding visualizer\");\n            var visualizer = qm.visualizer.getElement();\n            if(visualizer){\n                visualizer.style.display = \"none\";\n            } else {\n                qmLog.info(\"qm.visualizer Element not found\");\n            }\n\n        },\n        show: function(type){\n            qmLog.info(\"Showing visualizer\");\n            //var visualizer = qm.visualizer.getElement();\n            //visualizer.style.display = \"block\";\n            setTimeout(function(){\n                //qm.visualizer.rainbowCircleVisualizer();\n                qm.visualizer.visualizeVoice('siri');\n            }, 1);\n        },\n        getElement: function(){\n            var element = document.querySelector('#rainbow-canvas');\n            return element;\n        },\n        toggle: function () {\n            if(qm.visualizer.showing){\n                qm.visualizer.hideVisualizer();\n            } else {\n                qm.visualizer.show();\n            }\n        },\n        rainbowCircleVisualizer: function(){\n            /* SOUND */\n            // Audio vars\n            var audioCtx = new AudioContext(),\n                analyser,\n                bufferLength,\n                step,\n                frequencyData,\n                waveData;\n            // Get microphone input\n            if(navigator.webkitGetUserMedia) {\n                navigator.webkitGetUserMedia(\n                    { audio: true },\n                    doAudioStuff,\n                    function(error) {\n                        canvas.width = 0;\n                        canvas.height = 0;\n                        qmLog.error('Audio error: ' + error.name);\n                    }\n                );\n            } else {\n                navigator.mediaDevices.getUserMedia({audio: true})\n                    .then(doAudioStuff)\n                    .catch(function(error) {\n                        qmLog.error('Audio error: ' + error.name);\n                    });\n            }\n            // Do the thing\n            function doAudioStuff(mediaStream){\n                window.streamReference = mediaStream;\n                analyser = audioCtx.createAnalyser();\n                analyser.smoothingTimeConstant = 0.97;\n                analyser.fftSize = 1024;\n                step = analyser.fftSize / 16;\n                bufferLength = analyser.frequencyBinCount;\n                frequencyData = new Uint8Array(bufferLength);\n                waveData = new Uint8Array(bufferLength);\n                window.source = audioCtx.createMediaStreamSource(mediaStream);\n                source.connect(analyser);\n                animate();\n            }\n            // Not used\n            function averageVolume(data) {\n                var value = 0,\n                    l = data.length;\n                for(var i =0; i < l; i++) {\n                    value += data[i];\n                }\n                return value / l;\n            }\n            /* VISION */\n            var canvas = document.getElementById('rainbow-canvas'),\n                ctx = canvas.getContext('2d'),\n                w, h, w2, h2, h3, h4; // Canvas sizes\n            //if(zIndex !== null){canvas.style.zIndex = zIndex;}\n            function setCanvasSizes() {\n                w = canvas.width = window.innerWidth,\n                    h = canvas.height = window.innerHeight,\n                    w2 = w/2,\n                    h2 = h/2,\n                    h3 = h/3,\n                    h4 = h/4;\n            }\n            setCanvasSizes();\n            function byteToNum(byte,min,max) {\n                var hue = (byte / 128) * (max - min) + min;\n                return Math.round(hue);\n            }\n            /* SOUND & VISION */\n            // Animate frames\n            function animate() {\n                analyser.getByteFrequencyData(frequencyData);\n                analyser.getByteTimeDomainData(waveData);\n                ctx.strokeStyle = 'hsl(' + byteToNum(frequencyData[0],1000,3600) + ', 90%, 60%)';\n                ctx.fillStyle = 'hsla(250,10%,10%,0.09)';\n                ctx.fillRect(0,0,w,h);\n                /* Lines */\n                ctx.beginPath();\n                for(var i = 0; i < bufferLength; i++) {\n                    ctx.lineTo(Math.sin(frequencyData[i * step] / 20) * h3 + w2,\n                        Math.cos(frequencyData[i * step] / 20) * h3 + h2);\n                }\n                ctx.closePath();\n                ctx.stroke();\n                /* Circles */\n                for(var i = 0; i < bufferLength; i++) {\n                    ctx.beginPath();\n                    ctx.arc(w2, h2, byteToNum(waveData[i * step] + frequencyData[i * step],h4,h3), 0, Math.PI*2 );\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                requestAnimationFrame(animate);\n            }\n            window.addEventListener('resize',function(){\n                setCanvasSizes();\n            });\n        },\n        siriVisualizer: function(){\n            // the canvas size\n            var WIDTH = 1000;\n            var HEIGHT = 400;\n            var ctx = canvas.getContext(\"2d\");\n            // options to tweak the look\n            var opts = {\n                smoothing: 0.6,\n                fft: 5,\n                minDecibels: -70,\n                scale: 0.2,\n                glow: 10,\n                color1: [203, 36, 128],\n                color2: [41, 200, 192],\n                color3: [24, 137, 218],\n                fillOpacity: 0.6,\n                lineWidth: 1,\n                blend: \"screen\",\n                shift: 50,\n                width: 60,\n                amp: 1 };\n            if(typeof dat !== \"undefined\"){\n                var gui = new dat.GUI(); // Interactive dat.GUI controls\n                gui.close(); // hide them by default\n                // connect gui to opts\n                gui.addColor(opts, \"color1\");\n                gui.addColor(opts, \"color2\");\n                gui.addColor(opts, \"color3\");\n                gui.add(opts, \"fillOpacity\", 0, 1);\n                gui.add(opts, \"lineWidth\", 0, 10).step(1);\n                gui.add(opts, \"glow\", 0, 100);\n                gui.add(opts, \"blend\", [\n                    \"normal\",\n                    \"multiply\",\n                    \"screen\",\n                    \"overlay\",\n                    \"lighten\",\n                    \"difference\"]);\n                gui.add(opts, \"smoothing\", 0, 1);\n                gui.add(opts, \"minDecibels\", -100, 0);\n                gui.add(opts, \"amp\", 0, 5);\n                gui.add(opts, \"width\", 0, 60);\n                gui.add(opts, \"shift\", 0, 200);\n            }\n            var context = new AudioContext();\n            var analyser = context.createAnalyser();\n            // Array to hold the analyzed frequencies\n            var freqs = new Uint8Array(analyser.frequencyBinCount);\n            navigator.getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia;\n            navigator.getUserMedia({ audio: true }, onStream, onStreamError);\n            /**\n             * Create an input source from the user media stream, connect it to\n             * the analyser and start the visualization.\n             */\n            function onStream(mediaStream) {\n                window.streamReference = mediaStream;\n                var input = context.createMediaStreamSource(mediaStream);\n                input.connect(analyser);\n                requestAnimationFrame(visualize);\n            }\n            /**\n             * Display an error message.\n             */\n            function onStreamError(e) {\n                document.body.innerHTML = \"<h1>This pen only works with https://</h1>\";\n                console.error(e);\n            }\n            /**\n             * Utility function to create a number range\n             */\n            function range(i) {\n                return Array.from(Array(i).keys());\n            }\n            // shuffle frequencies so that neighbors are not too similar\n            var shuffle = [1, 3, 0, 4, 2];\n            /**\n             * Pick a frequency for the given channel and value index.\n             *\n             * The channel goes from 0 to 2 (R/G/B)\n             * The index goes from 0 to 4 (five peaks in the curve)\n             *\n             * We have 32 (2^opts.fft) frequencies to choose from and\n             * we want to visualize most of the spectrum. This function\n             * returns the bands from 0 to 28 in a nice distribution.\n             */\n            function freq(channel, i) {\n                var band = 2 * channel + shuffle[i] * 6;\n                return freqs[band];\n            }\n            /**\n             * Returns the scale factor fot the given value index.\n             * The index goes from 0 to 4 (curve with 5 peaks)\n             */\n            function scale(i) {\n                var x = Math.abs(2 - i); // 2,1,0,1,2\n                var s = 3 - x; // 1,2,3,2,1\n                return s / 3 * opts.amp;\n            }\n            /**\n             *  This function draws a path that roughly looks like this:\n             *       .\n             * __/\\_/ \\_/\\__\n             *   \\/ \\ / \\/\n             *       '\n             *   1 2 3 4 5\n             *\n             * The function is called three times (with channel 0/1/2) so that the same\n             * basic shape is drawn in three different colors, slightly shifted and\n             * each visualizing a different set of frequencies.\n             */\n            function path(channel) {\n                // Read color1, color2, color2 from the opts\n                var color = opts[\"color\" + (channel + 1)].map(Math.floor);\n                // turn the [r,g,b] array into a rgba() css color\n                ctx.fillStyle = \"rgba(\" + color + \", \" + opts.fillOpacity + \")\";\n                // set stroke and shadow the same solid rgb() color\n                ctx.strokeStyle = ctx.shadowColor = \"rgb(\" + color + \")\";\n                ctx.lineWidth = opts.lineWidth;\n                ctx.shadowBlur = opts.glow;\n                ctx.globalCompositeOperation = opts.blend;\n                var m = HEIGHT / 2; // the vertical middle of the canvas\n                // for the curve with 5 peaks we need 15 control points\n                // calculate how much space is left around it\n                var offset = (WIDTH - 15 * opts.width) / 2;\n                // calculate the 15 x-offsets\n                var x = range(15).map(function (i) {return offset + channel * opts.shift + i * opts.width;});\n                // pick some frequencies to calculate the y values\n                // scale based on position so that the center is always bigger\n                var y = range(5).map(function (i) {return Math.max(0, m - scale(i) * freq(channel, i));});\n                var h = 2 * m;\n                ctx.beginPath();\n                ctx.moveTo(0, m); // start in the middle of the left side\n                ctx.lineTo(x[0], m + 1); // straight line to the start of the first peak\n                ctx.bezierCurveTo(x[1], m + 1, x[2], y[0], x[3], y[0]); // curve to 1st value\n                ctx.bezierCurveTo(x[4], y[0], x[4], y[1], x[5], y[1]); // 2nd value\n                ctx.bezierCurveTo(x[6], y[1], x[6], y[2], x[7], y[2]); // 3rd value\n                ctx.bezierCurveTo(x[8], y[2], x[8], y[3], x[9], y[3]); // 4th value\n                ctx.bezierCurveTo(x[10], y[3], x[10], y[4], x[11], y[4]); // 5th value\n                ctx.bezierCurveTo(x[12], y[4], x[12], m, x[13], m); // curve back down to the middle\n                ctx.lineTo(1000, m + 1); // straight line to the right edge\n                ctx.lineTo(x[13], m - 1); // and back to the end of the last peak\n                // now the same in reverse for the lower half of out shape\n                ctx.bezierCurveTo(x[12], m, x[12], h - y[4], x[11], h - y[4]);\n                ctx.bezierCurveTo(x[10], h - y[4], x[10], h - y[3], x[9], h - y[3]);\n                ctx.bezierCurveTo(x[8], h - y[3], x[8], h - y[2], x[7], h - y[2]);\n                ctx.bezierCurveTo(x[6], h - y[2], x[6], h - y[1], x[5], h - y[1]);\n                ctx.bezierCurveTo(x[4], h - y[1], x[4], h - y[0], x[3], h - y[0]);\n                ctx.bezierCurveTo(x[2], h - y[0], x[1], m, x[0], m);\n                ctx.lineTo(0, m); // close the path by going back to the start\n                ctx.fill();\n                ctx.stroke();\n            }\n            /**\n             * requestAnimationFrame handler that drives the visualization\n             */\n            function visualize() {\n                // set analysert props in the loop react on dat.gui changes\n                analyser.smoothingTimeConstant = opts.smoothing;\n                analyser.fftSize = Math.pow(2, opts.fft);\n                analyser.minDecibels = opts.minDecibels;\n                analyser.maxDecibels = 0;\n                analyser.getByteFrequencyData(freqs);\n                // set size to clear the canvas on each frame\n                canvas.width = WIDTH;\n                canvas.height = HEIGHT;\n                // draw three curves (R/G/B)\n                path(0);\n                path(1);\n                path(2);\n                // schedule next paint\n                requestAnimationFrame(visualize);\n            }\n        },\n        visualizeVoice: function(type, zIndex){\n            if(type === 'siri'){return qm.visualizer.siriVisualizer();}\n            if(type === 'rainbow'){return qm.visualizer.rainbowCircleVisualizer(zIndex);}\n            var paths = document.getElementsByTagName('path');\n            var visualizer = document.getElementById('visualizer');\n            if(!visualizer){return;}\n            var mask = visualizer.getElementById('mask');\n            var h = document.getElementsByTagName('h1')[0];\n            var path;\n            var report = 0;\n            var soundAllowed = function (stream) {\n                //Audio stops listening in FF without // window.persistAudioStream = stream;\n                //https://bugzilla.mozilla.org/show_bug.cgi?id=965483\n                //https://support.mozilla.org/en-US/questions/984179\n                window.persistAudioStream = stream;\n                h.innerHTML = \"Thanks\";\n                h.setAttribute('style', 'opacity: 0;');\n                var audioContent = new AudioContext();\n                var audioStream = audioContent.createMediaStreamSource( stream );\n                var analyser = audioContent.createAnalyser();\n                audioStream.connect(analyser);\n                analyser.fftSize = 1024;\n                var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\n                visualizer.setAttribute('viewBox', '0 0 255 255');\n                //Through the frequencyArray has a length longer than 255, there seems to be no\n                //significant data after this point. Not worth visualizing.\n                for (var i = 0 ; i < 255; i++) {\n                    path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                    path.setAttribute('stroke-dasharray', '4,1');\n                    mask.appendChild(path);\n                }\n                var doDraw = function () {\n                    requestAnimationFrame(doDraw);\n                    analyser.getByteFrequencyData(frequencyArray);\n                    var adjustedLength;\n                    for (var i = 0 ; i < 255; i++) {\n                        adjustedLength = Math.floor(frequencyArray[i]) - (Math.floor(frequencyArray[i]) % 5);\n                        paths[i].setAttribute('d', 'M '+ (i) +',255 l 0,-' + adjustedLength);\n                    }\n                }\n                doDraw();\n            }\n            var soundNotAllowed = function (error) {\n                h.innerHTML = \"You must allow your microphone.\";\n                console.log(error);\n            }\n            /*window.navigator = window.navigator || {};\n            /*navigator.getUserMedia =  navigator.getUserMedia       ||\n                                      navigator.webkitGetUserMedia ||\n                                      navigator.mozGetUserMedia    ||\n                                      null;*/\n            navigator.getUserMedia({audio:true}, soundAllowed, soundNotAllowed);\n        },\n    },\n    webNotifications: {\n        initializeFirebase: function(){\n            if(qm.firebase){\n                qmLog.debug(\"Firebase already initialized\");\n                return qm.firebase;\n            }\n            var config = {\n                apiKey: \"AIzaSyAro7_WyPa9ymH5znQ6RQRU2CW5K46XaTg\",\n                authDomain: \"quantimo-do.firebaseapp.com\",\n                databaseURL: \"https://quantimo-do.firebaseio.com\",\n                projectId: \"quantimo-do\",\n                storageBucket: \"quantimo-do.appspot.com\",\n                messagingSenderId: \"1052648855194\"\n            };\n            console.log(\"firebase.initializeApp(config)\");\n            qm.firebase = firebase.initializeApp(config);\n            return qm.firebase;\n        },\n        registerServiceWorker: function () {\n            if(qm.platform.browser.isFirefox() && window.location.href.indexOf(\"herokuapp\") !== -1){\n                qmLog.info(\"serviceWorker doesn't work in Firefox tests for some reason\");\n                return false;\n            }\n            if(qm.serviceWorker){\n                qmLog.debug(\"serviceWorker already registered\");\n                return false;\n            }\n            if(!qm.platform.isWeb()){\n                qmLog.debug(\"Not registering service worker because not on Web\");\n                return false;\n            }\n            try {\n                qm.webNotifications.initializeFirebase();\n            } catch (e){\n                qmLog.error(e.message, e, e);\n                return false;\n            }\n            // Service worker must be served from same origin with no redirect so we serve directly with nginx\n            var serviceWorkerUrl = qm.urlHelper.getIonicAppBaseUrl()+'firebase-messaging-sw.js';\n            qmLog.info(\"Loading service worker from \" + serviceWorkerUrl);\n            if(typeof navigator.serviceWorker === \"undefined\"){\n                qmLog.error(\"navigator.serviceWorker is not defined!\");\n                return false;\n            }\n            try {\n                navigator.serviceWorker.register(serviceWorkerUrl)\n                    .then(function(registration) {\n                        var messaging = firebase.messaging();\n                        messaging.useServiceWorker(registration);\n                        qm.webNotifications.subscribeUser(messaging);\n                    });\n                qm.serviceWorker = navigator.serviceWorker;\n                return qm.serviceWorker;\n            } catch (e){\n                qmLog.error(e.message, e, e);\n                return false;\n            }\n        },\n        subscribeUser: function(messaging) {\n            messaging.requestPermission()\n                .then(function() {\n                    console.log('Notification permission granted.');\n                    // Get Instance ID token. Initially this makes a network call, once retrieved\n                    // subsequent calls to getToken will return from cache.\n                    messaging.getToken()\n                        .then(function(currentToken) {\n                            if (currentToken) {\n                                console.log(\"FB token: \"+ currentToken);\n                                var deviceTokenOnServer = qm.storage.getItem(qm.items.deviceTokenOnServer);\n                                if(!deviceTokenOnServer || deviceTokenOnServer !== currentToken){\n                                    qm.webNotifications.postWebPushSubscriptionToServer(currentToken);\n                                }\n                                //updateUIForPushEnabled(currentToken);\n                            } else {\n                                // Show permission request.\n                                console.log('No Instance ID token available. Request permission to generate one.');\n                                // Show permission UI.\n                                //updateUIForPushPermissionRequired();\n                                qm.webNotifications.postWebPushSubscriptionToServer(false);\n                            }\n                        })\n                        .catch(function(err) {\n                            qmLog.error('An error occurred while retrieving token. ', null, err);\n                            //showToken('Error retrieving Instance ID token. ', err);\n                            //qm.webNotifications.postWebPushSubscriptionToServer(false);\n                        });\n                })\n                .catch(function(err) {\n                    console.log('Unable to get permission to notify.', err);\n                });\n        },\n        postWebPushSubscriptionToServer: function (deviceTokenString) {\n            if (deviceTokenString) {\n                console.log(\"Got token: \" + deviceTokenString);\n                qm.api.configureClient();\n                var apiInstance = new Quantimodo.NotificationsApi();\n                function callback(error, data, response) {\n                    if(!error){\n                        qm.storage.setItem(qm.items.deviceTokenOnServer, deviceTokenString);\n                    } else {\n                        var errorMessage = qm.api.getErrorMessageFromResponse(error, response);\n                        if(errorMessage.toLowerCase().indexOf('already exists') !== -1){\n                            qm.storage.setItem(qm.items.deviceTokenOnServer, deviceTokenString);\n                            return;\n                        }\n                    }\n                    qm.api.generalResponseHandler(error, data, response, null, null, null, 'postWebPushSubscriptionToServer');\n                }\n                var params = qm.api.addGlobalParams({'platform': qm.platform.browser.get(), deviceToken: deviceTokenString});\n                apiInstance.postDeviceToken(params, callback);\n            }\n        }\n    },\n    windowHelper: {\n        scrollToTop: function(){\n            $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\n            return false;\n        }\n    }\n};\nqm.urlHelper.redirectToHttpsIfNecessary();","/** @namespace window.qmLog */\nvar ratingPopupHeight, ratingPopupWidth;\nvar qmPopup = {\n    trackingReminderNotification: null\n};\nfunction setFaceButtonListeners() {\n    qmLog.pushDebug(\"popup: Setting face button onclick listeners\");\n    document.getElementById('buttonMoodDepressed').onclick = onFaceButtonClicked;\n    document.getElementById('buttonMoodSad').onclick = onFaceButtonClicked;\n    document.getElementById('buttonMoodOk').onclick = onFaceButtonClicked;\n    document.getElementById('buttonMoodHappy').onclick = onFaceButtonClicked;\n    document.getElementById('buttonMoodEcstatic').onclick = onFaceButtonClicked;\n    //document.getElementById('buttonInbox').onclick = inboxButtonClicked;\n    document.getElementById('question').onclick = inboxButtonClicked;\n}\nfunction setLastValueButtonListeners() {\n    qmLog.pushDebug(\"popup: Setting face button listeners\");\n    document.getElementById('lastValueButton').onclick = onLastValueButtonClicked;\n    document.getElementById('secondToLastValueButton').onclick = onLastValueButtonClicked;\n    document.getElementById('thirdToLastValueButton').onclick = onLastValueButtonClicked;\n    document.getElementById('snoozeButton').onclick = onLastValueButtonClicked;\n    document.getElementById('skipButton').onclick = onLastValueButtonClicked;\n    document.getElementById('buttonInbox').onclick = inboxButtonClicked;\n}\nfunction getVariableName() {\n    var variableName = window.qm.urlHelper.getParam('variableName');\n    if(variableName){\n        qmLog.debug(\"Got variableName \" + variableName + \" from url\");\n        return variableName;\n    }\n}\nfunction valenceNegative() {\n    if(!qmPopup.trackingReminderNotification){\n        qmLog.error(\"qmPopup.trackingReminderNotification not set!\");\n        qm.notifications.closePopup();\n    }\n    if(qmPopup.trackingReminderNotification.valence === \"negative\"){\n        return true;\n    }\n}\nvar inboxButtonClicked = function() {\n    window.qmLog.info('inboxButtonClicked');\n    if(typeof OverApps !== \"undefined\"){\n        window.qmLog.info('Calling OverApps.openApp');\n        //OverApps.openApp();\n        //OverApps.closeWebView();\n        OverApps.closeWebView();\n        OverApps.openApp();\n    } else {\n        window.qmLog.info('OverApps not defined');\n        qm.chrome.windowParams.fullInboxWindowParams.focused = true;\n        qm.chrome.createPopup(qm.chrome.windowParams.fullInboxWindowParams);\n        hidePopupPostNotificationsDeleteLocalAndClosePopup();\n    }\n};\nfunction hidePopupPostNotificationsDeleteLocalAndClosePopup() {\n    qmLog.pushDebug('popup: hidePopupPostNotificationsDeleteLocalAndClosePopup...');\n    hidePopup();\n    //showLoader();\n    if(window.notificationsSyncQueue){\n        qm.storage.deleteByPropertyInArray(qm.items.trackingReminderNotifications, 'variableName', window.notificationsSyncQueue);\n        qm.notifications.postTrackingReminderNotifications(window.notificationsSyncQueue, qm.notifications.closePopup,\n            1000); // 300 is too fast\n    } else {\n        qm.notifications.closePopup();\n    }\n}\nvar onFaceButtonClicked = function() {\n    var buttonId = this.id;\n    qmLog.pushDebug('popup onFaceButtonClicked: onFaceButtonClicked buttonId ' + buttonId);\n    var ratingValue; // Figure out what rating was selected\n    if (buttonId === \"buttonMoodDepressed\") {if(valenceNegative()){ ratingValue = 5; } else { ratingValue = 1;}\n    } else if (buttonId === \"buttonMoodSad\") {if(valenceNegative()){ ratingValue = 4; } else { ratingValue = 2;}\n    } else if (buttonId === \"buttonMoodOk\") {ratingValue = 3;\n    } else if (buttonId === \"buttonMoodHappy\") {if(valenceNegative()){ ratingValue = 2; } else { ratingValue = 4;}\n    } else if (buttonId === \"buttonMoodEcstatic\") {if(valenceNegative()){ ratingValue = 1; } else { ratingValue = 5;}}\n    if(!qmPopup.trackingReminderNotification){\n        qmLog.error(\"No qmPopup.trackingReminderNotification to post or add to queue!\");\n    } else {\n        qmLog.pushDebug('popup onFaceButtonClicked: qmPopup.trackingReminderNotification exists. Calling addToSyncQueueAndCloseOrUpdateQuestion..');\n        qmPopup.trackingReminderNotification.modifiedValue = ratingValue;\n    }\n    return addToSyncQueueAndCloseOrUpdateQuestion();\n    // TODO: Figure out how to send in background with chrome.extension.sendMessage(request);\n    //if(typeof chrome !== \"undefined\"){chrome.extension.sendMessage(request); } // Request our background script to upload it for us\n};\nfunction addToSyncQueueAndCloseOrUpdateQuestion() {\n    qmLog.pushDebug('popup: addToSyncQueueAndCloseOrUpdateQuestion...');\n    if(!window.notificationsSyncQueue){window.notificationsSyncQueue = [];}\n    if(qmPopup.trackingReminderNotification){\n        window.notificationsSyncQueue.push(qmPopup.trackingReminderNotification);\n        if(qmPopup.trackingReminderNotification.id){\n            qm.notifications.deleteById(qmPopup.trackingReminderNotification.id);\n        } else {\n            qm.notifications.deleteByVariableName(qmPopup.trackingReminderNotification.variableName); // TODO: Why was this commented?\n        }\n    }\n    qmPopup.trackingReminderNotification = qm.notifications.getMostRecentUniqueNotificationNotInSyncQueue();\n    if(!qmPopup.trackingReminderNotification){\n        qmLog.pushDebug('popup addToSyncQueueAndCloseOrUpdateQuestion: getMostRecentUniqueNotificationNotInSyncQueue returned nothing...');\n    }\n    if(window.notificationsSyncQueue.length > 10){\n        qmLog.pushDebug('popup addToSyncQueueAndCloseOrUpdateQuestion: notificationsSyncQueue.length > 10 so posting and closing popup...');\n    }\n    if(qmPopup.trackingReminderNotification && window.notificationsSyncQueue.length < 10){\n        qmLog.pushDebug('popup addToSyncQueueAndCloseOrUpdateQuestion: Calling updateQuestion for ' +\n            qmPopup.trackingReminderNotification.variableName + '..');\n        updateQuestion(qmPopup.trackingReminderNotification.variableName);\n    } else {\n        qmLog.pushDebug('popup addToSyncQueueAndCloseOrUpdateQuestion: Calling hidePopupPostNotificationsDeleteLocalAndClosePopup...');\n        hidePopupPostNotificationsDeleteLocalAndClosePopup();\n    }\n}\nvar onLastValueButtonClicked = function() {\n    var buttonId = this.id;\n    qmLog.pushDebug('onLastValueButtonClicked buttonId ' + buttonId);\n    if (buttonId === \"lastValueButton\") {\n        qmPopup.trackingReminderNotification.action = 'track';\n        qmPopup.trackingReminderNotification.modifiedValue = qmPopup.trackingReminderNotification.actionArray[0].modifiedValue;\n    } else if (buttonId === \"secondToLastValueButton\") {\n        qmPopup.trackingReminderNotification.action = 'track';\n        qmPopup.trackingReminderNotification.modifiedValue = qmPopup.trackingReminderNotification.actionArray[1].modifiedValue;\n    } else if (buttonId === \"thirdToLastValueButton\") {\n        qmPopup.trackingReminderNotification.action = 'track';\n        qmPopup.trackingReminderNotification.modifiedValue = qmPopup.trackingReminderNotification.actionArray[2].modifiedValue;\n    } else if (buttonId === \"snoozeButton\") {\n        qmPopup.trackingReminderNotification.action = 'snooze';\n    } else if (buttonId === \"skipButton\") {\n        qmPopup.trackingReminderNotification.action = 'skip';\n    }\n    addToSyncQueueAndCloseOrUpdateQuestion();\n};\nfunction hidePopup() {\n    window.qmLog.info('hidePopup: resizing to ' + ratingPopupWidth + \" x 0 \");\n    window.resizeTo(ratingPopupWidth, 0);\n}\nfunction showLoader(){\n    var sectionRate = getRatingSectionElement();\n    var loader = document.getElementById(\"loader\");\n    loader.style.display = \"block\";\n    sectionRate.style.display = \"none\";\n    getQuestionElement().style.display = \"none\";\n}\nfunction unHidePopup() {\n    window.qmLog.info('unHidePopup: resizing to ' + ratingPopupWidth + \" x \" + ratingPopupHeight);\n    window.resizeTo(ratingPopupWidth, ratingPopupHeight);\n}\n// function hideLoader() {\n//     var sectionRate = getRatingSectionElement();\n//     var loader = document.getElementById(\"loader\");\n//     loader.className = \"invisible\";\n//     loader.style.display = \"none\";\n//     sectionRate.style.display = \"block\";\n//     sectionRate.className = \"visible\";\n// }\nfunction updateQuestion(variableName) {\n    qmLog.pushDebug(\"popup: updateQuestion...\");\n    if(!variableName || typeof variableName !== \"string\"){\n        qmLog.pushDebug(\"popup: variableName is ...\" + JSON.stringify(variableName));\n        if(!qmPopup.trackingReminderNotification){\n            qmLog.pushDebug(\"popup: no qmPopup.trackingReminderNotification present. Calling  getMostRecentUniqueNotificationNotInSyncQueue...\");\n            qmPopup.trackingReminderNotification = qm.notifications.getMostRecentUniqueNotificationNotInSyncQueue();\n            if(!qmPopup.trackingReminderNotification){\n                qmLog.pushDebug(\"popup: getMostRecentUniqueNotificationNotInSyncQueue returned nothing...\");\n                qm.notifications.closePopup();\n                return;\n            }\n        }\n        variableName = qmPopup.trackingReminderNotification.variableName;\n        qmLog.pushDebug(\"popup: qmPopup.trackingReminderNotification.variableName is \" + variableName);\n    }\n    var questionText;\n    variableName = qmPopup.trackingReminderNotification.displayName || variableName;\n    if(qmPopup.trackingReminderNotification.unitAbbreviatedName === '/5'){\n        questionText = \"How is your \" + variableName.toLowerCase() + \"?\";\n        if(variableName.toLowerCase() === 'meditation'){\n            qmLog.error(\"Asking \"+questionText+\"!\",  \"qmPopup.trackingReminderNotification is: \" + JSON.stringify(qmPopup.trackingReminderNotification),\n                {trackingReminderNotification: qmPopup.trackingReminderNotification});\n        }\n        getRatingSectionElement().style.display = \"block\";\n        getLastValueSectionElement().style.display = \"none\";\n    } else {\n        function setLastValueButtonProperties(textElement, buttonElement, notificationAction) {\n            if(notificationAction.modifiedValue !== null){\n                buttonElement.style.display = \"none\";\n                var size = 30 - notificationAction.shortTitle.length * 12/3;\n                buttonElement.style.fontSize = size + \"px\";\n                textElement.innerHTML = notificationAction.shortTitle;\n                buttonElement.style.display = \"inline-block\";\n            } else {\n                buttonElement.style.display = \"none\";\n            }\n        }\n        setLastValueButtonProperties(getLastValueElement(), getLastValueButtonElement(), qmPopup.trackingReminderNotification.actionArray[0]);\n        setLastValueButtonProperties(getSecondToLastValueElement(), getSecondToLastValueButtonElement(), qmPopup.trackingReminderNotification.actionArray[1]);\n        setLastValueButtonProperties(getThirdToLastValueElement(), getThirdToLastValueButtonElement(), qmPopup.trackingReminderNotification.actionArray[2]);\n        getRatingSectionElement().style.display = \"none\";\n        getLastValueSectionElement().style.display = \"block\";\n        questionText = \"Record \" + variableName + \" (\" + qmPopup.trackingReminderNotification.unitAbbreviatedName + \")\";\n        if(qmPopup.trackingReminderNotification.unitAbbreviatedName === 'count'){questionText = \"Record \" + variableName;}\n    }\n    if(qmPopup.trackingReminderNotification.question){questionText = qmPopup.trackingReminderNotification.question;}\n    window.qmLog.pushDebug('popup: Updating question to ' + questionText);\n    getQuestionElement().innerHTML = questionText;\n    document.title = questionText;\n    if(qm.platform.isChromeExtension()){\n        qmLog.pushDebug('popup: Setting question display to none ');\n        getQuestionElement().style.display = \"none\";\n    } else {\n        getInboxButtonElement().style.display = \"none\";\n        qmLog.pushDebug('NOT setting question display to none because not on Chrome');\n    }\n    unHidePopup();\n}\nfunction getQuestionElement() {\n    return document.getElementById(\"question\");\n}\nfunction getInboxButtonElement() {\n    return document.getElementById(\"buttonInbox\");\n}\nfunction getLastValueElement() {return document.getElementById(\"lastValue\");}\nfunction getSecondToLastValueElement() {\n    return document.getElementById(\"secondToLastValue\");\n}\nfunction getThirdToLastValueElement() {\n    return document.getElementById(\"thirdToLastValue\");\n}\nfunction getLastValueButtonElement() {return document.getElementById(\"lastValueButton\");}\nfunction getSecondToLastValueButtonElement() {return document.getElementById(\"secondToLastValueButton\");}\nfunction getThirdToLastValueButtonElement() {return document.getElementById(\"thirdToLastValueButton\");}\nfunction getLastValueSectionElement() {\n    return document.getElementById(\"lastValueSection\");\n}\nfunction getRatingSectionElement() {\n    return document.getElementById(\"sectionRate\");\n}\ndocument.addEventListener('DOMContentLoaded', function() {\n    qmLog.pushDebug(\"popup addEventListener: popup.js DOMContentLoaded\");\n    var wDiff = (380 - window.innerWidth);\n    var hDiff = (70 - window.innerHeight);\n    window.resizeBy(wDiff, hDiff);\n    ratingPopupHeight = window.innerHeight;\n    ratingPopupWidth = window.innerWidth;\n    if(window.qm.urlHelper.getParam(\"trackingReminderNotificationId\")){\n        qmPopup.trackingReminderNotification = {action: 'track', trackingReminderNotificationId: window.qm.urlHelper.getParam('trackingReminderNotificationId'),\n            variableName: window.qm.urlHelper.getParam(\"variableName\"), valence: window.qm.urlHelper.getParam(\"valence\"), unitAbbreviatedName: '/5'};\n    } else {\n        qmLog.pushDebug(\"popup addEventListener: calling getMostRecentUniqueNotificationNotInSyncQueue...\");\n        qmPopup.trackingReminderNotification = qm.notifications.getMostRecentUniqueNotificationNotInSyncQueue();\n    }\n    if (qmPopup.trackingReminderNotification){\n        qmLog.pushDebug(\"popup addEventListener: calling updateQuestion...\");\n        updateQuestion(qmPopup.trackingReminderNotification.variableName);\n    } else {\n        qmLog.pushDebug(\"popup addEventListener: Calling hidePopup...\");\n        hidePopup();\n        qm.notifications.refreshNotifications(updateQuestion, qm.notifications.closePopup);\n    }\n    qmLog.pushDebug(\"popup addEventListener: calling setFaceButtonListeners...\");\n    setFaceButtonListeners();\n    qmLog.pushDebug(\"popup addEventListener: calling setLastValueButtonListeners...\");\n    setLastValueButtonListeners();\n    qmLog.pushDebug(\"popup addEventListener: \" + qm.notifications.getNumberInGlobalsOrLocalStorage() +\n        \" notifications in InGlobalsOrLocalStorage on popup DOMContentLoaded\");\n    qmLog.pushDebug(\"popup addEventListener: calling qm.notifications.refreshIfEmptyOrStale...\");\n    qm.notifications.refreshIfEmptyOrStale();\n    qmLog.pushDebug(\"popup addEventListener: calling getUserFromLocalStorage...\");\n    qm.userHelper.getUserFromLocalStorageOrApi();\n});\nqmLog.pushDebug(\"popup addEventListener: calling setupBugsnag...\");\nqmLog.setupBugsnag();\n"]}